(defparameter *LEARNED-SCHEMAS* '(
(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-1.PR ?X_L ?X_J (KA (UP.PRT CLEAN.V) ?X_L)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_B BAD.A))
			(!R2 (?X_B MOOD.N))
			(!R3 (?X_E GROUND.N))
			(!R4 (?X_K AGENT.N))
			(!R5 (?X_J BROTHER.N))
			(!R6 (?X_J (PERTAIN-TO ?X_K)))
			(!R7 (?X_L CAN.N))
			(!R8 (?X_L (OF.P (K PAINT.N))))
		)
		(:STEPS
			(?X_A (?X_J ((ADV-A (IN.P ?X_B)) BE.V)))
			(?X_D (?X_J (OPEN.V ?X_L)))
			(?X_G (?X_J (((ADV-A (ON.P ?X_E)) SPLASH.V) ?X_L)))
			(?X_I (?X_K (TELL.V ?X_J (KA (UP.PRT CLEAN.V) ?X_L))))
			(?X_N (?X_J ((ADV-A (FOR.P (KA (UP.PRT CLEAN.V) ?X_L))) REFUSE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_D)))
			(!W2 (?X_A (BEFORE ?X_G)))
			(!W3 (?X_A (BEFORE ?X_I)))
			(!W4 (?X_A (BEFORE ?X_N)))
			(!W5 (?X_D (BEFORE ?X_G)))
			(!W6 (?X_D (BEFORE ?X_I)))
			(!W7 (?X_D (BEFORE ?X_N)))
			(!W8 (?X_G (BEFORE ?X_I)))
			(!W9 (?X_G (BEFORE ?X_N)))
			(!W10 (?X_I (BEFORE ?X_N)))
		)
	)
	(
			"A brother of a agent is in a bad mood."
			"A brother of a agent opens a can of paint."
			"A brother of a agent splashes a can of paint on a ground."
			"A agent tells a brother of a agent up clean a can of paint."
			"A brother of a agent refuses for up clean a can of paint."
	)
)



(
	(EPI-SCHEMA ((?X_B COMPOSITE-SCHEMA-2.PR) ** ?E)
		(:ROLES
			(!R1 (?X_B (PLUR CHICKEN.N)))
		)
		(:STEPS
			(?X_D (?X_B ((ADV-A (TO.P ?X_A)) RUN.V)))
		)
	)
	(
			"A chickens run to X_A."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) FALL.1.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B (VERY.ADV TIRED.A)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A BED.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.1.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.1.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.1.V) ?L2))
			(?X_C (?X_B ((ADV (ASLEEP.ADV QUICKLY.A)) FALL.1.V)))
			(?X_C (?X_B FALL.1.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? FALL.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.1.V) (KA WORK.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA WORK.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA WORK.V))))
			(!R5 (?X_B (VERY.ADV TIRED.A)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A BED.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (KA WORK.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (KA WORK.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (KA WORK.V))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (KA WORK.V)))
	     ((ADV-A (TO.P (KA WORK.V))) GO.1.V))))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (KA WORK.V))) GO.1.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (KA WORK.V))) GO.1.V) (KA WORK.V)))
			(?X_C (?X_B GO.1.V))
			(?X_C (?X_B GO.1.V (KA WORK.V)))
			(?X_C (?X_B (LOCATION_ADV.? GO.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-3.PR ?L2 (KA WORK.V))) ** ?E)
		(:ROLES
			(!R1 (?X_H BED.N))
			(!R2 (?X_H (PERTAIN-TO ?X_I)))
			(!R3 ((KA WORK.V) DESTINATION.N))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_I AGENT.N))
			(!R6 (?X_I (VERY.ADV TIRED.A)))
		)
		(:STEPS
			(?X_E (?X_I (DOWN.PRT ((ADV-A (IN.P ?X_H)) LAY.V))))
			(?X_G (?X_I ((ADV-A (FROM.P ?L1)) GO.1.V) (KA WORK.V)))
			(?X_A (?X_I (DOWN.PRT ((ADV-A (IN.P ?X_H)) LAY.V))))
			(?X_C (?X_I ((ADV-A (FROM.P ?L1)) FALL.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
			(!W2 (?X_E (BEFORE ?X_C)))
			(!W3 (?X_G (BEFORE ?X_A)))
			(!W4 (?X_G (BEFORE ?X_C)))
			(!W5 (?X_A (BEFORE ?X_C)))
		)
	)
	(
			"A agent very tired lays down in a bed of a agent very tired."
			"A agent very tired go.31s working from L1."
			"A agent very tired lays down in a bed of a agent very tired."
			"A agent very tired fall.33s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-4.PR (KA ((ADV-A (TO.P ?X_A)) GO.V)))) ** ?E)
		(:ROLES
			(!R1 (?X_A BEACH.N))
			(!R2 (?X_D WATER.N))
			(!R3 (?X_G GOOD.A))
			(!R4 (?X_G DAY.N))
			(!R5 (?X_H (PERTAIN-TO ?X_J)))
			(!R6 (?X_I (PERTAIN-TO ?X_J)))
		)
		(:STEPS
			(?X_C (?X_J (WANT.V (KA ((ADV-A (TO.P ?X_A)) GO.V)))))
			(?X_F (?X_J ((ADV-A (IN.P ?X_D)) SWAM.V)))
			(?X_L ((ADV-E (DURING ?X_G)) (?X_J HAVE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_F)))
			(!W2 (?X_C (BEFORE ?X_L)))
			(!W3 (?X_F (BEFORE ?X_L)))
		)
	)
	(
			"X_J wants to a beach going."
			"X_J swims in a water."
			"X_J has DURING a good day."
		adding constraint (WE$0$93.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.1.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_A (PLUR KID.N)))
			(!R6 (?X_B YARD.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.1.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-5.PR ?X_F ?X_H ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_H (K OTHER.A) HOUSE.N))
			(!R2 (?X_F NEW.A))
			(!R3 (?X_F HOUSE.N))
			(!R4 (?X_F (SO.ADV BIG.A)))
			(!R5 (?X_F (IS.V ?X_G)))
			(!R6 (?X_I AGENT.N))
			(!R7 (?X_H (PERTAIN-TO ?X_I)))
			(!R8 (?X_J (PLUR KID.N)))
			(!R9 (?X_K OBJECT.N))
			(!R10 (?X_K YARD.N))
			(!R11 (NOT (?X_K ACTION.N)))
			(!R12 (NOT (?X_K AGENT.N)))
		)
		(:STEPS
			(?X_E (?X_I ((JUST.ADV BUY.V) ?X_F)))
			(?X_A (?X_F (TO.P ?X_H)))
			(?X_C (?X_J LIKE.1.V ?X_K))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A agent buys a new house so big is X_G just."
			"A new house so big is X_G is to."
			"A kids like.62 a object yard."
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (ON.P ?X_A)) FIND.1.V) ?O)) ** ?X_I)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_A (TO.P (K BED.N))))
			(!R5 (?X_A WAY.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_B NIGHT.N))
			(!R8 (?X_B LATE.A))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?O (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?O (AT.P ?L)))))))
			(?I5 (NOT ((ADV-E (DURING ?X_B)) (?X_C (HAVE.V ?O)))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?O (AT.P ?L))))))
			(?X_G ((ADV-E (DURING ?X_B)) (?X_C (HAVE.V ?O))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_I))
			(!W2 (?X_I (SAME-TIME ?X_F)))
			(!W3 (?X_I (RIGHT-AFTER ?X_D)))
			(!W4 (?X_E (BEFORE ?X_F)))
			(!W5 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R (COMPOSITE-SCHEMA-6.PR ?X_Q ?X_B ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_N LATE.A))
			(!R2 (?X_N NIGHT.N))
			(!R3 (?X_Q (TO.P (K BED.N))))
			(!R4 (?X_Q WAY.N))
			(!R5 (?X_Q (PERTAIN-TO ?X_R)))
			(!R6 (?X_R AGENT.N))
			(!R7 (?O ENTITY.N))
		)
		(:STEPS
			(?X_P (?X_R (ON.P ?X_Q)))
			(?X_C (?X_R (UP.PRT WAKE.V)))
			(?X_D (?X_R (UP.PRT WAKE.V)))
			(?X_E (?X_R (((ADV-A (ON.P ?X_Q)) FIND.1.V) ?O)))
			(?X_M ((ADV-E (DURING ?X_N)) (?X_R HAVE.V)))
			(?X_K (?X_R ((ADV-A (FOR.P (EIGHT.D (PLUR HOUR.N)))) SLEEP.V)))
			(?X_I (?X_A (BE.V ?X_B)))
			(?X_G (?X_A (BE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_P (BEFORE ?X_E)))
			(!W2 (?X_P (BEFORE ?X_M)))
			(!W3 (?X_P (BEFORE ?X_K)))
			(!W4 (?X_P (BEFORE ?X_I)))
			(!W5 (?X_P (BEFORE ?X_G)))
			(!W6 (?X_C (BEFORE ?X_I)))
			(!W7 (?X_D (BEFORE ?X_G)))
			(!W8 (?X_E (BEFORE ?X_M)))
			(!W9 (?X_E (BEFORE ?X_K)))
			(!W10 (?X_E (BEFORE ?X_I)))
			(!W11 (?X_E (BEFORE ?X_G)))
			(!W12 (?X_M (BEFORE ?X_K)))
			(!W13 (?X_M (BEFORE ?X_I)))
			(!W14 (?X_M (BEFORE ?X_G)))
			(!W15 (?X_K (BEFORE ?X_I)))
			(!W16 (?X_K (BEFORE ?X_G)))
		)
	)
	(
			"A agent is on."
			"A agent wakes up."
			"A agent wakes up."
			"A agent find.87s a entity on a to bed way of a agent."
			"A agent has DURING a late night."
			"A agent sleeps for eight hours."
			"X_A is X_B."
			"X_A is X_B."
	)
)



(
	(EPI-SCHEMA ((?X_C TAKE.1.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_D {REF}.N))
			(!R7 (?X_A BACKPACK.N))
			(!R8 (?X_A (PERTAIN-TO ?X_C)))
			(!R9 (?X_B STUFF.N))
			(!R10 (?X_D (OF.P ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?G2 (?X_C (NEED.V ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_D (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((OFF.ADV TAKE.2.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_B BACKPACK.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-7.PR (K (TOO.ADV HEAVY.A)) ?X_O ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_L STUFF.N))
			(!R2 (?X_O (OF.P ?X_L)))
			(!R3 (NOT (?X_M AGENT.N)))
			(!R4 (NOT (?X_M ACTION.N)))
			(!R5 (NOT (?X_N = ?X_M)))
			(!R6 (?X_M (PERTAIN-TO ?X_N)))
			(!R7 (?X_M BACKPACK.N))
			(!R8 (?X_O {REF}.N))
			(!R9 (?X_N MAN.N))
			(!R10 (NOT (?X_O AGENT.N)))
			(!R11 (NOT (?X_O ACTION.N)))
			(!R12 (NOT (?X_N = ?X_O)))
		)
		(:STEPS
			(?X_K (?X_N ((UP.PRT FILL.V) ?X_M)))
			(?X_A (?X_N ((UP.PRT FILL.V) ?X_M)))
			(?X_I (?X_N (KA TRY.V) ?X_M ON.P))
			(?X_G (?X_M (FEEL.V (K (TOO.ADV HEAVY.A)))))
			(?X_E (?X_N ((OFF.ADV TAKE.2.V) ?X_M)))
			(?X_C (?X_N TAKE.1.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_A)))
			(!W2 (?X_K (BEFORE ?X_I)))
			(!W3 (?X_K (BEFORE ?X_G)))
			(!W4 (?X_K (BEFORE ?X_E)))
			(!W5 (?X_K (BEFORE ?X_C)))
			(!W6 (?X_A (BEFORE ?X_I)))
			(!W7 (?X_A (BEFORE ?X_G)))
			(!W8 (?X_A (BEFORE ?X_E)))
			(!W9 (?X_A (BEFORE ?X_C)))
			(!W10 (?X_I (BEFORE ?X_G)))
			(!W11 (?X_I (BEFORE ?X_E)))
			(!W12 (?X_I (BEFORE ?X_C)))
			(!W13 (?X_G (BEFORE ?X_E)))
			(!W14 (?X_G (BEFORE ?X_C)))
			(!W15 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man fills a backpack of a man up."
			"A man fills a backpack of a man up."
			"A man is on."
			"A backpack of a man feels too heavy."
			"A man take.100s a backpack of a man off."
			"A man take.99s a of a stuff."
	)
)



(
	(EPI-SCHEMA (((K (PLUR BIRD.N)) ((ADV-A (FROM.P ?L1)) BECOME.1.V) ?X_B) **
	             ?X_C)
		(:ROLES
			(!R1 ((K (PLUR BIRD.N)) AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B (PLUR FRIEND.N)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_A MALE.A))
			(!R8 (?X_A AGENT.N))
		)
		(:GOALS
			(?G1 ((K (PLUR BIRD.N)) (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 ((K (PLUR BIRD.N)) (AT.P ?L1)))
			(?I2 (NOT ((K (PLUR BIRD.N)) (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT ((K (PLUR BIRD.N)) (AT.P ?L1))))
			(?P2 ((K (PLUR BIRD.N)) (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C ((K (PLUR BIRD.N)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.1.V)))
			(?X_C
	   ((K (PLUR BIRD.N))
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.1.V))))
			(?X_C
	   ((K (PLUR BIRD.N)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.1.V) ?X_B))
			(?X_C ((K (PLUR BIRD.N)) BECOME.1.V))
			(?X_C ((K (PLUR BIRD.N)) BECOME.1.V ?X_B))
			(?X_C ((K (PLUR BIRD.N)) (LOCATION_ADV.? BECOME.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (BEFORE ?X_D)))
			(!W7 (?X_E (SAME-TIME ?X_D)))
			(!W8 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (PLUR BIRD.N)) ((ADV-A (FROM.P ?L1)) BECOME.2.V) ?X_B) **
	             ?X_D)
		(:ROLES
			(!R1 ((K (PLUR BIRD.N)) AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B (PLUR FRIEND.N)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_A MALE.A))
			(!R8 (?X_A AGENT.N))
		)
		(:GOALS
			(?G1 ((K (PLUR BIRD.N)) (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 ((K (PLUR BIRD.N)) (AT.P ?L1)))
			(?I2 (NOT ((K (PLUR BIRD.N)) (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT ((K (PLUR BIRD.N)) (AT.P ?L1))))
			(?P2 ((K (PLUR BIRD.N)) (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_D ((K (PLUR BIRD.N)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.2.V)))
			(?X_D
	   ((K (PLUR BIRD.N))
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.2.V))))
			(?X_D
	   ((K (PLUR BIRD.N)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.2.V) ?X_B))
			(?X_D ((K (PLUR BIRD.N)) BECOME.2.V))
			(?X_D ((K (PLUR BIRD.N)) BECOME.2.V ?X_B))
			(?X_D ((K (PLUR BIRD.N)) (LOCATION_ADV.? BECOME.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (RIGHT-AFTER ?X_C)))
			(!W7 (?X_D (SAME-TIME ?X_F)))
			(!W8 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.1.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B ENTITY.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A (TAKE.V ?X_B)))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A BRING.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A WATCH.1.V (K (PLUR BIRD.N))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((K (PLUR BIRD.N)) ENTITY.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (?I PERTAIN-TO (K (PLUR BIRD.N))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (KNOW.V ?I))))))
		)
		(:PRECONDS
			(?I1 (?X_A (CAN.MD (SEE.V (K (PLUR BIRD.N))))))
		)
		(:POSTCONDS
			(?P1 ((K (PLUR BIRD.N)) (KNOW.V ?I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 0.5))
			(!N3 (!G1 NECESSARY-TO-DEGREE 0.5))
			(!N4 (!P1 NECESSARY-TO-DEGREE 0.5))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-8.PR (K (PLUR BINOCULAR.N)) ?X_O ?X_M ?L2
	               (K (PLUR BIRD.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_L MALE.A))
			(!R2 (?X_L AGENT.N))
			(!R3 (?X_O (PERTAIN-TO ?X_L)))
			(!R4 (?X_M ENTITY.N))
			(!R5 (?X_M SMALLER-THAN.N ?X_N))
			(!R6 (?L2 DESTINATION.N))
			(!R7 (?L2 OUTSIDE.N))
			(!R8 (?X_N AGENT.N))
			(!R9 (?X_O DESTINATION.N))
			(!R10 (?X_O (PLUR FRIEND.N)))
			(!R11 ((K (PLUR BIRD.N)) AGENT.N))
		)
		(:STEPS
			(?X_K (?X_N (BUY.V (K (PLUR BINOCULAR.N)))))
			(?X_C ((K (PLUR BIRD.N)) ((ADV-A (FROM.P ?L1)) BECOME.1.V) ?X_O))
			(?X_I (?X_N TRANSPORT_OBJECT.1.V ?X_M ?L2))
			(?X_G (?X_N (SEE.V (K (PLUR BIRD.N)))))
			(?X_E (?X_N WATCH.1.V (K (PLUR BIRD.N))))
			(?X_A ((K (PLUR BIRD.N)) ((ADV-A (FROM.P ?L1)) BECOME.2.V) ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_A)))
			(!W5 (?X_C (BEFORE ?X_A)))
			(!W6 (?X_I (BEFORE ?X_G)))
			(!W7 (?X_I (BEFORE ?X_E)))
			(!W8 (?X_I (BEFORE ?X_A)))
			(!W9 (?X_G (BEFORE ?X_E)))
			(!W10 (?X_G (BEFORE ?X_A)))
			(!W11 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A agent buys binoculars."
			"Birds become.116 a destination friends of a male agent from L1."
			"A agent transport object.113s a entity a destination outside."
			"A agent sees birds."
			"A agent watch.114s birds."
			"Birds become.117 a destination friends of a male agent from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B GET.1.V (K UPSET.A)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K UPSET.A) AGENT.N)))
			(!R3 (NOT ((K UPSET.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (K UPSET.A))))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A PHONE.N))
			(!R8 (?X_A NEW.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (K UPSET.A)))))))
			(?G2 (?X_B (NEED.V (K UPSET.A))))
			(?G3 (?X_B (WANT.V (K UPSET.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K UPSET.A))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K UPSET.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K UPSET.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-9.PR ?X_L (K UPSET.A))) ** ?E)
		(:ROLES
			(!R1 (?X_H (PLUR WOOD.N)))
			(!R2 (?X_I DAY.N))
			(!R3 (?X_L NEW.A))
			(!R4 (?X_L PHONE.N))
			(!R5 (?X_L (PERTAIN-TO ?X_M)))
			(!R6 (?X_M AGENT.N))
			(!R7 (NOT ((K UPSET.A) AGENT.N)))
			(!R8 (NOT ((K UPSET.A) ACTION.N)))
			(!R9 (NOT (?X_M = (K UPSET.A))))
		)
		(:STEPS
			(?X_K (?X_M (HAVE.V ?X_L)))
			(?X_G ((ADV-E (DURING ?X_I)) (?X_M ((ADV-A (IN.P ?X_H)) WALK.V))))
			(?X_E (?X_M (LOSE.V ?X_L)))
			(?X_A (?X_M (LOSE.V ?X_L)))
			(?X_C (?X_M GET.1.V (K UPSET.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_G)))
			(!W2 (?X_K (BEFORE ?X_A)))
			(!W3 (?X_K (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_A)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_A)))
			(!W7 (?X_E (BEFORE ?X_C)))
			(!W8 (?X_A (BEFORE ?X_C)))
		)
	)
	(
			"A agent has a new phone of a agent."
			"A agent walks DURING a day in a woods."
			"A agent loses a new phone of a agent."
			"A agent loses a new phone of a agent."
			"A agent get.120s upset."
	)
)



(
	(EPI-SCHEMA (((K TAB.N) (COMPOSITE-SCHEMA-10.PR ?X_M ?X_R ?X_A)) ** ?E)
		(:ROLES
			(!R1 (?X_E PET.A))
			(!R2 (?X_E (IS.V (K TIP.N))))
			(!R3 (?X_E DOG.N))
			(!R4 ((ADV-E (DURING (K NIGHT.N))) (?X_F AT.P)))
			(!R5 (?X_F RUG.N))
			(!R6 (?X_E (ON.P ?X_F)))
			(!R7 (?X_J MAT.N))
			(!R8 (?X_I ?X_J MAT.N))
			(!R9 (?X_M (PERTAIN-TO (K TAB.N))))
			(!R10 (?X_M EAR.N))
			(!R11 (?X_R PAW.N))
			(!R12 (?X_R (PERTAIN-TO (K TAB.N))))
		)
		(:STEPS
			(?X_H (?X_E ((ADV-A (ON.P ?X_F)) SLEEP.V)))
			(?X_L ((K TAB.N) ((ADV-A (ON.P ?X_J)) SLEEP.V)))
			(?X_B ((K TAB.N) (TO.P ?X_M)))
			(?X_C ((K TAB.N) UP.P))
			(?X_O ((K TAB.N) (PUT.V ?X_R)))
			(?X_Q ((K TAB.N) ?X_A (WITH.P ?X_R)))
			(?X_D ((K TAB.N) (((ADV-A (WITH.P ?X_R)) PAT.V) ?X_A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_L)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_H (BEFORE ?X_C)))
			(!W4 (?X_H (BEFORE ?X_O)))
			(!W5 (?X_H (BEFORE ?X_Q)))
			(!W6 (?X_H (BEFORE ?X_D)))
			(!W7 (?X_L (BEFORE ?X_B)))
			(!W8 (?X_L (BEFORE ?X_C)))
			(!W9 (?X_L (BEFORE ?X_O)))
			(!W10 (?X_L (BEFORE ?X_Q)))
			(!W11 (?X_L (BEFORE ?X_D)))
			(!W12 (?X_B (BEFORE ?X_C)))
			(!W13 (?X_B (BEFORE ?X_O)))
			(!W14 (?X_B (BEFORE ?X_Q)))
			(!W15 (?X_B (BEFORE ?X_D)))
			(!W16 (?X_C (BEFORE ?X_O)))
			(!W17 (?X_C (BEFORE ?X_Q)))
			(!W18 (?X_C (BEFORE ?X_D)))
			(!W19 (?X_O (BEFORE ?X_Q)))
			(!W20 (?X_O (BEFORE ?X_D)))
			(!W21 (?X_Q (BEFORE ?X_D)))
		)
	)
	(
			"A pet is tip dog on a rug sleeps on a rug."
			"Tab sleeps on a mat."
			"Tab is to."
			"Tab is up."
			"Tab puts a paw of tab."
			"Tab is with."
			"Tab pats X_A with a paw of tab."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) CLIMB.1.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A BOAT.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) CLIMB.1.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) CLIMB.1.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) CLIMB.1.V) ?L2))
			(?X_D
	   (?X_C
	    ((ADV-A (ON.P (K (L X (AND (X TOP.N) (X (OF.P (THE.D BOAT.N))))))))
	     CLIMB.1.V)))
			(?X_D (?X_C CLIMB.1.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? CLIMB.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) FLOAT.1.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B RIVER.N))
			(!R6 (?X_A BOAT.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) FLOAT.1.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FLOAT.1.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) FLOAT.1.V) ?L2))
			(?X_D (?X_C ((ADV-A (DOWN.P ?X_B)) FLOAT.1.V)))
			(?X_D (?X_C FLOAT.1.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? FLOAT.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-11.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_M BOAT.N))
			(!R2 (?X_L RIVER.N))
			(!R3 (?X_M (PERTAIN-TO ?X_N)))
			(!R4 (?X_N MAN.N))
			(!R5 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_M (OVER.PRT TIP.V)))
			(?X_K (?X_N ((ADV-A (FROM.P ?L1)) FLOAT.1.V) ?L2))
			(?X_A (?X_M (OVER.PRT TIP.V)))
			(?X_G (?X_N ((ADV-A (FROM.P ?L1)) CLIMB.1.V) ?L2))
			(?X_E (?X_N RESCUE.V))
			(?X_C (?X_N RESCUE.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_A)))
			(!W2 (?X_I (BEFORE ?X_G)))
			(!W3 (?X_I (BEFORE ?X_E)))
			(!W4 (?X_I (BEFORE ?X_C)))
			(!W5 (?X_K (BEFORE ?X_A)))
			(!W6 (?X_K (BEFORE ?X_G)))
			(!W7 (?X_K (BEFORE ?X_E)))
			(!W8 (?X_K (BEFORE ?X_C)))
			(!W9 (?X_A (BEFORE ?X_G)))
			(!W10 (?X_A (BEFORE ?X_E)))
			(!W11 (?X_A (BEFORE ?X_C)))
			(!W12 (?X_G (BEFORE ?X_E)))
			(!W13 (?X_G (BEFORE ?X_C)))
		)
	)
	(
			"A boat of a man tips over."
			"A man float.159s a destination from L1."
			"A boat of a man tips over."
			"A man climb.158s a destination from L1."
			"A man rescues."
			"A man rescues."
	)
)



(
	(EPI-SCHEMA ((?X_B GET.2.V (K SICK.A)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K SICK.A) AGENT.N)))
			(!R3 (NOT ((K SICK.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (K SICK.A))))
			(!R6 (?X_A MOTHER.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (K SICK.A)))))))
			(?G2 (?X_B (NEED.V (K SICK.A))))
			(?G3 (?X_B (WANT.V (K SICK.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K SICK.A))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K SICK.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K SICK.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-12.PR ?X_L (K SICK.A))) ** ?E)
		(:ROLES
			(!R1 (?X_I STORE.N))
			(!R2 (?X_M MOTHER.N))
			(!R3 (?X_L SLIGHT.A))
			(!R4 (?X_L COLD.N))
			(!R5 (?X_M (PERTAIN-TO ?X_N)))
			(!R6 (?X_N AGENT.N))
			(!R7 (NOT ((K SICK.A) AGENT.N)))
			(!R8 (NOT ((K SICK.A) ACTION.N)))
			(!R9 (NOT (?X_N = (K SICK.A))))
		)
		(:STEPS
			(?X_K (?X_N (HAVE.V ?X_L)))
			(?X_H (?X_M ((ADV-A (TO.P ?X_I)) GO.V)))
			(?X_F (?X_N GO.V))
			(?X_D (?X_N (ANYWAY.ADV SWAM.V)))
			(?X_B (?X_N GET.2.V (K SICK.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_D)))
			(!W3 (?X_K (BEFORE ?X_B)))
			(!W4 (?X_H (BEFORE ?X_D)))
			(!W5 (?X_H (BEFORE ?X_B)))
			(!W6 (?X_F (BEFORE ?X_B)))
			(!W7 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent has a slight cold."
			"A mother of a agent goes to a store."
			"A agent goes."
			"A agent swims anyway."
			"A agent get.174s sick."
		adding constraint (I$0$275.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_H
	              (COMPOSITE-SCHEMA-13.PR (K MORE.A)
	               (KE (?X_H (HAVE.V (KA (BACK.ADV GO.V)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_A NEW.A))
			(!R2 (?X_A PIZZA.N))
			(!R3 (?X_A PLACE.N))
			(!R4 (?X_A (ABSOLUTELY.ADV AMAZING.A)))
			(!R5 (?X_H AGENT.N))
		)
		(:STEPS
			(?X_C ((ADV-E (DURING (K YESTERDAY.N))) (?X_H ((ADV-A (TO.P ?X_A)) GO.V))))
			(?X_E (?X_H (WANT.V (K MORE.A))))
			(?X_G (?X_H (KNOW.V (KE (?X_H (HAVE.V (KA (BACK.ADV GO.V))))))))
			(?X_J (?X_H (KNOW.V (KE (?X_H (HAVE.V (KA (BACK.ADV GO.V))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_G)))
			(!W3 (?X_C (BEFORE ?X_J)))
			(!W4 (?X_E (BEFORE ?X_G)))
			(!W5 (?X_E (BEFORE ?X_J)))
			(!W6 (?X_G (BEFORE ?X_J)))
		)
	)
	(
			"A agent goes DURING yesterday to a new pizza place absolutely amazing."
			"A agent wants more."
			"A agent knows a agent has back go."
			"A agent knows a agent has back go."
	)
)



(
	(EPI-SCHEMA ((?X_C ((TOO.ADV LIKE.2.V) ?X_D)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_C (PLUR FRIEND.N)))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_A (GLAD.A (KE (?X_A (BUY.V ?X_B))))))
			(!R8 (?X_B CAP.N))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.2.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_G (SAME-TIME ?X_F)))
			(!W3 (?X_G (RIGHT-AFTER ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((TOO.ADV LIKE.3.V) ?X_D)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_C (PLUR FRIEND.N)))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_A (GLAD.A (KE (?X_A (BUY.V ?X_B))))))
			(!R8 (?X_B CAP.N))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.3.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (SAME-TIME ?X_H)))
			(!W2 (?X_E (RIGHT-AFTER ?X_F)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-14.PR ?X_A ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_F (GLAD.A (KE (?X_F (BUY.V ?X_G))))))
			(!R2 (?X_H (PERTAIN-TO ?X_F)))
			(!R3 (?X_G CAP.N))
			(!R4 (?X_I OBJECT.N))
			(!R5 (?X_H (PLUR FRIEND.N)))
			(!R6 (NOT (?X_I ACTION.N)))
			(!R7 (NOT (?X_I AGENT.N)))
		)
		(:STEPS
			(?X_E (?X_F (BUY.V ?X_A)))
			(?X_C (?X_H ((TOO.ADV LIKE.2.V) ?X_I)))
			(E276.SK (?X_H ((TOO.ADV LIKE.3.V) ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E BEFORE ?X_C))
			(!W2 (?X_C BEFORE E276.SK))
		)
	)
	(
			"A glad a glad X_F buys X_G buys a cap buys X_A."
			"A friends of a glad X_F buys X_G like.210 a object too."
			"A friends of a glad X_F buys X_G like.211 a object too."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) WALK.1.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B PERSON.N))
			(!R2 (?X_A SIDE.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?X_A = ?X_C)))
			(!R5 (?X_C HILL.N))
			(!R6 (?X_A HILL.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) WALK.1.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?X_C)) WALK.1.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) WALK.1.V) ?X_C))
			(?X_D (?X_B WALK.1.V))
			(?X_D (?X_B ((UP.PRT WALK.1.V) ?X_C)))
			(?X_D (?X_B (LOCATION_ADV.? WALK.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-15.PR ?X_J ?X_A ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_J ROCK.N))
			(!R2 (?X_K BOY.N))
			(!R3 (?X_L HILL.N))
			(!R4 (?X_L SIDE.N))
			(!R5 (?X_M DESTINATION.N))
			(!R6 (?X_M HILL.N))
			(!R7 (NOT (?X_L = ?X_M)))
			(!R8 (?X_N PERSON.N))
		)
		(:STEPS
			(?X_I (?X_K (KICK.V ?X_J)))
			(?X_G (?X_J (LOOSE.ADV COME.V)))
			(?X_E (?X_N ((ADV-A (FROM.P ?X_L)) WALK.1.V) ?X_M))
			(?X_C (?X_J ((ALMOST.ADV HIT.V) ?X_A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A boy kicks a rock."
			"A rock comes loose."
			"A person walk.225s a destination hill from a hill side."
			"A rock hits X_A almost."
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_E)) PUT.1.V) ?X_D)) ** ?X_G)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (?X_E CONTAINER.N))
			(!R4 (NOT (?X_E AGENT.N)))
			(!R5 (?X_D SMALLER-THAN ?X_E))
			(!R6 (?X_E (AT.P (K SCHOOL.N))))
			(!R7 (?X_E DESK.N))
			(!R8 (?X_D (VERY.ADV MUCH.A)))
			(!R9 (?X_D FAN.N))
			(!R10 (?X_E (PERTAIN-TO ?X_C)))
			(!R11 (?X_D (PERTAIN-TO ?X_C)))
			(!R12 (?X_A (PERTAIN-TO ?X_C)))
			(!R13 (?X_A HAND.N))
			(!R14 (?X_D (IS.V ?X_B)))
			(!R15 (?X_B PRETTY.A))
			(!R16 (?X_B FAN.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (IN.P ?X_E))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D (IN.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (?X_D (IN.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_G (?X_C ((ADV-A (INTO.P ?X_E)) PUT.1.V) ?X_D))
			(?X_G (?X_C ((ADV-A (INSIDE.P ?X_E)) PUT.1.V) ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (RIGHT-AFTER ?X_F)))
			(!W2 (?X_G (SAME-TIME ?X_I)))
			(!W3 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_E)) PUT.2.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (?X_E CONTAINER.N))
			(!R4 (NOT (?X_E AGENT.N)))
			(!R5 (?X_D SMALLER-THAN ?X_E))
			(!R6 (?X_E (AT.P (K SCHOOL.N))))
			(!R7 (?X_E DESK.N))
			(!R8 (?X_E (PERTAIN-TO ?X_C)))
			(!R9 (?X_D FAN.N))
			(!R10 (?X_D (PERTAIN-TO ?X_C)))
			(!R11 (?X_D (VERY.ADV MUCH.A)))
			(!R12 (?X_A FAN.N))
			(!R13 (?X_A PRETTY.A))
			(!R14 (?X_D (IS.V ?X_A)))
			(!R15 (?X_B HAND.N))
			(!R16 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (IN.P ?X_E))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D (IN.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (?X_D (IN.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_F (?X_C ((ADV-A (INTO.P ?X_E)) PUT.2.V) ?X_D))
			(?X_F (?X_C ((ADV-A (INSIDE.P ?X_E)) PUT.2.V) ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (SAME-TIME ?X_I)))
			(!W2 (?X_F (RIGHT-AFTER ?X_G)))
			(!W3 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_U (COMPOSITE-SCHEMA-16.PR ?X_S ?X_Q ?X_A ?X_K ?X_W ?X_V)) ** ?E)
		(:ROLES
			(!R1 (?X_K HAND.N))
			(!R2 (?X_K (PERTAIN-TO ?X_U)))
			(!R3 (?X_Q KNIFE.N))
			(!R4 (?X_Q (HAS.V (TWO.D (PLUR BLADE.N)))))
			(!R5 (?X_P (IS.V ?X_Q)))
			(!R6 (?X_Q (PERTAIN-TO ?X_S)))
			(!R7 (?X_R FATHER.N))
			(!R8 (?X_R (PERTAIN-TO ?X_S)))
			(!R9 (?X_T PRETTY.A))
			(!R10 (?X_T FAN.N))
			(!R11 (?X_V (IS.V ?X_T)))
			(!R12 (?X_U AGENT.N))
			(!R13 (?X_W CONTAINER.N))
			(!R14 (?X_W (AT.P (K SCHOOL.N))))
			(!R15 (?X_W DESK.N))
			(!R16 (?X_W (PERTAIN-TO ?X_U)))
			(!R17 (?X_V SMALLER-THAN ?X_W))
			(!R18 (?X_V FAN.N))
			(!R19 (?X_V (PERTAIN-TO ?X_U)))
			(!R20 (?X_V (VERY.ADV MUCH.A)))
			(!R21 (NOT (?X_W AGENT.N)))
		)
		(:STEPS
			(?X_O (?X_R (BUY.V ?X_Q ?X_S)))
			(?X_B (?X_R (((ADV-A (FOR.P ?X_S)) BUY.V) ?X_Q)))
			(?X_M (?X_S (CARRY.V ?X_A)))
			(?X_C (?X_U (LIKE.V ?X_V)))
			(?X_J (?X_U (LIKE.V ?X_V)))
			(?X_H (?X_U (CARRY.V ?X_V ?X_K)))
			(?X_D (?X_U (((ADV-A (IN.P ?X_K)) CARRY.V) ?X_V)))
			(?X_F (?X_U (PUT.V ?X_V ?X_W)))
			(E314.SK (?X_U (((ADV-A (IN.P ?X_W)) PUT.1.V) ?X_V)))
			(E314.SK (?X_U (((ADV-A (IN.P ?X_W)) PUT.2.V) ?X_V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_B)))
			(!W2 (?X_O (BEFORE ?X_M)))
			(!W3 (?X_O (BEFORE ?X_C)))
			(!W4 (?X_O (BEFORE ?X_J)))
			(!W5 (?X_O (BEFORE ?X_H)))
			(!W6 (?X_O (BEFORE ?X_D)))
			(!W7 (?X_B (BEFORE ?X_M)))
			(!W8 (?X_B (BEFORE ?X_C)))
			(!W9 (?X_B (BEFORE ?X_J)))
			(!W10 (?X_B (BEFORE ?X_H)))
			(!W11 (?X_B (BEFORE ?X_D)))
			(!W12 (?X_M (BEFORE ?X_C)))
			(!W13 (?X_M (BEFORE ?X_J)))
			(!W14 (?X_M (BEFORE ?X_H)))
			(!W15 (?X_M (BEFORE ?X_D)))
			(!W16 (?X_C (BEFORE ?X_J)))
			(!W17 (?X_C (BEFORE ?X_H)))
			(!W18 (?X_C (BEFORE ?X_D)))
			(!W19 (?X_J (BEFORE ?X_H)))
			(!W20 (?X_J (BEFORE ?X_D)))
			(!W21 (?X_H (BEFORE ?X_D)))
			(!W22 (?X_F BEFORE E314.SK))
		)
	)
	(
			"A father of X_S buys a knife has two blades of X_S X_S."
			"A father of X_S buys a knife has two blades of X_S for X_S."
			"X_S carries X_A."
			"A agent likes a fan very much is a pretty fan of a agent."
			"A agent likes a fan very much is a pretty fan of a agent."
			"A agent carries a fan very much is a pretty fan of a agent a hand of a agent."
			"A agent carries a fan very much is a pretty fan of a agent in a hand of a agent."
			"A agent puts a fan very much is a pretty fan of a agent a container at school desk of a agent."
			"A agent put.253s a fan very much is a pretty fan of a agent in a container at school desk of a agent."
			"A agent put.254s a fan very much is a pretty fan of a agent in a container at school desk of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_B FIND.2.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C KID.N))
			(!R4 (?X_C ((ADV-A (ON.P ?X_A)) CRY.V)))
			(!R5 (?X_A BENCH.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A MAKE.1.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B NEW.A))
			(!R4 (?X_B FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-17.PR (KA (UP.PRT CHEER.V) ?X_M)
	               (K (L X (AND (X ICE.N) (X CREAM.N)))) ?X_M ?X_O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_M ((ADV-A (ON.P ?X_L)) CRY.V)))
			(!R2 (?X_L BENCH.N))
			(!R3 (?X_M KID.N))
			(!R4 (?X_N AGENT.N))
			(!R5 (?X_O NEW.A))
			(!R6 (?X_O FRIEND.N))
		)
		(:STEPS
			(?X_I (?X_N (WANT.V (KA (UP.PRT CHEER.V) ?X_M))))
			(?X_G (?X_N (BUY.V ?X_M (K (L X (AND (X ICE.N) (X CREAM.N)))))))
			(?X_E (?X_M SMILE.V))
			(?X_K (?X_N FIND.2.V ?X_M))
			(?X_C (?X_N MAKE.1.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_C)))
		)
	)
	(
			"A agent wants up cheer a on a bench cry kid."
			"A agent buys a on a bench cry kid ice cream."
			"A on a bench cry kid smiles."
			"A agent find.270s a on a bench cry kid."
			"A agent make.268s a new friend."
		adding constraint (I$0$378.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.2.V)
	              (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C)))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C)))))
			(!R5 (?X_C FARM.N))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (KA ((ADV-A (AT.P (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C))))
	     ((ADV-A (FOR.P (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C)))) GO.2.V))))
			(?X_D
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C))))
	      GO.2.V))))
			(?X_D
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C))))
	     GO.2.V)
	    (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C))))
			(?X_D (?X_A GO.2.V))
			(?X_D (?X_A GO.2.V (KA (((ADV-A (ON.P ?X_B)) VISIT.V) ?X_C))))
			(?X_D (?X_A (LOCATION_ADV.? GO.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B
	              (COMPOSITE-SCHEMA-18.PR ?X_A ?X_H
	               (KA (((ADV-A (ON.P ?X_N)) VISIT.V) ?X_O))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E VERY.A))
			(!R2 (?X_E FUN.N))
			(!R3 (?X_E DAY.N))
			(!R4 (?X_H LOT.N))
			(!R5 (?X_H (OF.P (K (PLUR ANIMAL.N)))))
			(!R6 (?X_O FARM.N))
			(!R7 (?X_M AGENT.N))
			(!R8 ((KA (((ADV-A (ON.P ?X_N)) VISIT.V) ?X_O)) DESTINATION.N))
		)
		(:STEPS
			(?X_L
	   (?X_M ((ADV-A (FROM.P ?L1)) GO.2.V)
	    (KA (((ADV-A (ON.P ?X_N)) VISIT.V) ?X_O))))
			(?X_J (?X_B (BE.V ?X_A)))
			(?X_G (?X_O (HAVE.V ?X_H)))
			(?X_D ((ADV-E (DURING ?X_E)) (?X_B BE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_J)))
			(!W2 (?X_L (BEFORE ?X_G)))
			(!W3 (?X_L (BEFORE ?X_D)))
			(!W4 (?X_J (BEFORE ?X_G)))
			(!W5 (?X_J (BEFORE ?X_D)))
			(!W6 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A agent go.284s on X_N visiting a farm from L1."
			"X_B is X_A."
			"A farm has a lot of animals."
			"X_B is DURING a very fun day."
	)
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-19.PR ?X_A ?X_J (KA (CUT.V ?X_I)) ?X_I)) **
	             ?E)
		(:ROLES
			(!R1 (?X_H GIRLFRIEND.N))
			(!R2 (?X_H (PERTAIN-TO ?X_J)))
			(!R3 (?X_I (PLUR NAIL.N)))
			(!R4 (?X_I (PERTAIN-TO ?X_J)))
		)
		(:STEPS
			(?X_B (?X_A GIRLFRIEND.N))
			(?X_E (?X_J (HAVE.V ?X_A)))
			(?X_G (?X_H (ASK.V ?X_J (KA (CUT.V ?X_I)))))
			(?X_C (?X_J (CUT.V ?X_I)))
			(?X_L (?X_J (CUT.V ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_E)))
			(!W2 (?X_B (BEFORE ?X_G)))
			(!W3 (?X_B (BEFORE ?X_C)))
			(!W4 (?X_B (BEFORE ?X_L)))
			(!W5 (?X_E (BEFORE ?X_G)))
			(!W6 (?X_E (BEFORE ?X_C)))
			(!W7 (?X_E (BEFORE ?X_L)))
			(!W8 (?X_G (BEFORE ?X_C)))
			(!W9 (?X_G (BEFORE ?X_L)))
			(!W10 (?X_C (BEFORE ?X_L)))
		)
	)
	(
			"X_A is girlfriend."
			"X_J has X_A."
			"A girlfriend of X_J asks X_J cutting a nails of X_J."
			"X_J cuts a nails of X_J."
			"X_J cuts a nails of X_J."
		adding constraint (I$7$418.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.3.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B DAY.N))
			(!R6 (?X_B NEXT.A))
			(!R7 (?X_A PIZZA.N))
			(!R8 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.3.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.3.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.3.V) ?L2))
			(?X_D ((ADV-E (DURING ?X_B)) (?X_C (BACK.PRT GO.3.V))))
			(?X_D (?X_C GO.3.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? GO.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-20.PR ?X_K ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C DAY.N))
			(!R2 (?X_C NEXT.A))
			(!R3 (?X_H PIZZA.N))
			(!R4 (?X_H (PERTAIN-TO ?X_L)))
			(!R5 (?X_K NEW.A))
			(!R6 (?X_K PIZZA.N))
			(!R7 (?X_K PLACE.N))
			(!R8 (?X_K GREAT.A))
			(!R9 (?X_L AGENT.N))
			(!R10 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_J (?X_K (UP.PRT OPEN.V)))
			(?X_G (?X_L (TRY.V ?X_K)))
			(?X_E (?X_L ((ADV-A (FOR.P (KA (CUSTOMIZE.V ?X_H)))) GOT.V)))
			(?X_B (?X_L ((ADV-A (FROM.P ?L1)) GO.3.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A new pizza place great opens up."
			"A agent tries a new pizza place great."
			"A agent gets for customizing a pizza of a agent."
			"A agent go.317s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.2.V ?X_C (KA (MAKE.V (K HONEY.N)))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C HOME.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?X_A LOCATION.N))
			(!R5 ((KA (MAKE.V (K HONEY.N))) DESTINATION.N))
			(!R6 (?X_B (PLUR BEE.N)))
			(!R7 (?X_C NECTAR.A))
			(!R8 (?X_A (PLUR FIELD.N)))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V (THAT (?X_C ((ADV-A (AT.P (KA (MAKE.V (K HONEY.N))))) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?X_A)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P (KA (MAKE.V (K HONEY.N))))) BE.V)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    (((ADV-A (TO.P (KA (MAKE.V (K HONEY.N)))))
	      ((ADV-A (FOR.P (KA (MAKE.V (K HONEY.N))))) TAKE.V))
	     ?X_C)))
			(?X_D (?X_B ((ADV-A (TO.P (KA (MAKE.V (K HONEY.N))))) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P (KA (MAKE.V (K HONEY.N))))) BRING.V) ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? TAKE.V) ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? CARRY.V) ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? BRING.V) ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A LIKE.4.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_A (PLUR BEE.N)))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.4.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (PLUR BEE.N)) ((TOO.ADV LIKE.5.V) ?X_A)) ** ?X_B)
		(:ROLES
			(!R1 ((K (PLUR BEE.N)) AGENT.N))
			(!R2 (NOT (?X_A ACTION.N)))
			(!R3 (NOT (?X_A AGENT.N)))
			(!R4 (?X_A OBJECT.N))
			(!R5 (?X_A SWEET.A))
		)
		(:POSTCONDS
			(?P1 ((K (PLUR BEE.N)) (WANT.V (KA (HAVE.V ?X_A)))))
		)
		(:PARAPHRASES
			(?X_B ((K (PLUR BEE.N)) WANT.V ?X_A))
			(?X_B ((K (PLUR BEE.N)) (WANT.V ?X_A)))
			(?X_B ((K (PLUR BEE.N)) (LIKE.5.V ?X_A)))
			(?X_B ((K (PLUR BEE.N)) (LOVE.V ?X_A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C
	              (((ADV-A (IN.P ?X_A)) FIND.3.V)
	               (K (L X (AND (X SWEET.A) (X NECTAR.N))))))
	             ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_B LOCATION.N))
			(!R3 ((K (L X (AND (X SWEET.A) (X NECTAR.N)))) ENTITY.N))
			(!R4 (?X_C (PLUR BEE.N)))
			(!R5 (?X_A (PLUR FLOWER.N)))
			(!R6 (?X_A CLOVER.N))
			(!R7 (?X_B (PLUR FIELD.N)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?X_B)))
			(?I2 ((K (L X (AND (X SWEET.A) (X NECTAR.N)))) (AT.P ?X_B)))
			(?I3
	   (?X_C ((ADV-A (FOR.P (K (L X (AND (X SWEET.A) (X NECTAR.N)))))) SEARCH.V)))
			(?I4
	   (NOT
	    (?X_C
	     (KNOW.V (THAT ((K (L X (AND (X SWEET.A) (X NECTAR.N)))) (AT.P ?X_B)))))))
			(?I5 (NOT (?X_C (HAVE.V (K (L X (AND (X SWEET.A) (X NECTAR.N))))))))
		)
		(:POSTCONDS
			(?P1
	   (?X_C
	    (KNOW.V (THAT ((K (L X (AND (X SWEET.A) (X NECTAR.N)))) (AT.P ?X_B))))))
			(?P2 (?X_C (HAVE.V (K (L X (AND (X SWEET.A) (X NECTAR.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R
	              (COMPOSITE-SCHEMA-21.PR (K CLOVER.N) ?X_Q (KA (MAKE.V (K HONEY.N)))
	               ?X_N ?X_S (K (L X (AND (X SWEET.A) (X NECTAR.N))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E (PLUR FIELD.N)))
			(!R2 (?X_N OBJECT.N))
			(!R3 (NOT (?X_N ACTION.N)))
			(!R4 (NOT (?X_N AGENT.N)))
			(!R5 (?X_O (PLUR FLOWER.N)))
			(!R6 (?X_O CLOVER.N))
			(!R7 ((K (L X (AND (X SWEET.A) (X NECTAR.N)))) ENTITY.N))
			(!R8 (?X_Q SMALLER-THAN.N ?X_R))
			(!R9 (?X_Q NECTAR.A))
			(!R10 (?X_Q HOME.N))
			(!R11 (?X_R (PLUR BEE.N)))
			(!R12 ((KA (MAKE.V (K HONEY.N))) DESTINATION.N))
			(!R13 (?X_S OBJECT.N))
			(!R14 (?X_S SWEET.A))
			(!R15 ((K (PLUR BEE.N)) AGENT.N))
			(!R16 (NOT (?X_S ACTION.N)))
			(!R17 (NOT (?X_S AGENT.N)))
		)
		(:STEPS
			(?X_M (?X_R LIKE.4.V ?X_N))
			(?X_K
	   (?X_R
	    (((ADV-A (IN.P ?X_O)) FIND.3.V)
	     (K (L X (AND (X SWEET.A) (X NECTAR.N)))))))
			(?X_I (?X_R TRANSPORT_OBJECT.2.V ?X_Q (KA (MAKE.V (K HONEY.N)))))
			(?X_G ((K (PLUR BEE.N)) ((TOO.ADV LIKE.5.V) ?X_S)))
			(?X_D
	   (?X_S
	    ((ADV-A
	      (WITH.P
	       (SET-OF (K (L X (AND (X RED.A) (X CLOVER.N))))
	        (K (L X (AND (X YELLOW.A) (X (PLUR BUTTERCUP.N))))))))
	     ((ADV-A (IN.P ?X_E)) GROW.V))))
			(?X_B
	   ((K (L X ((X (PLUR HORSE.N)) AND (X AND) (X (PLUR COW.N)))))
	    (EAT.V (K CLOVER.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_K)))
			(!W2 (?X_M (BEFORE ?X_I)))
			(!W3 (?X_M (BEFORE ?X_G)))
			(!W4 (?X_M (BEFORE ?X_D)))
			(!W5 (?X_M (BEFORE ?X_B)))
			(!W6 (?X_K (BEFORE ?X_I)))
			(!W7 (?X_K (BEFORE ?X_G)))
			(!W8 (?X_K (BEFORE ?X_D)))
			(!W9 (?X_K (BEFORE ?X_B)))
			(!W10 (?X_I (BEFORE ?X_G)))
			(!W11 (?X_I (BEFORE ?X_D)))
			(!W12 (?X_I (BEFORE ?X_B)))
			(!W13 (?X_G (BEFORE ?X_D)))
			(!W14 (?X_G (BEFORE ?X_B)))
			(!W15 (?X_D (BEFORE ?X_B)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) COME.1.V) ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_D DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_D)))
			(!R5 (?X_C (VERY.ADV TINY.A)))
			(!R6 (?X_D (K FIRST.A) LESSON.N))
			(!R7 (?X_D (PERTAIN-TO ?X_C)))
			(!R8 (?X_A (PERTAIN-TO ?X_C)))
			(!R9 (?X_A LAP.N))
			(!R10 (?X_B (PLUR KNEE.N)))
			(!R11 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?X_D)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) ((ADV-A (FOR.P ?X_D)) COME.1.V))))
			(?X_E
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_D)) COME.1.V))))
			(?X_E (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) COME.1.V) ?X_D))
			(?X_E (?X_C COME.1.V))
			(?X_E (?X_C COME.1.V ?X_D))
			(?X_E (?X_C (LOCATION_ADV.? COME.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (SAME-TIME ?X_H)))
			(!W7 (?X_E (RIGHT-AFTER ?X_F)))
			(!W8 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) COME.2.V) ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_D DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_D)))
			(!R5 (?X_C (VERY.ADV TINY.A)))
			(!R6 (?X_D (PERTAIN-TO ?X_C)))
			(!R7 (?X_D (K FIRST.A) LESSON.N))
			(!R8 (?X_A (PERTAIN-TO ?X_C)))
			(!R9 (?X_A (PLUR KNEE.N)))
			(!R10 (?X_B LAP.N))
			(!R11 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?X_D)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) ((ADV-A (FOR.P ?X_D)) COME.2.V))))
			(?X_E
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_D)) COME.2.V))))
			(?X_E (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) COME.2.V) ?X_D))
			(?X_E (?X_C COME.2.V))
			(?X_E (?X_C COME.2.V ?X_D))
			(?X_E (?X_C (LOCATION_ADV.? COME.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (SAME-TIME ?X_H)))
			(!W7 (?X_E (RIGHT-AFTER ?X_F)))
			(!W8 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-22.PR (KA (PLAY.V (K ACCORDION.N))) ?X_M
	               (K ACCORDION.N) ?X_N ?X_F ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_N (PLUR KNEE.N)))
			(!R2 (?X_F BIG.A))
			(!R3 (?X_F PAIN.N))
			(!R4 (?X_M LAP.N))
			(!R5 (?X_M (PERTAIN-TO ?X_O)))
			(!R6 (?X_N (PERTAIN-TO ?X_O)))
			(!R7 (?X_O AGENT.N))
			(!R8 (?X_O (VERY.ADV TINY.A)))
			(!R9 (?X_P DESTINATION.N))
			(!R10 (?X_P (PERTAIN-TO ?X_O)))
			(!R11 (?X_P (K FIRST.A) LESSON.N))
		)
		(:STEPS
			(?X_L (?X_O (WANT.V (KA (PLAY.V (K ACCORDION.N))))))
			(?X_J (?X_O (FOR.P ?X_P)))
			(?X_H (?X_O (PUT.V (K ACCORDION.N) ?X_M)))
			(?X_E (?X_O ?X_F (IN.P ?X_N)))
			(?X_A (?X_O ((ADV-A (FROM.P ?L1)) COME.1.V) ?X_P))
			(?X_A (?X_O ((ADV-A (FROM.P ?L1)) COME.2.V) ?X_P))
			(?X_B (?X_O (((ADV-A (ON.P ?X_M)) PUT.V) (K ACCORDION.N))))
			(?X_C (?X_O (((ADV-A (IN.P ?X_N)) FEEL.V) ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_A)))
			(!W2 (?X_L (BEFORE ?X_B)))
			(!W3 (?X_L (BEFORE ?X_C)))
			(!W4 (?X_J (BEFORE ?X_A)))
			(!W5 (?X_J (BEFORE ?X_B)))
			(!W6 (?X_J (BEFORE ?X_C)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_H (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
			(!W10 (?X_A (BEFORE ?X_B)))
			(!W11 (?X_A (BEFORE ?X_C)))
			(!W12 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"A agent very tiny wants playing accordion."
			"A agent very tiny is for."
			"A agent very tiny puts accordion a lap of a agent very tiny."
			"A agent very tiny is in."
			"A agent very tiny come.361s a destination of a agent very tiny from L1."
			"A agent very tiny come.363s a destination of a agent very tiny from L1."
			"A agent very tiny puts accordion on a lap of a agent very tiny."
			"A agent very tiny feels a big pain in a knees of a agent very tiny."
		adding constraint (HE$6$475.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.1.V ?X_B ?A) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B DAD.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?X_D (?X_A (ASK.V ?X_B ?A)))
			(?E2 (?X_B (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_E (?X_A (ASK.V ?X_B ?A)))
			(?X_E (?X_A (TELL.V ?X_B ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?X_D))
			(!W2 (?X_D CAUSE-OF ?E2))
			(!W3 (?X_E (BEFORE ?X_F)))
			(!W4 (?X_D (SAME-TIME ?X_F)))
			(!W5 (?X_D (RIGHT-AFTER ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A INFORM.1.V ?X_B ?I) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B DAD.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_C (?X_A TELL.V ?X_B ?I))
			(?X_C (?X_A LET.V ?X_B (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A INFORM.2.V ?X_B ?I) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B DAD.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_C (?X_A TELL.V ?X_B ?I))
			(?X_C (?X_A LET.V ?X_B (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_D)))
			(!W2 (?X_E (SAME-TIME ?X_D)))
			(!W3 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.2.V ?X_B (KA (INVEST.V ?X_C))) ** ?X_F)
		(:ROLES
			(!R1 (?X_A DAD.N))
			(!R2 (?X_B AGENT.N))
			(!R3 ((KA (INVEST.V ?X_C)) ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_C MONEY.N))
			(!R6 (?X_C SURPRISE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B (KA (INVEST.V ?X_C)))))
			(?G2 (?X_A (WANT.V (THAT (?X_A (INVEST.V ?X_C))))))
		)
		(:STEPS
			(?X_D (?X_A (ASK.V ?X_B (KA (INVEST.V ?X_C)))))
			(?E2 (?X_B (INVEST.V ?X_C)))
		)
		(:PARAPHRASES
			(?X_F (?X_A (ASK.V ?X_B (KA (INVEST.V ?X_C)))))
			(?X_F (?X_A (TELL.V ?X_B (KA (INVEST.V ?X_C)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?X_D))
			(!W2 (?X_D CAUSE-OF ?E2))
			(!W3 (?X_F (BEFORE ?X_G)))
			(!W4 (?X_D (SAME-TIME ?X_G)))
			(!W5 (?X_D (RIGHT-AFTER ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-23.PR ?X_H ?A ?X_I ?I ?X_J (KA (INVEST.V ?X_H))))
	             ** ?E)
		(:ROLES
			(!R1 (NOT (?X_J = ?X_I)))
			(!R2 (?A ACTION.N))
			(!R3 (NOT (?I ACTION.N)))
			(!R4 (?I INFORMATION.N))
			(!R5 ((KA (INVEST.V ?X_H)) ACTION.N))
			(!R6 (?X_J AGENT.N))
			(!R7 (?X_I DAD.N))
			(!R8 (?X_I (PERTAIN-TO ?X_J)))
			(!R9 (?X_H MONEY.N))
			(!R10 (?X_H SURPRISE.N))
			(!R11 (NOT (?X_I = ?X_J)))
		)
		(:STEPS
			(?X_G ((K BILL.N) (GET.V ?X_H)))
			(?X_E (?X_J REQUEST_ACTION.1.V ?X_I ?A))
			(?X_E (?X_J INFORM.2.V ?X_I ?I))
			(?X_A (?X_J INFORM.1.V ?X_I ?I))
			(?X_C (?X_I REQUEST_ACTION.2.V ?X_J (KA (INVEST.V ?X_H))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_A)))
			(!W2 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"Bill gets a money surprise."
			"A agent request action.367s a dad of a agent a action."
			"A agent inform.370s a dad of a agent a information."
			"A agent inform.369s a dad of a agent a information."
			"A dad of a agent request action.365s a agent investing a money surprise."
		adding constraint (I$0$490.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-24.PR (THAT (?X_J (PASV UNPLUG.V)))
	               (KE (?X_J (PASV UNPLUG.V))) ?X_J (KE ((K WIND.N) (IN.P ?X_K)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2 (?X_J FAN.N))
			(!R3 (?X_K ROOM.N))
		)
		(:STEPS
			(?X_B (?X_G ((ON.PRT TURN.V) ?X_J)))
			(?X_D (?X_G (SEE.V (THAT (?X_J (PASV UNPLUG.V))))))
			(?X_F (?X_G (THAT.P (KE (?X_J (PASV UNPLUG.V))))))
			(?X_I (?X_G (((ADV (BACK.ADV IN.A)) PLUG.V) ?X_J)))
			(?X_M (?X_J (BLOW.V (KE ((K WIND.N) (IN.P ?X_K))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
			(!W2 (?X_B (BEFORE ?X_F)))
			(!W3 (?X_B (BEFORE ?X_I)))
			(!W4 (?X_B (BEFORE ?X_M)))
			(!W5 (?X_D (BEFORE ?X_F)))
			(!W6 (?X_D (BEFORE ?X_I)))
			(!W7 (?X_D (BEFORE ?X_M)))
			(!W8 (?X_F (BEFORE ?X_I)))
			(!W9 (?X_F (BEFORE ?X_M)))
			(!W10 (?X_I (BEFORE ?X_M)))
		)
	)
	(
			"A agent turns a fan on."
			"A agent sees that a fan PASV unplugs."
			"A agent is that."
			"A agent plugs a fan ADV back in."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) LEAVE.1.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) LEAVE.1.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) LEAVE.1.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) LEAVE.1.V) ?L2))
			(?X_C (?X_B (EARLY.ADV LEAVE.1.V)))
			(?X_C (?X_B LEAVE.1.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? LEAVE.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.4.V) (K (TO.P (?X_B PLACE.N)))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (TO.P (?X_B PLACE.N))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (TO.P (?X_B PLACE.N))))))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
			(!R6 (?X_B FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K (TO.P (?X_B PLACE.N))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K (TO.P (?X_B PLACE.N)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K (TO.P (?X_B PLACE.N))))))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? (K (TO.P (?X_B PLACE.N))))) GO.4.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (TO.P (?X_B PLACE.N))))) GO.4.V))))
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K (TO.P (?X_B PLACE.N))))) GO.4.V)
	    (K (TO.P (?X_B PLACE.N)))))
			(?X_C (?X_A GO.4.V))
			(?X_C (?X_A GO.4.V (K (TO.P (?X_B PLACE.N)))))
			(?X_C (?X_A (LOCATION_ADV.? GO.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (SAME-TIME ?X_F)))
			(!W7 (?X_C (RIGHT-AFTER ?X_D)))
			(!W8 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-25.PR (KE (?X_K PLACE.N))
	               (KE (?X_L FEEL.V POOR.A)) ?L2 (K (TO.P (?X_K PLACE.N)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H HOUSE.N))
			(!R2 (?X_H HUGE.A))
			(!R3 (?X_K (PERTAIN-TO ?X_L)))
			(!R4 (?X_K FRIEND.N))
			(!R5 ((K (TO.P (?X_K PLACE.N))) DESTINATION.N))
			(!R6 (?L2 DESTINATION.N))
			(!R7 (?X_L AGENT.N))
		)
		(:STEPS
			(?X_J (?X_L (TO.P (KE (?X_K PLACE.N)))))
			(?X_A (?X_L ((ADV-A (FROM.P ?L1)) GO.4.V) (K (TO.P (?X_K PLACE.N)))))
			(?X_G (?X_H (MAKE.V (KE (?X_L FEEL.V POOR.A)))))
			(?X_E (?X_L ((ADV-A (FROM.P ?L1)) LEAVE.1.V) ?L2))
			(?X_C (?X_L ((ADV-A (FOR.P (KA ((ADV-A (TO.P ?X_K)) TALK.V)))) STOP.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_G)))
			(!W3 (?X_J (BEFORE ?X_E)))
			(!W4 (?X_J (BEFORE ?X_C)))
			(!W5 (?X_A (BEFORE ?X_G)))
			(!W6 (?X_A (BEFORE ?X_E)))
			(!W7 (?X_A (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent is to."
			"A agent go.6s to a friend of a agent place from L1."
			"A house huge makes a agent feels poor."
			"A agent leave.5s a destination from L1."
			"A agent stops for to a friend of a agent talking."
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (INTO.P ?X_B)) GIVE.1.V) ?X_A ?X_B)) ** ?X_E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B CRAVING.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
		)
		(:PRECONDS
			(?X_C (?X_A HAVE.V ?X_B))
			(?I2 (NOT (?X_A HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A HAVE.V ?X_B)))
			(?P2 (?X_A HAVE.V ?X_B))
		)
		(:PARAPHRASES
			(?X_E (?X_A ((ADV-A (TO.P ?X_A)) (GIVE.1.V ?X_B))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-26.PR (K GUILTY.A) ?X_K ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_K MAN.N))
			(!R2 (NOT (?X_L AGENT.N)))
			(!R3 (?X_L CRAVING.N))
		)
		(:STEPS
			(?X_J (?X_K (HAVE.V ?X_L)))
			(?X_H (?X_K (IGNORE.V ?X_L)))
			(?X_F (?X_L GROW.V))
			(?X_B (?X_K (FEEL.V (K GUILTY.A))))
			(?X_D (?X_K (((ADV-A (INTO.P ?X_L)) GIVE.1.V) ?X_K ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_D)))
			(!W2 (?X_H (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A man has a craving."
			"A man ignores a craving."
			"A craving grows."
			"A man feels guilty."
			"A man give.13s a man a craving into a craving."
		adding constraint (SHE$30$52.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-27.PR ?X_C)) ** ?E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?X_C (PERTAIN-TO ?X_D)))
		)
		(:STEPS
			(?X_A (?X_B (GIVE.V ?X_C)))
			(?X_F (?X_B (GIVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_F)))
		)
	)
	(
			"A man gives a of X_D."
			"A man gives a of X_D."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FOLLOW.1.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A THIRSTY.A))
			(!R6 (?X_B MAN.N))
			(!R7 (?X_B HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) FOLLOW.1.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) FOLLOW.1.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) FOLLOW.1.V) ?X_B))
			(?X_C (?X_A FOLLOW.1.V))
			(?X_C (?X_A (FOLLOW.1.V ?X_B)))
			(?X_C (?X_A (LOCATION_ADV.? FOLLOW.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) LEAVE.2.V) (KE (?X_B SIDE.N))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KE (?X_B SIDE.N)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KE (?X_B SIDE.N)))))
			(!R5 (?X_A THIRSTY.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KE (?X_B SIDE.N)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KE (?X_B SIDE.N))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KE (?X_B SIDE.N)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? (KE (?X_B SIDE.N)))) LEAVE.2.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KE (?X_B SIDE.N)))) LEAVE.2.V))))
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? (KE (?X_B SIDE.N)))) LEAVE.2.V)
	    (KE (?X_B SIDE.N))))
			(?X_C (?X_A LEAVE.2.V))
			(?X_C (?X_A ((NEVER.ADV LEAVE.2.V) (KE (?X_B SIDE.N)))))
			(?X_C (?X_A (LOCATION_ADV.? LEAVE.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-28.PR (K WATER.N) ?X_J ?X_I (KE (?X_K SIDE.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I DESTINATION.N))
			(!R2 (?X_I MAN.N))
			(!R3 (?X_I HOME.N))
			(!R4 (?X_J THIRSTY.A))
			(!R5 (?X_J DOG.N))
			(!R6 ((KE (?X_K SIDE.N)) DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_I (BRING.V ?X_J (K WATER.N))))
			(?X_F (?X_J ((ADV-A (FROM.P ?L1)) FOLLOW.1.V) ?X_I))
			(?X_D (?X_I (FED.V ?X_J)))
			(?X_B (?X_J ((ADV-A (FROM.P ?L1)) LEAVE.2.V) (KE (?X_K SIDE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A destination man home brings a thirsty dog water."
			"A thirsty dog follow.50s a destination man home from L1."
			"A destination man home fed a thirsty dog."
			"A thirsty dog leave.51s X_K side from L1."
	)
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-29.PR (SET-OF ?X_H ?X_G) ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_G (HAVE.V (K (L X (AND (X BLUE.A) (X (PLUR EYE.N))))))))
			(!R3 (?X_G (PLUR DOLL.N)))
			(!R4 (?X_G (PERTAIN-TO ?X_J)))
			(!R5 (?X_G (PERTAIN-TO ?X_H)))
			(!R6 (?X_I (K LITTLE.A) CHAIR.N))
			(!R7 (?X_I (PERTAIN-TO ?X_J)))
		)
		(:STEPS
			(?X_A (?X_C (SEE.V (SET-OF ?X_H ?X_G))))
			(?X_F (?X_C (SEE.V (SET-OF ?X_H ?X_G))))
			(?X_B (?X_H (IN.P ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_F)))
			(!W2 (?X_A (BEFORE ?X_B)))
			(!W3 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A agent sees X_H and a have blue eye dolls of X_J of X_H."
			"A agent sees X_H and a have blue eye dolls of X_J of X_H."
			"X_H is in."
		adding constraint (HE$4$104.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.5.V)
	              (K (L X (AND (X SUMMER.N) (X SCHOOL.N)))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (L X (AND (X SUMMER.N) (X SCHOOL.N)))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (L X (AND (X SUMMER.N) (X SCHOOL.N)))))))
			(!R5 (?X_A HOMEWORK.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V
	     (KA ((ADV-A (AT.P (K (L X (AND (X SUMMER.N) (X SCHOOL.N)))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K (L X (AND (X SUMMER.N) (X SCHOOL.N)))))))
		)
		(:PARAPHRASES
			(?X_D
	   (MUST.AUX-S
	    (?X_B
	     ((ADV-A (DESTINATION_PREP.? (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))
	      ((ADV-A (TO.P (K (L X (AND (X SUMMER.N) (X SCHOOL.N)))))) GO.5.V)))))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))
	      GO.5.V))))
			(?X_D
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))
	     GO.5.V)
	    (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))
			(?X_D (?X_B GO.5.V))
			(?X_D (?X_B GO.5.V (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))
			(?X_D (?X_B (LOCATION_ADV.? GO.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) BECOME.3.V)
	              (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N))))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N))))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N))))))))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (KA
	      ((ADV-A (AT.P (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N))))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N))))))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A
	    ((ADV-A
	      (DESTINATION_PREP.? (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
	     BECOME.3.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.? (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
	      BECOME.3.V))))
			(?X_C
	   (?X_A
	    ((ADV-A
	      (DESTINATION_PREP.? (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
	     BECOME.3.V)
	    (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
			(?X_C (?X_A BECOME.3.V))
			(?X_C (?X_A BECOME.3.V (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
			(?X_C (?X_A (LOCATION_ADV.? BECOME.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-30.PR ?X_I ?X_D
	               (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))
	               (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D LOT.N))
			(!R2 (?X_D (AT.P (K (L X (AND (X SUMMER.N) (X SCHOOL.N)))))))
			(!R3 (?X_I TEACHER.N))
			(!R4 (?X_L HOMEWORK.N))
			(!R5 (?X_L (PERTAIN-TO ?X_M)))
			(!R6 (?X_M AGENT.N))
			(!R7 ((K (L X (AND (X SUMMER.N) (X SCHOOL.N)))) DESTINATION.N))
			(!R8 (?X_N AGENT.N))
			(!R9 ((K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N))))) DESTINATION.N))
		)
		(:STEPS
			(?X_K
	   (?X_M ((ADV-A (FROM.P ?L1)) GO.5.V)
	    (K (L X (AND (X SUMMER.N) (X SCHOOL.N))))))
			(?X_H (?X_M (LIKE.V ?X_I)))
			(?X_F
	   (?X_N ((ADV-A (FROM.P ?L1)) BECOME.3.V)
	    (K (L X (AND (X GOOD.A) (X (PLUR FRIEND.N)))))))
			(?X_C (?X_A (LEARN.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_C)))
			(!W4 (?X_H (BEFORE ?X_F)))
			(!W5 (?X_H (BEFORE ?X_C)))
			(!W6 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.98s summer school from L1."
			"A agent likes a teacher."
			"A agent become.97s good friend from L1."
			"X_A learns a lot at summer school."
	)
)



(
	(EPI-SCHEMA ((?X_A COMPOSITE-SCHEMA-31.PR) ** ?E)
		(:STEPS
			(?X_D (?X_A ((ADV (VERY.ADV LATE.A)) (UP.PRT STAY.V))))
			(?X_F (?X_B WORK.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_F)))
		)
	)
	(
			"X_A stays ADV very late up."
			"X_B works."
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.3.V ?X_C ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C DOG.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_D DESTINATION.N))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
			(!R7 (?X_C (VERY.ADV OLD.A)))
			(!R8 (?X_D VET.N))
			(!R9 (?X_A (PERTAIN-TO ?X_C)))
			(!R10 (?X_A TIME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?X_D)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?X_D)) BE.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B (((ADV-A (TO.P ?X_D)) TAKE.V) ?X_C)))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) CARRY.V) ?X_C))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) BRING.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? TAKE.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? CARRY.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? BRING.V) ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?P1 POSTCOND-OF ?X_E))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((ADV-E (DURING ?X_A)) (?X_D (GET.3.V (K SICK.A)))) ** ?X_E)
		(:ROLES
			(!R1 (?X_D DOG.N))
			(!R2 (NOT ((K SICK.A) AGENT.N)))
			(!R3 (NOT ((K SICK.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_D = (K SICK.A))))
			(!R6 (?X_D (VERY.ADV OLD.A)))
			(!R7 (?X_A DAY.N))
			(!R8 (?X_D (PERTAIN-TO ?X_B)))
			(!R9 (?X_C TIME.N))
			(!R10 (?X_C (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (?X_D (HAVE.V (K SICK.A)))))))
			(?G2 (?X_D (NEED.V (K SICK.A))))
			(?G3 (?X_D (WANT.V (K SICK.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D HAVE.V (K SICK.A))))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 ((K SICK.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_D HAVE.V (K SICK.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-32.PR ?X_O (THAT (?X_A (BE.V ?X_L))) ?X_P ?X_N
	               (K SICK.A)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_L TIME.N))
			(!R2 (?X_L (PERTAIN-TO ?X_P)))
			(!R3 (?X_M DAY.N))
			(!R4 (NOT ((K SICK.A) AGENT.N)))
			(!R5 (NOT ((K SICK.A) ACTION.N)))
			(!R6 (NOT (?X_P = (K SICK.A))))
			(!R7 (?X_N DESTINATION.N))
			(!R8 (?X_N VET.N))
			(!R9 (?X_O AGENT.N))
			(!R10 (?X_P SMALLER-THAN.N ?X_O))
			(!R11 (?X_P (PERTAIN-TO ?X_O)))
			(!R12 (?X_P (VERY.ADV OLD.A)))
			(!R13 (?X_P DOG.N))
		)
		(:STEPS
			(?X_K ((ADV-E (DURING ?X_M)) (?X_P (GET.3.V (K SICK.A)))))
			(?X_I (?X_O TRANSPORT_OBJECT.3.V ?X_P ?X_N))
			(?X_G (?X_N (TELL.V ?X_O (THAT (?X_A (BE.V ?X_L))))))
			(?X_E (?X_N (TELL.V ?X_O (THAT (?X_A (BE.V ?X_L))))))
			(?X_C (?X_O ((SADLY.ADV (DOWN.ADV PUT.V)) ?X_P)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_C)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_E)))
			(!W7 (?X_I (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A very old dog of a agent get.123s sick DURING a day."
			"A agent transport object.118s a very old dog of a agent a destination vet."
			"A destination vet tells a agent that X_A is a time of a very old dog of a agent."
			"A destination vet tells a agent that X_A is a time of a very old dog of a agent."
			"A agent puts a very old dog of a agent sadly down."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) SURVIVE.1.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A BIRD.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) SURVIVE.1.V)))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) SURVIVE.1.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) SURVIVE.1.V) ?L2))
			(?X_B (?X_A SURVIVE.1.V))
			(?X_B (?X_A SURVIVE.1.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? SURVIVE.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P ?X_C)) PUT.3.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_C BOX.N))
			(!R4 (NOT (?X_C AGENT.N)))
			(!R5 (?X_B SMALLER-THAN ?X_C))
			(!R6 (?X_B BIRD.N))
			(!R7 (?X_C SHOE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (IN.P ?X_C))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B (IN.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (IN.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (INTO.P ?X_C)) PUT.3.V) ?X_B))
			(?X_D (?X_A ((ADV-A (INSIDE.P ?X_C)) PUT.3.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.4.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A BIRD.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B SHOE.N))
			(!R4 (?X_B BOX.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.5.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B BIRD.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-33.PR ?L2 ?X_N ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_M SMALLER-THAN ?X_N))
			(!R2 (?X_L AGENT.N))
			(!R3 (NOT (?X_N AGENT.N)))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_M BIRD.N))
			(!R6 (?X_N BOX.N))
			(!R7 (?X_N SHOE.N))
		)
		(:STEPS
			(?X_K (?X_L FIND.5.V ?X_M))
			(?X_I (?X_L (((ADV-A (IN.P ?X_N)) PUT.3.V) ?X_M)))
			(?X_G (?X_L (FED.V ?X_M)))
			(?X_E (?X_M ((ADV-A (FROM.P ?L1)) SURVIVE.1.V) ?L2))
			(?X_E (?X_M FIND.4.V ?X_N))
			(?X_C (?X_L (((ADV-A (IN.P ?X_A)) KEEP.V) ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_C)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_E)))
			(!W7 (?X_I (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent find.148s a bird."
			"A agent put.143s a bird in a box shoe."
			"A agent fed a bird."
			"A bird survive.146s a destination from L1."
			"A bird find.147s a box shoe."
			"A agent keeps a bird in X_A."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-34.PR (KA (AGAIN.ADV WATCH.V) ?X_F))) ** ?E)
		(:ROLES
			(!R1 (?X_F SHOW.N))
			(!R2 (?X_F (VERY.ADV FUNNY.A)))
		)
		(:STEPS
			(?X_C ((ADV-E (DURING (WATCH.V ?X_F (K YESTERDAY.N)))) (?X_A BE.V)))
			(?X_E (?X_A ((ADV (OUT.ADV LOUD.A)) LAUGH.V)))
			(?X_H (?X_A (WANT.V (KA (AGAIN.ADV WATCH.V) ?X_F))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_E (BEFORE ?X_H)))
		)
	)
	(
			"X_A is DURING watches a show very funny yesterday."
			"X_A laughs ADV out loud."
			"X_A wants again watch a show very funny."
		adding constraint (I$0$175.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_F COMPOSITE-SCHEMA-35.PR) ** ?E)
		(:ROLES
			(!R1 (?X_C BALL.N))
			(!R2 (?X_F APPLE.N))
			(!R3 (?X_G TREE.N))
		)
		(:STEPS
			(?X_E (?X_F ((ADV-A (LIKE.P ?X_C)) ROLL.V)))
			(?X_I (?X_F ((ADV-A (ON.P ?X_G)) GROW.V)))
			(?X_K
	   ((K (L X (AND (X MANY.A) (X (PLUR SPHERE.N)))))
	    ((ADV-A (ON.P (K (PLUR TREE.N)))) GROW.V)))
			(?X_M ((K (PLUR PEA.N)) ((ADV-A (ON.P (K (PLUR VINE.N)))) GROW.V)))
			(?X_O (?X_B ((ADV-A (ON.P (K (PLUR VINE.N)))) GROW.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_I)))
			(!W2 (?X_E (BEFORE ?X_K)))
			(!W3 (?X_E (BEFORE ?X_M)))
			(!W4 (?X_E (BEFORE ?X_O)))
			(!W5 (?X_I (BEFORE ?X_K)))
			(!W6 (?X_I (BEFORE ?X_M)))
			(!W7 (?X_I (BEFORE ?X_O)))
			(!W8 (?X_K (BEFORE ?X_M)))
			(!W9 (?X_K (BEFORE ?X_O)))
			(!W10 (?X_M (BEFORE ?X_O)))
		)
	)
	(
			"A apple rolls like a ball."
			"A apple grows on a tree."
			"Many sphere grows on trees."
			"Peas grow on vines."
			"X_B grows on vines."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.6.V) (K CHURCH.N)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K CHURCH.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K CHURCH.N))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K CHURCH.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K CHURCH.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K CHURCH.N))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (K CHURCH.N)))
	     ((ADV-A (TO.P (K CHURCH.N))) GO.6.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K CHURCH.N))) GO.6.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K CHURCH.N))) GO.6.V) (K CHURCH.N)))
			(?X_B (?X_A GO.6.V))
			(?X_B (?X_A GO.6.V (K CHURCH.N)))
			(?X_B (?X_A (LOCATION_ADV.? GO.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_C (AFTER ?X_B)))
			(!W7 (?X_C (AT-ABOUT ?X_D)))
			(!W8 (?X_E (AT-ABOUT ?X_D)))
			(!W9 (?X_E (AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.6.V) (K CHURCH.N)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K CHURCH.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K CHURCH.N))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K CHURCH.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K CHURCH.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K CHURCH.N))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (K CHURCH.N)))
	     ((ADV-A (TO.P (K CHURCH.N))) GO.6.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K CHURCH.N))) GO.6.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K CHURCH.N))) GO.6.V) (K CHURCH.N)))
			(?X_B (?X_A GO.6.V))
			(?X_B (?X_A GO.6.V (K CHURCH.N)))
			(?X_B (?X_A (LOCATION_ADV.? GO.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_C (AFTER ?X_B)))
			(!W7 (?X_C (AT-ABOUT ?X_D)))
			(!W8 (?X_E (AT-ABOUT ?X_D)))
			(!W9 (?X_E (AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_Q (COMPOSITE-SCHEMA-36.PR ?X_P ?X_J (K CHURCH.N))) ** ?E)
		(:ROLES
			(!R1 (?X_J UMBRELLA.N))
			(!R2 (?X_J (OF.P (K PAPER.N))))
			(!R3 (?X_I (OF.P ?X_J)))
			(!R4 (?X_J (IS.V ?X_K)))
			(!R5 (?X_P PARASOL.N))
			(!R6 (?X_P BLACK.A))
			(!R7 (?X_P SMALL.A))
			(!R8 (?X_P (OF.P (K SILK.N))))
			(!R9 (?X_Q AGENT.N))
			(!R10 ((K CHURCH.N) DESTINATION.N))
		)
		(:STEPS
			(?X_C (?X_Q ((ADV-A (FROM.P ?L1)) GO.6.V) (K CHURCH.N)))
			(?X_O (?X_Q (CARRY.V ?X_P)))
			(?X_D (?X_Q ((ADV-A (FROM.P ?L1)) GO.6.V) (K CHURCH.N)))
			(?X_M (?X_Q (CARRY.V ?X_P)))
			(?X_H (?X_A (CARRY.V ?X_J)))
			(?X_F (?X_J ((ADV-A (FROM.P ?X_B)) COME.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_O)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_F)))
			(!W4 (?X_O (BEFORE ?X_H)))
			(!W5 (?X_O (BEFORE ?X_F)))
			(!W6 (?X_D (BEFORE ?X_M)))
			(!W7 (?X_D (BEFORE ?X_H)))
			(!W8 (?X_D (BEFORE ?X_F)))
			(!W9 (?X_M (BEFORE ?X_H)))
			(!W10 (?X_M (BEFORE ?X_F)))
			(!W11 (?X_H (BEFORE ?X_F)))
		)
	)
	(
			"A agent go.192s church from L1."
			"A agent carries a parasol black small of silk."
			"A agent go.192s church from L1."
			"A agent carries a parasol black small of silk."
			"X_A carries a umbrella of paper is X_K."
			"A umbrella of paper is X_K comes from X_B."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FLY.1.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A BIRD.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A BABY.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.1.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.1.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.1.V) ?L2))
			(?X_B (?X_A (AWAY.ADV FLY.1.V)))
			(?X_B (?X_A FLY.1.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? FLY.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (IN.P ?X_A)) FIND.6.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B BIRD.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C BIRD.N))
			(!R4 (?X_B BABY.N))
			(!R5 (?X_A TREE.N))
			(!R6 (?X_C MOTHER.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-37.PR ?X_L
	               (K (L X (AND (X OUT.P) (X (OF.P (THE.D NEST.N)))))) ?L2 ?X_J))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J MOTHER.N))
			(!R2 (?X_J BIRD.N))
			(!R3 (?X_K TREE.N))
			(!R4 (?X_L BABY.N))
			(!R5 (?X_L BIRD.N))
			(!R6 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_L (((ADV-A (IN.P ?X_K)) FIND.6.V) ?X_J)))
			(?X_G (?X_J (TEACH.V ?X_L)))
			(?X_E
	   (?X_J (DROP.V ?X_L (K (L X (AND (X OUT.P) (X (OF.P (THE.D NEST.N)))))))))
			(?X_C (?X_L ((ADV-A (FROM.P ?L1)) FLY.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A baby bird find.221s a mother bird in a tree."
			"A mother bird teaches a baby bird."
			"A mother bird drops a baby bird out of."
			"A baby bird fly.212s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.7.V)
	              (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A FISH.N))
			(!R2 (?L1 LOCATION.N))
			(!R3
	   ((K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P))))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P))))))))
			(!R5 (?X_B WATER.N))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (KA
	      ((ADV-A
	        (AT.P (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))
	       BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2
	   (NOT
	    (?X_A (AT.P (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P))))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_A
	    ((ADV-A
	      (DESTINATION_PREP.?
	       (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))
	     GO.7.V)))
			(?X_D
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.?
	        (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))
	      GO.7.V))))
			(?X_D
	   (?X_A
	    ((ADV-A
	      (DESTINATION_PREP.?
	       (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))
	     GO.7.V)
	    (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))
			(?X_D (?X_A GO.7.V))
			(?X_D
	   (?X_A GO.7.V (K ((ADV-A (IN.P ?X_B)) (L X (AND (X BELLY.N) (X UP.P)))))))
			(?X_D (?X_A (LOCATION_ADV.? GO.7.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.7.V (K (L X (AND (X SAD.A) (X (TO.P ?X_C)))))) **
	             ?X_E)
		(:ROLES
			(!R1 (?X_A FISH.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K (L X (AND (X SAD.A) (X (TO.P ?X_C))))) ENTITY.N))
			(!R4 (?X_C MAN.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((K (L X (AND (X SAD.A) (X (TO.P ?X_C))))) (AT.P ?L)))
			(?I3
	   (?X_A ((ADV-A (FOR.P (K (L X (AND (X SAD.A) (X (TO.P ?X_C))))))) SEARCH.V)))
			(?I4
	   (NOT
	    (?X_A
	     (KNOW.V (THAT ((K (L X (AND (X SAD.A) (X (TO.P ?X_C))))) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (K (L X (AND (X SAD.A) (X (TO.P ?X_C)))))))))
		)
		(:POSTCONDS
			(?P1
	   (?X_A (KNOW.V (THAT ((K (L X (AND (X SAD.A) (X (TO.P ?X_C))))) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (K (L X (AND (X SAD.A) (X (TO.P ?X_C))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-38.PR ?X_L (K BAD.A) (KE (?X_L GO.V))
	               (K ((ADV-A (IN.P ?X_M)) (L X (AND (X BELLY.N) (X UP.P)))))
	               (K (L X (AND (X SAD.A) (X (TO.P ?X_K)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K MAN.N))
			(!R2 (?X_L FISH.N))
			(!R3 (?X_M WATER.N))
			(!R4
	   ((K ((ADV-A (IN.P ?X_M)) (L X (AND (X BELLY.N) (X UP.P))))) DESTINATION.N))
		)
		(:STEPS
			(?X_J (?X_K (CATCH.V ?X_L)))
			(?X_H (?X_L FIND.7.V (K (L X (AND (X SAD.A) (X (TO.P ?X_K)))))))
			(?X_F (?X_K (FEEL.V (K BAD.A))))
			(?X_D (?X_K (LET.V (KE (?X_L GO.V)))))
			(?X_B
	   (?X_L ((ADV-A (FROM.P ?L1)) GO.7.V)
	    (K ((ADV-A (IN.P ?X_M)) (L X (AND (X BELLY.N) (X UP.P)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_D)))
			(!W4 (?X_J (BEFORE ?X_B)))
			(!W5 (?X_H (BEFORE ?X_F)))
			(!W6 (?X_H (BEFORE ?X_D)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man catches a fish."
			"A fish find.227s sad to."
			"A man feels bad."
			"A man lets a fish goes."
			"A fish go.226s in a water belly up from L1."
		adding constraint (I$0$315.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-39.PR (KA (SEE.V ?X_C)) (KA LEAVE.V))) ** ?E)
		(:ROLES
			(!R1 (?X_C BASEBALL.N))
			(!R2 (?X_F (SO.ADV BORED.A)))
			(!R3 (?X_F AGENT.N))
		)
		(:STEPS
			(?X_E (?X_F ((PASV INVITE.V) (KA (SEE.V ?X_C)))))
			(?X_A (?X_F (DOWN.ADV SIT.V)))
			(?X_B (?X_F (DOWN.ADV SIT.V)))
			(?X_H (?X_F ((JUST.ADV WANT.V) (KA LEAVE.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
			(!W2 (?X_E (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_H)))
			(!W4 (?X_A (BEFORE ?X_B)))
			(!W5 (?X_A (BEFORE ?X_H)))
			(!W6 (?X_B (BEFORE ?X_H)))
		)
	)
	(
			"A so bored agent is PASV invites."
			"A so bored agent sits down."
			"A so bored agent sits down."
			"A so bored agent wants leaving just."
	)
)



(
	(EPI-SCHEMA ((?X_A ((AWAY.ADV GET.4.V) ?O)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A FLY.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?O)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?O))))))
			(?G2 (?X_A (NEED.V ?O)))
			(?G3 (?X_A (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?O)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-40.PR (KA (HIT.V ?X_P)) ?X_K ?X_P ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_K SON.N))
			(!R2 (?X_L MAN.N))
			(!R3 (?X_K (PERTAIN-TO ?X_L)))
			(!R4 (?X_O WALL.N))
			(!R5 (?X_P FLY.N))
			(!R6 (NOT (?O AGENT.N)))
			(!R7 (NOT (?O ACTION.N)))
			(!R8 (NOT (?X_P = ?O)))
		)
		(:STEPS
			(?X_N (?X_P ((ADV-A (ON.P ?X_O)) LAND.V)))
			(?X_J (?X_L (TRY.V (KA (HIT.V ?X_P)))))
			(?X_F (?X_L ((UP.PRT WAKE.V) ?X_K)))
			(?X_D (?X_K (GET.V ?X_P)))
			(?X_H (?X_P ((AWAY.ADV GET.4.V) ?O)))
			(?X_A (?X_L ((UP.PRT WAKE.V) ?X_K)))
			(?X_B (?X_K (GET.V ?X_P)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_N (BEFORE ?X_J)))
			(!W2 (?X_N (BEFORE ?X_H)))
			(!W3 (?X_N (BEFORE ?X_A)))
			(!W4 (?X_N (BEFORE ?X_B)))
			(!W5 (?X_J (BEFORE ?X_H)))
			(!W6 (?X_J (BEFORE ?X_A)))
			(!W7 (?X_J (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_A)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
			(!W11 (?X_H (BEFORE ?X_A)))
			(!W12 (?X_H (BEFORE ?X_B)))
			(!W13 (?X_A (BEFORE ?X_B)))
		)
	)
	(
			"A fly lands on a wall."
			"A man tries hitting a fly."
			"A man wakes a son of a man up."
			"A son of a man gets a fly."
			"A fly get.246s O away."
			"A man wakes a son of a man up."
			"A son of a man gets a fly."
		adding constraint (I$2$347.SK AGENT.N)
		adding constraint (HE$12$348.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.8.V)
	              (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N))) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N))))))
			(!R5 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (KA ((ADV-A (AT.P (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N))))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N)))))
	     ((ADV-A (FOR.P (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N))))) GO.8.V))))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.? (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N)))))
	      GO.8.V))))
			(?X_C
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N)))))
	     GO.8.V)
	    (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N)))))
			(?X_C (?X_A GO.8.V))
			(?X_C (?X_A GO.8.V (KA (((ADV-A (FOR.P ?X_B)) BUY.V) (K GAS.N)))))
			(?X_C (?X_A (LOCATION_ADV.? GO.8.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-41.PR
	               (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))) ?X_M
	               (KA (FORWARD.ADV PAY.V) ?X_B)
	               (KA (((ADV-A (FOR.P ?X_M)) BUY.V) (K GAS.N)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I PERSON.N))
			(!R2 (?X_L TIME.N))
			(!R3 (?X_M AGENT.N))
			(!R4 ((KA (((ADV-A (FOR.P ?X_M)) BUY.V) (K GAS.N))) DESTINATION.N))
			(!R5 (?X_N AGENT.N))
		)
		(:STEPS
			(?X_K (?X_L ?X_M (RUN.V (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))))))
			(?X_H (?X_I (SEE.V ?X_M)))
			(?X_F
	   (?X_N ((ADV-A (FROM.P ?L1)) GO.8.V)
	    (KA (((ADV-A (FOR.P ?X_M)) BUY.V) (K GAS.N)))))
			(?X_D (?X_N (TELL.V ?X_M (KA (FORWARD.ADV PAY.V) ?X_B))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_H (BEFORE ?X_F)))
			(!W5 (?X_H (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A time runs out of."
			"A person sees a agent."
			"A agent go.262s for a agent buying gas from L1."
			"A agent tells a agent forward pay X_B."
		adding constraint (HE$7$352.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.4.V (K (PLUR GROCERY.N)) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 ((K (PLUR GROCERY.N)) ENTITY.N))
			(!R3 ((K (PLUR GROCERY.N)) SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_A WIFE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT ((K (PLUR GROCERY.N)) ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 ((K (PLUR GROCERY.N)) ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V (K (PLUR GROCERY.N)))))
		)
		(:POSTCONDS
			(?P1 ((K (PLUR GROCERY.N)) ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) (K (PLUR GROCERY.N))))
			(?X_C (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) (K (PLUR GROCERY.N))))
			(?X_C (?X_B ((ADV-A (TO.P ?L2)) BRING.V) (K (PLUR GROCERY.N))))
			(?X_C (?X_B TAKE.V (K (PLUR GROCERY.N))))
			(?X_C (?X_B CARRY.V (K (PLUR GROCERY.N))))
			(?X_C (?X_B (BRING.V (K (PLUR GROCERY.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_F)) FIND.8.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C GROUND.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
			(!R5 (?X_A WIFE.N))
			(!R6 (?X_F INSIDE.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (ON.P ?X_A)) FIND.9.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D BAG.N))
			(!R4 (?X_A GROUND.N))
			(!R5 (?X_B WIFE.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A MAKE.2.V
	              (KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2
	   (NOT ((KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))) AGENT.N)))
			(!R3 (?X_B WIFE.N))
			(!R4 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT
	      ((KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))) EXIST.V)))))
			(?G2
	   (?X_A
	    (WANT.V
	     (KA
	      (HAVE.V (KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))))))))
		)
		(:PRECONDS
			(?I1
	   (NOT ((KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))) EXIST.V)))
		)
		(:POSTCONDS
			(?P1 ((KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))) EXIST.V))
			(?P2
	   (?X_A (HAVE.V (KE (?X_B ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-42.PR (K (PLUR GROCERY.N)) ?L2 ?X_N ?X_M
	               (KE (?X_P ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_M BAG.N))
			(!R2 (?X_N GROUND.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (?L2 HOME.N))
			(!R5 ((K (PLUR GROCERY.N)) ENTITY.N))
			(!R6 ((K (PLUR GROCERY.N)) SMALLER-THAN.N ?X_O))
			(!R7 (?X_P WIFE.N))
			(!R8 (?X_P (PERTAIN-TO ?X_O)))
			(!R9 (?X_O MAN.N))
			(!R10
	   (NOT ((KE (?X_P ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N))) AGENT.N)))
		)
		(:STEPS
			(?X_C (?X_P ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N)))
			(?X_L (?X_O (((ADV-A (ON.P ?X_N)) FIND.9.V) ?X_M)))
			(?X_J (?X_O (((ADV-A (AT.P ?X_F)) FIND.8.V) ?X_N)))
			(?X_H (?X_M (BE.V (K (PLUR GROCERY.N)))))
			(?X_E (?X_O TRANSPORT_OBJECT.4.V (K (PLUR GROCERY.N)) ?L2))
			(?X_A
	   (?X_O MAKE.2.V
	    (KE (?X_P ((ADV-A (WITH.P (K (PLUR GROCERY.N)))) DINNER.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
			(!W2 (?X_L (BEFORE ?X_J)))
			(!W3 (?X_L (BEFORE ?X_H)))
			(!W4 (?X_L (BEFORE ?X_E)))
			(!W5 (?X_L (BEFORE ?X_A)))
			(!W6 (?X_J (BEFORE ?X_H)))
			(!W7 (?X_J (BEFORE ?X_E)))
			(!W8 (?X_J (BEFORE ?X_A)))
			(!W9 (?X_H (BEFORE ?X_E)))
			(!W10 (?X_H (BEFORE ?X_A)))
			(!W11 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A wife of a man is with grocerys dinner."
			"A man find.297s a bag on a ground."
			"A man find.296s a ground at X_F."
			"A bag is grocerys."
			"A man transport object.291s grocerys a destination home."
			"A man make.303s a wife of a man with grocerys dinner."
		adding constraint (I$0$385.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) WALK.2.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PLUR WOOD.N)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.2.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.2.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.2.V) ?L2))
			(?X_C (?X_B ((ADV-A (THROUGH.P ?X_A)) WALK.2.V)))
			(?X_C (?X_B WALK.2.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? WALK.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A MAKE.3.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A ANIMAL.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B FUNNY.A))
			(!R4 (?X_B SOUND.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-43.PR ?X_N (K CLOSER.A) ?L2 ?X_O)) ** ?E)
		(:ROLES
			(!R1 (?X_C FOX.N))
			(!R2 (?X_L (PLUR WOOD.N)))
			(!R3 (?X_M AGENT.N))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_N ANIMAL.N))
			(!R6 (NOT (?X_O AGENT.N)))
			(!R7 (?X_O FUNNY.A))
			(!R8 (?X_O SOUND.N))
		)
		(:STEPS
			(?X_K (?X_M ((ADV-A (FROM.P ?L1)) WALK.2.V) ?L2))
			(?X_I (?X_M (HEAR.V ?X_N)))
			(?X_G (?X_N MAKE.3.V ?X_O))
			(?X_E (?X_M (GET.V (K CLOSER.A))))
			(?X_B (?X_N (OUT.PRT ((ADV-A (FOR.P (KA (BE.V ?X_C)))) TURN.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_E)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_B)))
			(!W10 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent walk.313s a destination from L1."
			"A agent hears a animal."
			"A animal make.314s a funny sound."
			"A agent gets closer."
			"A animal turns out for being a fox."
	)
)



(
	(EPI-SCHEMA ((?X_C
	              (COMPOSITE-SCHEMA-44.PR (K (PLUR PET.N))
	               (KA (FIND.V (?X_D (VERY.ADV HARD.A))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C ((FINALLY.ADV FIND.V) ?X_D)))
		)
		(:STEPS
			(?X_B (?X_C (LIKE.V (K (PLUR PET.N)))))
			(?X_F (?X_C (TRY.V (KA (FIND.V (?X_D (VERY.ADV HARD.A)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_F)))
		)
	)
	(
			"A finally find X_D likes pets."
			"A finally find X_D tries finding X_D very hard."
		adding constraint (ME$2$418.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA (((ADV-E (DURING (EVERY.D DAY.N)))
	              (?X_A (MAKE.4.V (K (SURE.A (KA (WATER.V ?X_B)))))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K (SURE.A (KA (WATER.V ?X_B)))) AGENT.N)))
			(!R3 (?X_B FLOWER.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT ((K (SURE.A (KA (WATER.V ?X_B)))) EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V (K (SURE.A (KA (WATER.V ?X_B)))))))))
		)
		(:PRECONDS
			(?I1 (NOT ((K (SURE.A (KA (WATER.V ?X_B)))) EXIST.V)))
		)
		(:POSTCONDS
			(?P1 ((K (SURE.A (KA (WATER.V ?X_B)))) EXIST.V))
			(?P2 (?X_A (HAVE.V (K (SURE.A (KA (WATER.V ?X_B)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-45.PR (KE (?X_L (PLANT.V ?X_M)))
	               (KE (?X_L (HAVE.V ?X_D))) (K (SURE.A (KA (WATER.V ?X_M))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D GREEN.A))
			(!R2 (?X_D THUMB.N))
			(!R3 (?X_E MALE.A))
			(!R4 (?X_E AGENT.N))
			(!R5 (?X_L AGENT.N))
			(!R6 (?X_M FLOWER.N))
			(!R7 (NOT ((K (SURE.A (KA (WATER.V ?X_M)))) AGENT.N)))
		)
		(:STEPS
			(?X_K (?X_A (LET.V (KE (?X_L (PLANT.V ?X_M))))))
			(?X_I (?X_M ((ADV (VERY.ADV QUICKLY.A)) GROW.V)))
			(?X_C (?X_E (SAY.V (KE (?X_L (HAVE.V ?X_D))))))
			(?X_G
	   ((ADV-E (DURING (EVERY.D DAY.N)))
	    (?X_L (MAKE.4.V (K (SURE.A (KA (WATER.V ?X_M))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_C)))
			(!W3 (?X_I (BEFORE ?X_C)))
		)
	)
	(
			"X_A lets a agent plants a flower."
			"A flower grows ADV very quickly."
			"A male agent says a agent has a green thumb."
			"A agent make.333s sure watering a flower DURING every day."
		adding constraint (I$0$438.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((BACK.ADV ((ADV-A (FROM.P ?X_A)) WALK.3.V)) ?L2)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_A = ?L2)))
			(!R5 (?X_A STORE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.3.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.3.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.3.V) ?L2))
			(?X_C (?X_B WALK.3.V))
			(?X_C (?X_B WALK.3.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? WALK.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) THANK.1.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B MAN.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) THANK.1.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) THANK.1.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) THANK.1.V) ?X_B))
			(?X_C (?X_A THANK.1.V))
			(?X_C (?X_A ((ANYWAY.ADV THANK.1.V) ?X_B)))
			(?X_C (?X_A (LOCATION_ADV.? THANK.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ANYWAY.ADV THANK.2.V) ?X_B ?I)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B MAN.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_C (?X_A TELL.V ?X_B ?I))
			(?X_C (?X_A LET.V ?X_B (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ANYWAY.ADV THANK.3.V) ?X_B ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (?X_B MAN.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (HAVE.V ?O))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?O))
			(?I2 (NOT (?X_B HAVE.V ?O)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A HAVE.V ?O)))
			(?P2 (?X_B HAVE.V ?O))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?X_B)) (THANK.3.V ?O))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (GIVE.2.V ?X_D ?X_E)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (?X_D AGENT.N))
			(!R4 (?X_A REST.N))
			(!R5 (?X_E RIDE.N))
			(!R6 (?X_B WAY.N))
			(!R7 (?X_A (OF.P ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_E))
			(?I2 (NOT (?X_D HAVE.V ?X_E)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?X_E)))
			(?P2 (?X_D HAVE.V ?X_E))
		)
		(:PARAPHRASES
			(?X_F (?X_C ((ADV-A (TO.P ?X_D)) (GIVE.2.V ?X_E))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R
	              (COMPOSITE-SCHEMA-46.PR (KE (?X_F ((ADV-A (TO.P ?X_R)) RUDE.A))) ?L2
	               ?I ?X_S ?O ?X_R ?X_Q))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F LITTLE.A))
			(!R2 (?X_N REST.N))
			(!R3 (?X_K HOT.A))
			(!R4 (?X_K DAY.N))
			(!R5 (?X_O WAY.N))
			(!R6 (?X_N (OF.P ?X_O)))
			(!R7 (?X_P LOCATION.N))
			(!R8 (?X_P STORE.N))
			(!R9 (NOT (?X_P = ?L2)))
			(!R10 (?L2 DESTINATION.N))
			(!R11 (?X_Q RIDE.N))
			(!R12 (NOT (?X_Q AGENT.N)))
			(!R13 (?X_S DESTINATION.N))
			(!R14 (NOT (?I ACTION.N)))
			(!R15 (?I INFORMATION.N))
			(!R16 (?X_R AGENT.N))
			(!R17 (?X_S MAN.N))
			(!R18 (NOT (?O AGENT.N)))
		)
		(:STEPS
			(?X_M (?X_R ((BACK.ADV ((ADV-A (FROM.P ?X_P)) WALK.3.V)) ?L2)))
			(?X_J ((ADV-E (DURING ?X_K)) (?X_A BE.V)))
			(?X_H (?X_S (GIVE.2.V ?X_R ?X_Q)))
			(?X_E (?X_S (BE.V (KE (?X_F ((ADV-A (TO.P ?X_R)) RUDE.A))))))
			(?X_C (?X_R ((ADV-A (FROM.P ?L1)) THANK.1.V) ?X_S))
			(?X_C (?X_R ((ANYWAY.ADV THANK.2.V) ?X_S ?I)))
			(?X_C (?X_R ((ANYWAY.ADV THANK.3.V) ?X_S ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_J)))
			(!W2 (?X_M (BEFORE ?X_H)))
			(!W3 (?X_M (BEFORE ?X_E)))
			(!W4 (?X_M (BEFORE ?X_C)))
			(!W5 (?X_J (BEFORE ?X_H)))
			(!W6 (?X_J (BEFORE ?X_E)))
			(!W7 (?X_J (BEFORE ?X_C)))
			(!W8 (?X_H (BEFORE ?X_E)))
			(!W9 (?X_H (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent walk.344s a destination back from a location store."
			"X_A is DURING a hot day."
			"A destination man give.357s a agent a ride."
			"A destination man is a little to a agent rude."
			"A agent thank.345s a destination man from L1."
			"A agent thank.351s a destination man a information anyway."
	)
)



(
	(EPI-SCHEMA ((?X_A COMPOSITE-SCHEMA-47.PR) ** ?E)
		(:ROLES
			(!R1 (?X_A PARROT.N))
		)
		(:STEPS
			(E3.SK (?X_A (CAN.AUX TALK.V)))
		)
	)
	(
			"ULF to English error"
		adding constraint (THEY$25$17.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.4.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.4.V)))
			(?X_C (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.4.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.4.V) ?L2))
			(?X_C (?X_B ((ADV-A (WITH.P ?X_A)) GO.4.V)))
			(?X_C (?X_B GO.4.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (SAME-TIME ?X_F)))
			(!W7 (?X_C (RIGHT-AFTER ?X_D)))
			(!W8 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.9.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A FRIEND.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.9.V)))
			(?X_D (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.9.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.9.V) ?L2))
			(?X_D (?X_B ((ADV-A (WITH.P ?X_A)) GO.9.V)))
			(?X_D (?X_B GO.9.V ?L2))
			(?X_D (?X_B (LOCATION_ADV.? GO.9.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (RIGHT-AFTER ?X_C)))
			(!W7 (?X_D (SAME-TIME ?X_F)))
			(!W8 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-48.PR (KA ((ADV-A (TO.P ?X_H)) GO.V)) ?X_I
	               (TWO.D (L X (AND (X DIFFERENT.A) (X (PLUR MOVIE.N))))) ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I FRIEND.N))
			(!R2 (?X_H (PLUR MOVIE.N)))
			(!R3 (?X_I (PERTAIN-TO ?X_J)))
			(!R4 (?X_J AGENT.N))
			(!R5 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_B (?X_J (WANT.V (KA ((ADV-A (TO.P ?X_H)) GO.V)))))
			(?X_G (?X_J (WITH.P ?X_I)))
			(?X_C (?X_J ((ADV-A (FROM.P ?L1)) GO.4.V) ?L2))
			(?X_C (?X_J ((ADV-A (FROM.P ?L1)) GO.9.V) ?L2))
			(?X_E (?X_J (SEE.V (TWO.D (L X (AND (X DIFFERENT.A) (X (PLUR MOVIE.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_C)))
			(!W2 (?X_B (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_C (BEFORE ?X_E)))
		)
	)
	(
			"A agent wants to a movies going."
			"A agent is with."
			"A agent go.6s a destination from L1."
			"A agent go.8s a destination from L1."
			"A agent sees two different movie."
	)
)



(
	(EPI-SCHEMA ((?X_A ((OFF.ADV TAKE.3.V) ?X_B)) ** ?X_E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B WATCH.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?X_C (?X_A ((OFF.ADV NEED.V) ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (BEFORE ?X_F)))
			(!W6 (?X_C (SAME-TIME ?X_F)))
			(!W7 (?X_C (RIGHT-AFTER ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-49.PR ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_J WATCH.N))
			(!R2 (?X_J (PERTAIN-TO ?X_I)))
			(!R3 (?X_I MAN.N))
			(!R4 (NOT (?X_J AGENT.N)))
			(!R5 (NOT (?X_J ACTION.N)))
			(!R6 (NOT (?X_I = ?X_J)))
		)
		(:STEPS
			(?X_H (?X_I (ON.P ?X_J)))
			(?X_A (?X_I ((ADV-A (ON.P ?X_J)) PUT.V)))
			(?X_F (?X_I ((OFF.ADV TAKE.3.V) ?X_J)))
			(?X_B (?X_I ((OFF.ADV TAKE.V) ?X_J)))
			(?X_D (?X_I (SHAKE.V ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_A)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_H (BEFORE ?X_D)))
			(!W4 (?X_A (BEFORE ?X_B)))
			(!W5 (?X_A (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_B)))
			(!W7 (?X_F (BEFORE ?X_D)))
			(!W8 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"A man is on."
			"A man puts on a watch of a man."
			"A man take.27s a watch of a man off."
			"A man takes a watch of a man off."
			"A man shakes a watch of a man."
	)
)



(
	(EPI-SCHEMA ((?X_H
	              (COMPOSITE-SCHEMA-50.PR
	               (KE ((ANOTHER.D (L X (AND (X TREE.N) (X |'S|)))) SHADOW.N))
	               (K (L X (AND (X MORE.A) (X SUN.N))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H TREE.N))
		)
		(:STEPS
			(?X_C (?X_H ((ADV-A (FOR.P (KA GROW.V))) START.V)))
			(?X_E
	   (?X_H (IN.P (KE ((ANOTHER.D (L X (AND (X TREE.N) (X |'S|)))) SHADOW.N)))))
			(?X_G (?X_H (NEED.V (K (L X (AND (X MORE.A) (X SUN.N)))))))
			(?X_J (?X_H (THEN.ADV (QUICKLY.ADV GROW.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_G)))
			(!W3 (?X_C (BEFORE ?X_J)))
			(!W4 (?X_E (BEFORE ?X_G)))
			(!W5 (?X_E (BEFORE ?X_J)))
			(!W6 (?X_G (BEFORE ?X_J)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-51.PR ?X_C)) ** ?E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_C DOLL.N))
			(!R3 (?X_A (HAVE.V ?X_C)))
			(!R4 (?X_C (PERTAIN-TO ?X_A)))
			(!R5 (?X_C (HAS.V ?X_B)))
			(!R6 (?X_C (PERTAIN-TO ?X_D)))
		)
		(:STEPS
			(?X_F (?X_A ((CAN.AUX SEE.V) ?X_C)))
		)
	)
	(
			"A agent having a doll of a agent have a doll of X_A has X_B of X_D has X_B of X_D sees a doll of a agent having a doll of X_A has X_B of X_D has X_B of X_D can."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) RUN.1.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C NEW.A))
			(!R6 (?X_A ((CANNOT.ADV CATCH.V) ?X_C)))
			(!R7 ((ADV-E (DURING ?X_B)) (?X_A (OUT.ADV IS.V))))
			(!R8 (?X_C (PERTAIN-TO ?X_A)))
			(!R9 (?X_B EVENING.N))
			(!R10 (?X_B (WALK.V ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.1.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.1.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.1.V) ?L2))
			(?X_D (?X_C (AWAY.PRT RUN.1.V)))
			(?X_D (?X_C RUN.1.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? RUN.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-52.PR ?X_J ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_J (PERTAIN-TO ?X_I)))
			(!R2 (?X_I ((CANNOT.ADV CATCH.V) ?X_J)))
			(!R3 (?X_H EVENING.N))
			(!R4 (?X_H (WALK.V ?X_J)))
			(!R5 ((ADV-E (DURING ?X_H)) (?X_I (OUT.ADV IS.V))))
			(!R6 (?X_J NEW.A))
			(!R7 (?X_J DOG.N))
			(!R8 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_G (?X_I (GET.V ?X_J)))
			(?X_A (?X_I (LOVE.V ?X_J)))
			(?X_E (?X_I (LOVE.V ?X_J)))
			(?X_C (?X_J ((ADV-A (FROM.P ?L1)) RUN.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_A)))
			(!W2 (?X_G (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_C)))
			(!W4 (?X_A (BEFORE ?X_C)))
			(!W5 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A cannot catch a new dog of a cannot catch a new dog of X_I gets a new dog of a cannot catch a new dog of X_I."
			"A cannot catch a new dog of a cannot catch a new dog of X_I loves a new dog of a cannot catch a new dog of X_I."
			"A cannot catch a new dog of a cannot catch a new dog of X_I loves a new dog of a cannot catch a new dog of X_I."
			"A new dog of a cannot catch a new dog of X_I run.73s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.10.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C BALL.N))
			(!R6 (?X_C PASS.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_A ARM.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? ?X_C))
	     (OUT.ADV ((ADV-A (FOR.P ?X_C)) GO.10.V)))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.10.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.10.V) ?X_C))
			(?X_D (?X_B GO.10.V))
			(?X_D (?X_B GO.10.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.10.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C PLAY.1.V) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_B TOY.N))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A ARM.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_B BALL.N))
			(!R9 (?X_B PASS.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (WITH.P ?X_B)) PLAY.1.V)))
			(?X_D (?X_C PLAY.1.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D PLAY.2.V) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C TOY.N))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_B GAME.N))
			(!R5 (NOT (?X_B AGENT.N)))
			(!R6 (?X_A ARM.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_C WINDOW.N))
			(!R9 (?X_B BALL.N))
			(!R10 (?X_B PASS.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (?X_D EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (WITH.P ?X_C)) PLAY.2.V)))
			(?X_E (?X_D PLAY.2.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-53.PR ?X_J (KA HEAL.V) ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_J ARM.N))
			(!R2 (?X_J (PERTAIN-TO ?X_L)))
			(!R3 (?X_K WINDOW.N))
			(!R4 (?X_L AGENT.N))
			(!R5 (?X_M DESTINATION.N))
			(!R6 (?X_M BALL.N))
			(!R7 (?X_M PASS.N))
		)
		(:STEPS
			(?X_C (MUST.AUX-S (?X_L (LET.V ?X_J (KA HEAL.V)))))
			(?X_I (?X_L PLAY.1.V))
			(?X_I (?X_L PLAY.2.V))
			(?X_G (?X_L ((ADV-A (FROM.P ?L1)) GO.10.V) ?X_M))
			(?X_E (?X_L (CATCH.V ?X_M)))
			(?X_A (MUST.AUX-S (?X_L (LET.V ?X_J (KA HEAL.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
			(!W2 (?X_I (BEFORE ?X_G)))
			(!W3 (?X_I (BEFORE ?X_E)))
			(!W4 (?X_I (BEFORE ?X_A)))
			(!W5 (?X_G (BEFORE ?X_E)))
			(!W6 (?X_G (BEFORE ?X_A)))
			(!W7 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A agent lets a arm of a agent healing must."
			"A agent play.99s."
			"A agent play.98s."
			"A agent go.104s a destination ball pass from L1."
			"A agent catches a destination ball pass."
			"A agent lets a arm of a agent healing must."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.11.V)
	              (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA ((ADV-A (FOR.P ?X_D)) LOOK.V)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))))
			(!R5 (?X_D (PLUR CLOTHE.N)))
			(!R6 ((ADV-E (DURING ?X_A)) (?X_D GONE.A)))
			(!R7 (?X_A NEXT.A))
			(!R8 (?X_A DAY.N))
			(!R9 (?X_B (PERTAIN-TO ?X_C)))
			(!R10 (?X_B WIFE.N))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V (KA ((ADV-A (AT.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
	     ((ADV-A (FOR.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))) GO.11.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
	      GO.11.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))) GO.11.V)
	    (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
			(?X_E (?X_C GO.11.V))
			(?X_E (?X_C GO.11.V (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
			(?X_E (?X_C (LOCATION_ADV.? GO.11.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.12.V)
	              (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA ((ADV-A (FOR.P ?X_D)) LOOK.V)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))))
			(!R5 ((ADV-E (DURING ?X_B)) (?X_D GONE.A)))
			(!R6 (?X_D (PLUR CLOTHE.N)))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_A WIFE.N))
			(!R9 (?X_B NEXT.A))
			(!R10 (?X_B DAY.N))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V (KA ((ADV-A (AT.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
	     ((ADV-A (FOR.P (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))) GO.12.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
	      GO.12.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (FOR.P ?X_D)) LOOK.V)))) GO.12.V)
	    (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
			(?X_E (?X_C GO.12.V))
			(?X_E (?X_C GO.12.V (KA ((ADV-A (FOR.P ?X_D)) LOOK.V))))
			(?X_E (?X_C (LOCATION_ADV.? GO.12.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-54.PR ?X_M (KA ((ADV-A (FOR.P ?X_M)) LOOK.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J WIFE.N))
			(!R2 ((ADV-E (DURING ?X_K)) (?X_M GONE.A)))
			(!R3 (?X_J (PERTAIN-TO ?X_L)))
			(!R4 (?X_K DAY.N))
			(!R5 (?X_K NEXT.A))
			(!R6 (?X_M (PLUR CLOTHE.N)))
			(!R7 (?X_L MAN.N))
			(!R8 ((KA ((ADV-A (FOR.P ?X_M)) LOOK.V)) DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_L (FOLD.V ?X_M)))
			(?X_G (?X_L ((AWAY.ADV PUT.V) ?X_M)))
			(?X_C (?X_J (REFOLD.V ?X_M)))
			(?X_E
	   (?X_L ((ADV-A (FROM.P ?L1)) GO.11.V) (KA ((ADV-A (FOR.P ?X_M)) LOOK.V))))
			(?X_E
	   (?X_L ((ADV-A (FROM.P ?L1)) GO.12.V) (KA ((ADV-A (FOR.P ?X_M)) LOOK.V))))
			(?X_A (?X_J (REFOLD.V ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_A)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_A)))
			(!W6 (?X_C (BEFORE ?X_A)))
			(!W7 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A man folds a clothes."
			"A man puts a clothes away."
			"A wife of a man refolds a clothes."
			"A man go.118s for a clothes looking from L1."
			"A man go.119s for a clothes looking from L1."
			"A wife of a man refolds a clothes."
		adding constraint (WE$2$118.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.5.V ?X_B ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A JANITOR.N))
			(!R2 (?X_B ENTITY.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_C DESTINATION.N))
			(!R6 (?X_B MOP.V))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_C SINK.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?X_C)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?X_C)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_C)) TAKE.V) ?X_B)))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) CARRY.V) ?X_B))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) BRING.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((OUT.ADV GET.5.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B JANITOR.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C MOP.V))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
			(!R8 (?X_A SINK.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?X_F (?X_B (((ADV-A (TO.P ?X_A)) NEED.V) ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (TO.P ?X_A)) TAKE.4.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B JANITOR.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C MOP.V))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
			(!R8 (?X_A SINK.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-55.PR (KA (CLEAN.V ?X_N)) ?X_L ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_N SMALLER-THAN.N ?X_M))
			(!R2 (?X_L DESTINATION.N))
			(!R3 (?X_L SINK.N))
			(!R4 (?X_M JANITOR.N))
			(!R5 (?X_N MOP.V))
			(!R6 (?X_N (PERTAIN-TO ?X_M)))
			(!R7 (NOT (?X_N AGENT.N)))
			(!R8 (NOT (?X_N ACTION.N)))
			(!R9 (NOT (?X_M = ?X_N)))
		)
		(:STEPS
			(?X_K (?X_M (NEED.V (KA (CLEAN.V ?X_N)))))
			(?X_A (?X_M (NEED.V (KA (CLEAN.V ?X_N)))))
			(?X_I (?X_M TRANSPORT_OBJECT.5.V ?X_N ?X_L))
			(?X_I (?X_M (((ADV-A (TO.P ?X_L)) TAKE.4.V) ?X_N)))
			(?X_G (?X_M ((OUT.ADV GET.5.V) ?X_N)))
			(?X_E (?X_M (WASH.V ?X_N)))
			(?X_C (?X_M ((AWAY.ADV PUT.V) ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_A)))
			(!W2 (?X_K (BEFORE ?X_I)))
			(!W3 (?X_K (BEFORE ?X_G)))
			(!W4 (?X_K (BEFORE ?X_E)))
			(!W5 (?X_K (BEFORE ?X_C)))
			(!W6 (?X_A (BEFORE ?X_I)))
			(!W7 (?X_A (BEFORE ?X_G)))
			(!W8 (?X_A (BEFORE ?X_E)))
			(!W9 (?X_A (BEFORE ?X_C)))
			(!W10 (?X_I (BEFORE ?X_G)))
			(!W11 (?X_I (BEFORE ?X_E)))
			(!W12 (?X_I (BEFORE ?X_C)))
			(!W13 (?X_G (BEFORE ?X_E)))
			(!W14 (?X_G (BEFORE ?X_C)))
			(!W15 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A janitor needs cleaning a mop of a janitor."
			"A janitor needs cleaning a mop of a janitor."
			"A janitor transport object.139s a mop of a janitor a destination sink."
			"A janitor take.136s a mop of a janitor to a destination sink."
			"A janitor get.135s a mop of a janitor out."
			"A janitor washes a mop of a janitor."
			"A janitor puts a mop of a janitor away."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.13.V) (K JAIL.N)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K JAIL.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K JAIL.N))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K JAIL.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K JAIL.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K JAIL.N))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (K JAIL.N)))
	     ((ADV-A (TO.P (K JAIL.N))) GO.13.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (K JAIL.N))) GO.13.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (K JAIL.N))) GO.13.V) (K JAIL.N)))
			(?X_B (?X_A GO.13.V))
			(?X_B (?X_A GO.13.V (K JAIL.N)))
			(?X_B (?X_A (LOCATION_ADV.? GO.13.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-56.PR ?X_H ?X_I (K JAIL.N))) ** ?E)
		(:ROLES
			(!R1 (?X_E (PLUR COP.N)))
			(!R2 (?X_H DRUG.N))
			(!R3 (?X_H ILLEGAL.A))
			(!R4 (?X_I MAN.N))
			(!R5 ((K JAIL.N) DESTINATION.N))
		)
		(:STEPS
			(?X_G (?X_I (LIKE.V ?X_H)))
			(?X_D (?X_E (SEE.V ?X_I)))
			(?X_B (?X_I ((ADV-A (FROM.P ?L1)) GO.13.V) (K JAIL.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man likes a drug illegal."
			"A cops see a man."
			"A man go.148s jail from L1."
	)
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-57.PR ?X_D ?X_E)) ** ?E)
		(:ROLES
			(!R1 (?X_D (PLUR STAIR.N)))
			(!R2 (?X_D (VERY.ADV LOUD.A)))
			(!R3 (?X_E AGENT.N))
			(!R4 (?X_D (NEAR.P ?X_E)))
		)
		(:STEPS
			(?X_C (?X_E (HAVE.V ?X_D)))
			(?X_G (?X_A (BOTHER.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_G)))
		)
	)
	(
			"A agent has a stairs very loud near a agent."
			"X_A bothers a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.14.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B BEACH.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.14.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.14.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.14.V) ?X_B))
			(?X_C (?X_A GO.14.V))
			(?X_C (?X_A GO.14.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.14.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FALL.2.V) (K ASLEEP.A)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K ASLEEP.A) DESTINATION.N))
			(!R4 (NOT (?L1 = (K ASLEEP.A))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K ASLEEP.A))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K ASLEEP.A)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K ASLEEP.A))))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (K ASLEEP.A))) FALL.2.V)))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K ASLEEP.A))) FALL.2.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K ASLEEP.A))) FALL.2.V) (K ASLEEP.A)))
			(?X_B (?X_A FALL.2.V))
			(?X_B (?X_A FALL.2.V (K ASLEEP.A)))
			(?X_B (?X_A (LOCATION_ADV.? FALL.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-58.PR (KA GO.V) ?X_J (K ASLEEP.A))) ** ?E)
		(:ROLES
			(!R1 (?X_G HAMMOCK.N))
			(!R2 (?X_J DESTINATION.N))
			(!R3 (?X_J BEACH.N))
			(!R4 (?X_K AGENT.N))
			(!R5 ((K ASLEEP.A) DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_K ((ADV-A (FROM.P ?L1)) GO.14.V) ?X_J))
			(?X_F (?X_K ((ADV-A (IN.P ?X_G)) LAY.V)))
			(?X_D (?X_K ((ADV-A (FROM.P ?L1)) FALL.2.V) (K ASLEEP.A)))
			(?X_B (?X_K ((NEVER.ADV WANT.V) (KA GO.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_F)))
			(!W2 (?X_I (BEFORE ?X_D)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.210s a destination beach from L1."
			"A agent lays in a hammock."
			"A agent fall.211s asleep from L1."
			"A agent wants going never."
	)
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-59.PR ?X_K ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_K (PLUR EYE.N)))
			(!R2 (?X_L GIRL.N))
			(!R3 (?X_K (PERTAIN-TO ?X_L)))
			(!R4 (?X_M BOY.N))
		)
		(:STEPS
			(?X_C (?X_L (BLINK.V ?X_K)))
			(?X_F (?X_L (BLINK.V ?X_K)))
			(?X_H (?X_M (BACK.ADV ((ADV-A (AT.P ?X_L)) BLINK.V))))
			(?X_D (?X_B GAME.N))
			(?X_J (?X_A (BE.V ?X_B)))
			(?X_O (?X_L (BACK.ADV ((ADV-A (AT.P ?X_M)) BLINK.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_F)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_D)))
			(!W4 (?X_C (BEFORE ?X_J)))
			(!W5 (?X_C (BEFORE ?X_O)))
			(!W6 (?X_F (BEFORE ?X_H)))
			(!W7 (?X_F (BEFORE ?X_D)))
			(!W8 (?X_F (BEFORE ?X_J)))
			(!W9 (?X_F (BEFORE ?X_O)))
			(!W10 (?X_H (BEFORE ?X_D)))
			(!W11 (?X_H (BEFORE ?X_J)))
			(!W12 (?X_H (BEFORE ?X_O)))
			(!W13 (?X_D (BEFORE ?X_J)))
			(!W14 (?X_D (BEFORE ?X_O)))
			(!W15 (?X_J (BEFORE ?X_O)))
		)
	)
	(
			"A girl blinks a eyes of a girl."
			"A girl blinks a eyes of a girl."
			"A boy blinks back at a girl."
			"X_B is game."
			"X_A is X_B."
			"A girl blinks back at a boy."
	)
)



(
	(EPI-SCHEMA ((?X_A GET.6.V (KE (?X_B READY.A))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((KE (?X_B READY.A)) AGENT.N)))
			(!R3 (NOT ((KE (?X_B READY.A)) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (KE (?X_B READY.A)))))
			(!R6 (?X_B READY.A))
			(!R7 (?X_B (K FISHING.N) POLE.N))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (KE (?X_B READY.A))))))))
			(?G2 (?X_A (NEED.V (KE (?X_B READY.A)))))
			(?G3 (?X_A (WANT.V (KE (?X_B READY.A)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (KE (?X_B READY.A)))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((KE (?X_B READY.A)) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (KE (?X_B READY.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (SAME-TIME ?X_F)))
			(!W6 (?X_C (RIGHT-AFTER ?X_D)))
			(!W7 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-60.PR ?X_D (KE (?X_H READY.A)))) ** ?E)
		(:ROLES
			(!R1 (?X_D BIG.A))
			(!R2 (?X_D FISH.N))
			(!R3 (?X_G AGENT.N))
			(!R4 (?X_H READY.A))
			(!R5 (?X_H (K FISHING.N) POLE.N))
			(!R6 (?X_H (PERTAIN-TO ?X_G)))
			(!R7 (NOT ((KE (?X_H READY.A)) AGENT.N)))
			(!R8 (NOT ((KE (?X_H READY.A)) ACTION.N)))
			(!R9 (NOT (?X_G = (KE (?X_H READY.A)))))
		)
		(:STEPS
			(?X_A (?X_G GET.6.V (KE (?X_H READY.A))))
			(?X_C (?X_G (CATCH.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_C)))
		)
	)
	(
			"A agent get.238s a ready of a agent ready."
			"A agent catches a big fish."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.2.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B HEN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A CAT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.2.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.2.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.2.V) ?L2))
			(?X_C (?X_B ((ADV-A (AT.P ?X_A)) RUN.2.V)))
			(?X_C (?X_B RUN.2.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-61.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_E NEST.N))
			(!R2 (?X_F CAT.N))
			(!R3 (?X_G HEN.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_D (?X_F ((ADV-A (IN.P ?X_E)) BE.V)))
			(?X_B (?X_G ((ADV-A (FROM.P ?L1)) RUN.2.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A cat is in a nest."
			"A hen run.253s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A GET.7.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (K FIRST.A) BOYFRIEND.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (SAME-TIME ?X_F)))
			(!W6 (?X_C (RIGHT-AFTER ?X_D)))
			(!W7 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_T
	              (COMPOSITE-SCHEMA-62.PR (K LOVE.N) (KE (?X_T (LOVE.V (K FIRST.A))))
	               ?X_T ?X_D ?X_U))
	             ** ?E)
		(:ROLES
			(!R1 (?X_T AGENT.N))
			(!R2 (?X_U (K FIRST.A) BOYFRIEND.N))
			(!R3 (?X_U (PERTAIN-TO ?X_T)))
			(!R4 (NOT (?X_U AGENT.N)))
			(!R5 (NOT (?X_U ACTION.N)))
			(!R6 (NOT (?X_T = ?X_U)))
		)
		(:STEPS
			(?X_S
	   (?X_T (KA HAVE.V) ((NEVER.ADV (BEFORE.ADV (BEEN.AUX IN.P))) (K LOVE.N))))
			(?X_Q (?X_T (GET.V ?X_U)))
			(?X_E (?X_T GET.7.V ?X_U))
			(?X_O (?X_C ((ADV-A (IN.P (K (L X (AND (X HIGH.A) (X SCHOOL.N)))))) BE.V)))
			(?X_F (?X_T (THINK.V (KE (?X_T (LOVE.V (K FIRST.A)))))))
			(?X_G (?X_B (UP.PRT BREAK.V)))
			(?X_H (?X_T (THINK.V (KE (?X_T (LOVE.V (K FIRST.A)))))))
			(?X_I (?X_B (UP.PRT BREAK.V)))
			(?X_J (?X_T (THINK.V (KE (?X_T (LOVE.V (K FIRST.A)))))))
			(?X_K (?X_B (UP.PRT BREAK.V)))
			(?X_M (?X_C (TAKE.V ?X_T ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_S (BEFORE ?X_E)))
			(!W2 (?X_S (BEFORE ?X_O)))
			(!W3 (?X_S (BEFORE ?X_F)))
			(!W4 (?X_S (BEFORE ?X_G)))
			(!W5 (?X_S (BEFORE ?X_H)))
			(!W6 (?X_S (BEFORE ?X_I)))
			(!W7 (?X_S (BEFORE ?X_J)))
			(!W8 (?X_S (BEFORE ?X_K)))
			(!W9 (?X_S (BEFORE ?X_M)))
			(!W10 (?X_Q (BEFORE ?X_E)))
			(!W11 (?X_Q (BEFORE ?X_O)))
			(!W12 (?X_Q (BEFORE ?X_F)))
			(!W13 (?X_Q (BEFORE ?X_G)))
			(!W14 (?X_Q (BEFORE ?X_H)))
			(!W15 (?X_Q (BEFORE ?X_I)))
			(!W16 (?X_Q (BEFORE ?X_J)))
			(!W17 (?X_Q (BEFORE ?X_K)))
			(!W18 (?X_Q (BEFORE ?X_M)))
			(!W19 (?X_E (BEFORE ?X_O)))
			(!W20 (?X_E (BEFORE ?X_F)))
			(!W21 (?X_E (BEFORE ?X_G)))
			(!W22 (?X_E (BEFORE ?X_H)))
			(!W23 (?X_E (BEFORE ?X_I)))
			(!W24 (?X_E (BEFORE ?X_J)))
			(!W25 (?X_E (BEFORE ?X_K)))
			(!W26 (?X_E (BEFORE ?X_M)))
			(!W27 (?X_O (BEFORE ?X_F)))
			(!W28 (?X_O (BEFORE ?X_G)))
			(!W29 (?X_O (BEFORE ?X_H)))
			(!W30 (?X_O (BEFORE ?X_I)))
			(!W31 (?X_O (BEFORE ?X_J)))
			(!W32 (?X_O (BEFORE ?X_K)))
			(!W33 (?X_O (BEFORE ?X_M)))
			(!W34 (?X_F (BEFORE ?X_G)))
			(!W35 (?X_F (BEFORE ?X_M)))
			(!W36 (?X_G (BEFORE ?X_M)))
			(!W37 (?X_H (BEFORE ?X_I)))
			(!W38 (?X_H (BEFORE ?X_M)))
			(!W39 (?X_I (BEFORE ?X_M)))
			(!W40 (?X_J (BEFORE ?X_K)))
			(!W41 (?X_J (BEFORE ?X_M)))
			(!W42 (?X_K (BEFORE ?X_M)))
		)
	)
	(
			"A agent is was before never in."
			"A agent gets a of a agent."
			"A agent get.268s a of a agent."
			"X_C is in high school."
			"A agent thinks a agent loves first."
			"X_B breaks up."
			"A agent thinks a agent loves first."
			"X_B breaks up."
			"A agent thinks a agent loves first."
			"X_B breaks up."
			"X_C takes a agent X_D."
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.6.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?X_B CAT.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 INSIDE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A TAKE.V ?X_B))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A (BRING.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-63.PR ?X_L ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_K BUSH.N))
			(!R2 (?X_L CAT.N))
			(!R3 (?X_L SMALLER-THAN.N ?X_M))
			(!R4 (?X_M MAN.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 INSIDE.N))
		)
		(:STEPS
			(?X_J (?X_L ((ADV-A (IN.P ?X_K)) HIDE.V)))
			(?X_H (?X_M (SEE.V ?X_L)))
			(?X_F (?X_M ((ADV-A (TO.P ?X_L)) CALL.V)))
			(?X_D (?X_L ((ADV-A (FOR.P (KA BUDGE.V))) REFUSE.V)))
			(?X_B (?X_M TRANSPORT_OBJECT.6.V ?X_L ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_D)))
			(!W4 (?X_H (BEFORE ?X_F)))
			(!W5 (?X_H (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A cat hides in a bush."
			"A man sees a cat."
			"A man calls to a cat."
			"A cat refuses for budging."
			"A man transport object.280s a cat a destination inside."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) BECOME.4.V) (K FRIGHTENED.A)) **
	             ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K FRIGHTENED.A) DESTINATION.N))
			(!R4 (NOT (?L1 = (K FRIGHTENED.A))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K FRIGHTENED.A))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K FRIGHTENED.A)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K FRIGHTENED.A))))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (K FRIGHTENED.A))) BECOME.4.V)))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K FRIGHTENED.A))) BECOME.4.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K FRIGHTENED.A))) BECOME.4.V)
	    (K FRIGHTENED.A)))
			(?X_B (?X_A BECOME.4.V))
			(?X_B (?X_A BECOME.4.V (K FRIGHTENED.A)))
			(?X_B (?X_A (LOCATION_ADV.? BECOME.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.1.V)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 (?X_B FLASHLIGHT.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (FIND.V ?X_B)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?LX)))
			(?I2 (?X_B (AT.P ?LO)))
			(?I3 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_A (FIND.V ?X_B)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (FOR.P ?X_B)) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (FOR.P ?X_B)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (FOR.P ?X_A)) FIND.10.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C DARK.N))
			(!R4 (?X_A FLASHLIGHT.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (FOR.P ?X_A)) FIND.11.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C POWER.N))
			(!R4 (?X_A FLASHLIGHT.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-64.PR
	               (K
	                (BACK.ADV
	                 (L X (AND (X ON.P) (X (IN.P (FIVE.D (PLUR MINUTE.N))))))))
	               (K FRIGHTENED.A) ?X_J ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J DARK.N))
			(!R2 (?X_K POWER.N))
			(!R3 (?X_L FLASHLIGHT.N))
			(!R4 (?X_M MAN.N))
			(!R5 ((K FRIGHTENED.A) DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_M ((ADV-A (IN.P ?X_J)) BE.V)))
			(?X_G (?X_M ((ADV-A (FOR.P ?X_L)) SEARCH.1.V)))
			(?X_G (?X_M (((ADV-A (FOR.P ?X_L)) FIND.10.V) ?X_J)))
			(?X_G (?X_M (((ADV-A (FOR.P ?X_L)) FIND.11.V) ?X_K)))
			(?X_E (?X_M ((ADV-A (FROM.P ?L1)) BECOME.4.V) (K FRIGHTENED.A)))
			(?X_C
	   (?X_K
	    (COME.V
	     (K (BACK.ADV (L X (AND (X ON.P) (X (IN.P (FIVE.D (PLUR MINUTE.N)))))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man is in a dark."
			"A man search.291s for a flashlight."
			"A man find.299s a dark for a flashlight."
			"A man find.300s a power for a flashlight."
			"A man become.294s frightened from L1."
			"A power comes back on in."
		adding constraint (I$1$366.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A GET.8.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B GOOD.A))
			(!R7 (?X_B GUMBO.N))
			(!R8 (?X_B SALTY.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-65.PR ?X_C ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_C LOT.N))
			(!R2 (?X_C (OF.P (K WATER.N))))
			(!R3 (?X_H AGENT.N))
			(!R4 (?X_I GOOD.A))
			(!R5 (?X_I GUMBO.N))
			(!R6 (?X_I SALTY.A))
			(!R7 (NOT (?X_I AGENT.N)))
			(!R8 (NOT (?X_I ACTION.N)))
			(!R9 (NOT (?X_H = ?X_I)))
		)
		(:STEPS
			(?X_G ((ADV-E (DURING (K TODAY.N))) (?X_H ((ADV-A (TO.P (K LUNCH.N))) GO.V))))
			(?X_E (?X_H GET.8.V ?X_I))
			(?X_B (?X_H (DRANK.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent goes DURING today to lunch."
			"A agent get.319s a good gumbo salty."
			"A agent drinks a lot of water."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) WALK.4.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A TREE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.4.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.4.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.4.V) ?L2))
			(?X_C (?X_B (OVER.PRT ((ADV-A (BY.P ?X_A)) WALK.4.V))))
			(?X_C (?X_B WALK.4.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? WALK.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.15.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?L2 OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.15.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.15.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.15.V) ?L2))
			(?X_B (?X_A GO.15.V))
			(?X_B (?X_A GO.15.V ?L2))
			(?X_B (?X_A GO.15.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.12.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B SPOT.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TAKE.5.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B NAP.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_C (CONSEC ?X_D)))
			(!W6 (?X_C (AT-ABOUT ?X_E)))
			(!W7 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-66.PR ?X_K ?L2 ?X_N ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_K TREE.N))
			(!R2 (?L2 OUTSIDE.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (?X_N SPOT.N))
			(!R5 (?X_O DOG.N))
			(!R6 (?X_P NAP.N))
			(!R7 (NOT (?X_P AGENT.N)))
			(!R8 (NOT (?X_P ACTION.N)))
			(!R9 (NOT (?X_O = ?X_P)))
		)
		(:STEPS
			(?X_M (?X_O ((ADV-A (FROM.P ?L1)) GO.15.V) ?L2))
			(?X_J (?X_O ((ADV-A (FROM.P ?L1)) WALK.4.V) ?L2))
			(?X_H (?X_O ((AROUND.PRT TROT.V) ?X_K)))
			(?X_F (?X_O FIND.12.V ?X_N))
			(?X_D (?X_O (DOWN.PRT LAY.V)))
			(?X_B (?X_O TAKE.5.V ?X_P))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_J)))
			(!W2 (?X_M (BEFORE ?X_H)))
			(!W3 (?X_M (BEFORE ?X_F)))
			(!W4 (?X_M (BEFORE ?X_D)))
			(!W5 (?X_M (BEFORE ?X_B)))
			(!W6 (?X_J (BEFORE ?X_H)))
			(!W7 (?X_J (BEFORE ?X_F)))
			(!W8 (?X_J (BEFORE ?X_D)))
			(!W9 (?X_J (BEFORE ?X_B)))
			(!W10 (?X_H (BEFORE ?X_F)))
			(!W11 (?X_H (BEFORE ?X_D)))
			(!W12 (?X_H (BEFORE ?X_B)))
			(!W13 (?X_F (BEFORE ?X_D)))
			(!W14 (?X_F (BEFORE ?X_B)))
			(!W15 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A dog go.324s a outside destination from L1."
			"A dog walk.323s a outside destination from L1."
			"A dog trots a tree around."
			"A dog find.335s a spot."
			"A dog lays down."
	)
)



(
	(EPI-SCHEMA ((?X FEED.1.V ?X_B ?X_A) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?X_A FOOD.N))
			(!R4 (NOT (?X = ?X_B)))
			(!R5 (NOT (?X_B = ?X_A)))
			(!R6 (NOT (?X = ?X_A)))
			(!R7 (?X_A BIG.A))
			(!R8 (?X_A MUFFIN.N))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_B EAT.V ?X_A)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:STEPS
			(?X_C (?X_B EAT.V ?X_A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C AFTER ?E))
			(!W2 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B EAT.1.V ?X_A) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A FOOD.N))
			(!R3 (?X_A BIG.A))
			(!R4 (?X_A MUFFIN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_C))
			(!W2 (?I1 BEFORE ?X_C))
			(!W3 (?X_C CAUSE-OF ?P1))
			(!W4 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X (COMPOSITE-SCHEMA-67.PR ?X_B ?X_C)) ** ?E)
		(:ROLES
			(!R1 (NOT (?X = ?X_B)))
			(!R2 (NOT (?X_B = ?X_C)))
			(!R3 (NOT (?X = ?X_C)))
			(!R4 (?X AGENT.N))
			(!R5 (?X_B AGENT.N))
			(!R6 (?X_C FOOD.N))
			(!R7 (?X_C BIG.A))
			(!R8 (?X_C MUFFIN.N))
		)
		(:STEPS
			(?E_1 (?X FEED.1.V ?X_B ?X_C))
			(?X_A (?X_B EAT.1.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?E_1 (BEFORE ?X_A)))
		)
	)
	(
			"A agent feed.2s a agent a food big muffin."
			"A agent eat.1s a food big muffin."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.16.V) ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_D DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_D)))
			(!R5 (?X_D BUY.N))
			(!R6 (?X_D BEST.A))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_B GOOD.A))
			(!R9 (?X_B TV.N))
			(!R10 (?X_A ?X_B TV.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?X_D)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) ((ADV-A (TO.P ?X_D)) GO.16.V))))
			(?X_E
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.16.V))))
			(?X_E (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.16.V) ?X_D))
			(?X_E (?X_C GO.16.V))
			(?X_E (?X_C GO.16.V ?X_D))
			(?X_E (?X_C (LOCATION_ADV.? GO.16.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_G)))
			(!W7 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.6.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C OBJECT.N))
			(!R5 (?X_C (PERTAIN-TO ?X_B)))
			(!R6 (?X_C ?X_A TV.N))
			(!R7 (?X_A TV.N))
			(!R8 (?X_A GOOD.A))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_E (?X_B WANT.V ?X_C))
			(?X_E (?X_B (WANT.V ?X_C)))
			(?X_E (?X_B (LIKE.6.V ?X_C)))
			(?X_E (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (RIGHT-AFTER ?X_D)))
			(!W2 (?X_E (SAME-TIME ?X_G)))
			(!W3 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C LIKE.7.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_D NEW.A))
			(!R6 (?X_D TV.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_A ?X_B TV.N))
			(!R9 (?X_B GOOD.A))
			(!R10 (?X_B TV.N))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.7.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-68.PR ?X_M ?X_O ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_F TV.N))
			(!R2 (?X_K GOOD.A))
			(!R3 (?X_K TV.N))
			(!R4 (?X_O ?X_K TV.N))
			(!R5 (?X_L OBJECT.N))
			(!R6 (?X_L NEW.A))
			(!R7 (?X_L TV.N))
			(!R8 (NOT (?X_L ACTION.N)))
			(!R9 (NOT (?X_L AGENT.N)))
			(!R10 (?X_M DESTINATION.N))
			(!R11 (?X_M BUY.N))
			(!R12 (?X_M BEST.A))
			(!R13 (?X_N AGENT.N))
			(!R14 (?X_O OBJECT.N))
			(!R15 (?X_O (PERTAIN-TO ?X_N)))
			(!R16 (NOT (?X_O ACTION.N)))
			(!R17 (NOT (?X_O AGENT.N)))
		)
		(:STEPS
			(?X_C (?X_N (LOVE.V ?X_O)))
			(?X_J (?X_N LIKE.7.V ?X_L))
			(?X_E (?X_N ((ADV-A (AT.P ?X_F)) LOOK.V)))
			(?X_H (?X_N ((ADV-A (FROM.P ?L1)) GO.16.V) ?X_M))
			(?X_A (?X_N LIKE.6.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_H)))
			(!W4 (?X_J (BEFORE ?X_A)))
			(!W5 (?X_E (BEFORE ?X_A)))
			(!W6 (?X_H (BEFORE ?X_A)))
		)
	)
	(
			"A agent loves a object of a agent."
			"A agent like.15s a object new tv."
			"A agent looks at a tv."
			"A agent go.19s a destination buy best from L1."
			"A agent like.14s a object of a agent."
		adding constraint (I$0$39.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) CLIMB.2.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A PARK.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_A = ?L2)))
			(!R5 (?X_B MALE.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) CLIMB.2.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?L2)) CLIMB.2.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) CLIMB.2.V) ?L2))
			(?X_C (?X_B CLIMB.2.V))
			(?X_C (?X_B CLIMB.2.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? CLIMB.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_E)))
			(!W7 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) RUN.3.V)
	              (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N)))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A PARK.N))
			(!R3
	   ((ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))
	    DESTINATION.N))
			(!R4
	   (NOT
	    (?X_A = (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N)))))))))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V
	     (KA
	      ((ADV-A
	        (AT.P (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
	       BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2
	   (NOT
	    (?X_B
	     (AT.P (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2
	   (?X_B (AT.P (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N)))))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.?
	       (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
	     RUN.3.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?X_A))
	     ((ADV-A
	       (DESTINATION_PREP.?
	        (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
	      RUN.3.V))))
			(?X_D
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.?
	       (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
	     RUN.3.V)
	    (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
			(?X_D (?X_B RUN.3.V))
			(?X_D
	   (?X_B RUN.3.V
	    (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
			(?X_D (?X_B (LOCATION_ADV.? RUN.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (IN.P ?X_A)) PLAY.3.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A SAND.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_B EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (WITH.P ?T)) PLAY.3.V)))
			(?X_C (?X_B PLAY.3.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-69.PR (K (VERY.ADV HIGH.A)) ?L2
	               (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J SAND.N))
			(!R2
	   ((ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))
	    DESTINATION.N))
			(!R3
	   (NOT
	    (?X_N = (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N)))))))))
			(!R4 (?X_L AGENT.N))
			(!R5 (?X_M AGENT.N))
			(!R6 (?X_M MALE.A))
			(!R7 (?X_N PARK.N))
			(!R8 (NOT (?X_N = ?L2)))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_A (?X_L ((ADV-A (IN.P ?X_J)) PLAY.3.V)))
			(?X_I
	   (?X_L ((ADV-A (FROM.P ?X_N)) RUN.3.V)
	    (ALL.D (L X (AND (X {REF}.N) (X (AROUND.P (THE.D GRASS.N))))))))
			(?X_E (?X_M CLIMB.V))
			(?X_G (?X_M ((ADV-A (FROM.P ?X_N)) CLIMB.2.V) ?L2))
			(?X_C (?X_M (SWING.V (K (VERY.ADV HIGH.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_I)))
			(!W2 (?X_A (BEFORE ?X_E)))
			(!W3 (?X_A (BEFORE ?X_G)))
			(!W4 (?X_A (BEFORE ?X_C)))
			(!W5 (?X_I (BEFORE ?X_E)))
			(!W6 (?X_I (BEFORE ?X_G)))
			(!W7 (?X_I (BEFORE ?X_C)))
			(!W8 (?X_E (BEFORE ?X_C)))
			(!W9 (?X_G (BEFORE ?X_C)))
		)
	)
	(
			"A agent play.51s in a sand."
			"A agent run.44s all around from a park."
			"A agent male climbs."
			"A agent male climb.43s a destination from a park."
			"A agent male swings very high."
	)
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-70.PR ?X_L (KA STOP.V))) ** ?E)
		(:ROLES
			(!R1 (?X_B COUCH.N))
			(!R2 (?X_K MOM.N))
			(!R3 (?X_L MARY.N))
			(!R4 (?X_L LITTLE.A))
			(!R5 (NOT (?X_L LISTEN.V)))
			(!R6 (?X_K (PERTAIN-TO ?X_L)))
		)
		(:STEPS
			(?X_D (?X_L ((ADV-A (ON.P ?X_B)) JUMP.V)))
			(?X_A (?X_K (TELL.V ?X_L (KA STOP.V))))
			(?X_F (?X_K (TELL.V ?X_L (KA STOP.V))))
			(?X_H (?X_L JUMP.V))
			(?X_J (?X_L (DOWN.ADV FALL.V)))
			(?X_N (?X_L CRY.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_A)))
			(!W2 (?X_D (BEFORE ?X_F)))
			(!W3 (?X_D (BEFORE ?X_H)))
			(!W4 (?X_D (BEFORE ?X_J)))
			(!W5 (?X_D (BEFORE ?X_N)))
			(!W6 (?X_A (BEFORE ?X_F)))
			(!W7 (?X_A (BEFORE ?X_H)))
			(!W8 (?X_A (BEFORE ?X_J)))
			(!W9 (?X_A (BEFORE ?X_N)))
			(!W10 (?X_F (BEFORE ?X_H)))
			(!W11 (?X_F (BEFORE ?X_J)))
			(!W12 (?X_F (BEFORE ?X_N)))
			(!W13 (?X_H (BEFORE ?X_J)))
			(!W14 (?X_H (BEFORE ?X_N)))
			(!W15 (?X_J (BEFORE ?X_N)))
		)
	)
	(
			"A mary little jumps on a couch."
			"A mom of a mary little tells a mary little stopping."
			"A mom of a mary little tells a mary little stopping."
			"A mary little jumps."
			"A mary little falls down."
			"A mary little cries."
		adding constraint (I$0$87.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RIDE.1.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C (PLUR HILL.N)))
			(!R6 (?X_C (NEAR.P ?X_A)))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_A HOUSE.N))
			(!R9 (?X_B PONY.N))
			(!R10 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.1.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.1.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.1.V) ?L2))
			(?X_E (?X_D ((ADV-A (OVER.P ?X_C)) RIDE.1.V)))
			(?X_E (?X_D RIDE.1.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RIDE.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RIDE.2.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C (PLUR HILL.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_A PONY.N))
			(!R8 (?X_C (NEAR.P ?X_B)))
			(!R9 (?X_B HOUSE.N))
			(!R10 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.2.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.2.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.2.V) ?L2))
			(?X_E (?X_D ((ADV-A (OVER.P ?X_C)) RIDE.2.V)))
			(?X_E (?X_D RIDE.2.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RIDE.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-71.PR ?X_H ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C LARGE.A))
			(!R2 (?X_C ROCK.N))
			(!R3 (?X_I (PLUR HILL.N)))
			(!R4 (?X_H PONY.N))
			(!R5 (?X_H (PERTAIN-TO ?X_K)))
			(!R6 (?X_J HOUSE.N))
			(!R7 (?X_J (PERTAIN-TO ?X_K)))
			(!R8 (?X_I (NEAR.P ?X_J)))
			(!R9 (?X_K AGENT.N))
			(!R10 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_G (?X_K (HAVE.V ?X_H)))
			(?X_E (?X_K ((ADV-A (FROM.P ?L1)) RIDE.1.V) ?L2))
			(?X_E (?X_K ((ADV-A (FROM.P ?L1)) RIDE.2.V) ?L2))
			(?X_B (?X_H ((ADV-A (ON.P ?X_C)) STUMBLE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent has a pony of a agent."
			"A agent ride.71s a destination from L1."
			"A agent ride.72s a destination from L1."
			"A pony of a agent stumbles on a large rock."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) WALK.5.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A WOMAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.5.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.5.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.5.V) ?L2))
			(?X_B (?X_A (AWAY.PRT WALK.5.V)))
			(?X_B (?X_A WALK.5.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? WALK.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B REQUEST_ACTION.3.V ?X_C ?A) ** ?X_D)
		(:ROLES
			(!R1 (?X_B WOMAN.N))
			(!R2 (?X_C MAN.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_B = ?X_C)))
			(!R5 (?X_A (PERTAIN-TO ?X_C)))
			(!R6 (?X_A HEAD.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V ?X_C ?A)))
			(?G2 (?X_B (WANT.V (THAT (?X_B (DO.V ?A))))))
		)
		(:STEPS
			(?E1 (?X_B ((WHY.ADV ASK.V) ?X_C ?A)))
			(?E2 (?X_C (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((WHY.ADV ASK.V) ?X_C ?A)))
			(?X_D (?X_B (TELL.V ?X_C ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FIND.13.V (K DEJECTED.A)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K DEJECTED.A) ENTITY.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
			(!R5 (?X_A HEAD.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 ((K DEJECTED.A) (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P (K DEJECTED.A))) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT ((K DEJECTED.A) (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V (K DEJECTED.A)))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT ((K DEJECTED.A) (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V (K DEJECTED.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-72.PR ?X_J ?L2 ?X_L ?A (K DEJECTED.A))) ** ?E)
		(:ROLES
			(!R1 (?X_J HEAD.N))
			(!R2 (?X_J (PERTAIN-TO ?X_L)))
			(!R3 (NOT (?X_K = ?X_L)))
			(!R4 (?A ACTION.N))
			(!R5 (?X_K WOMAN.N))
			(!R6 (?L2 DESTINATION.N))
			(!R7 ((K DEJECTED.A) ENTITY.N))
			(!R8 (?X_L MAN.N))
		)
		(:STEPS
			(?X_I (?X_L (SHAKE.V ?X_J)))
			(?X_A (?X_L (SHAKE.V ?X_J)))
			(?X_G (?X_K REQUEST_ACTION.3.V ?X_L ?A))
			(?X_E (?X_K ((ADV-A (FROM.P ?L1)) WALK.5.V) ?L2))
			(?X_C (?X_L FIND.13.V (K DEJECTED.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_A)))
			(!W2 (?X_I (BEFORE ?X_G)))
			(!W3 (?X_I (BEFORE ?X_E)))
			(!W4 (?X_I (BEFORE ?X_C)))
			(!W5 (?X_A (BEFORE ?X_G)))
			(!W6 (?X_A (BEFORE ?X_E)))
			(!W7 (?X_A (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man shakes a head of a man."
			"A man shakes a head of a man."
			"A woman request action.78s a man a action."
			"A woman walk.77s a destination from L1."
			"A man find.80s dejected."
		adding constraint (I$0$114.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.17.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A VACATION.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.17.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.17.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.17.V) ?L2))
			(?X_C (?X_B ((ADV-A (ON.P ?X_A)) GO.17.V)))
			(?X_C (?X_B GO.17.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.17.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.18.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A CRUISE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.18.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.18.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.18.V) ?L2))
			(?X_C (?X_B ((ADV-A (ON.P ?X_A)) GO.18.V)))
			(?X_C (?X_B GO.18.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.18.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-73.PR ?X_A (K FUN.N)
	               (KA ((ADV-A (ON.P (ANOTHER.D CRUISE.N))) GO.V)) ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J CRUISE.N))
			(!R2 (?X_M VACATION.N))
			(!R3 (?X_N AGENT.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_L (?X_N ((ADV-A (FROM.P ?L1)) GO.17.V) ?L2))
			(?X_I (?X_N ((ADV-A (FROM.P ?L1)) GO.18.V) ?L2))
			(?X_G (?X_J (BE.V ?X_A)))
			(?X_E (?X_N (HAVE.V (K FUN.N))))
			(?X_C (?X_N (WANT.V (KA ((ADV-A (ON.P (ANOTHER.D CRUISE.N))) GO.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_I)))
			(!W2 (?X_L (BEFORE ?X_G)))
			(!W3 (?X_L (BEFORE ?X_E)))
			(!W4 (?X_L (BEFORE ?X_C)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_E)))
			(!W7 (?X_I (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.99s a destination from L1."
			"A agent go.100s a destination from L1."
			"A cruise is X_A."
			"A agent has fun."
			"A agent wants on another cruise going."
		adding constraint (ME$0$150.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D LIKE.8.V ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (NOT (?X_E ACTION.N)))
			(!R3 (NOT (?X_E AGENT.N)))
			(!R4 (?X_E OBJECT.N))
			(!R5 (?X_E (K DEAR.A) PAPA.N))
			(!R6 (?X_A (PLUR RABBIT.N)))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_B HAND.N))
			(!R10 (?X_C (PERTAIN-TO ?X_D)))
			(!R11 (?X_C PAPA.N))
			(!R12 (?X_E (PERTAIN-TO ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_D (WANT.V (KA (HAVE.V ?X_E)))))
		)
		(:PARAPHRASES
			(?X_F (?X_D WANT.V ?X_E))
			(?X_F (?X_D (WANT.V ?X_E)))
			(?X_F (?X_D (LIKE.8.V ?X_E)))
			(?X_F (?X_D (LOVE.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D LIKE.9.V ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (NOT (?X_E ACTION.N)))
			(!R3 (NOT (?X_E AGENT.N)))
			(!R4 (?X_E OBJECT.N))
			(!R5 (?X_E (K DEAR.A) PAPA.N))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_A HAND.N))
			(!R8 (?X_B (PLUR RABBIT.N)))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
			(!R10 (?X_E (PERTAIN-TO ?X_C)))
			(!R11 (?X_C (PERTAIN-TO ?X_D)))
			(!R12 (?X_C PAPA.N))
		)
		(:POSTCONDS
			(?P1 (?X_D (WANT.V (KA (HAVE.V ?X_E)))))
		)
		(:PARAPHRASES
			(?X_F (?X_D WANT.V ?X_E))
			(?X_F (?X_D (WANT.V ?X_E)))
			(?X_F (?X_D (LIKE.9.V ?X_E)))
			(?X_F (?X_D (LOVE.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D FEED.2.V ?X_E ?F) ** ?E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_E AGENT.N))
			(!R3 (?F FOOD.N))
			(!R4 (NOT (?X_D = ?X_E)))
			(!R5 (NOT (?X_E = ?F)))
			(!R6 (NOT (?X_D = ?F)))
			(!R7 (?X_E (PLUR RABBIT.N)))
			(!R8 (?X_C HAND.N))
			(!R9 (?X_C (PERTAIN-TO ?X_D)))
			(!R10 (?X_E (PERTAIN-TO ?X_D)))
			(!R11 (?X_A (PERTAIN-TO ?X_D)))
			(!R12 (?X_A PAPA.N))
			(!R13 (?X_B (PERTAIN-TO ?X_A)))
			(!R14 (?X_B (K DEAR.A) PAPA.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (NOT (?X_E HUNGRY.A))))))
			(?G2 (?X_D (WANT.V (THAT (?X_E (((ADV-A (FROM.P ?X_C)) EAT.V) ?F))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?F))
			(?I2 (?X_E HUNGRY.A))
		)
		(:STEPS
			(?X_F (?X_E (((ADV-A (FROM.P ?X_C)) EAT.V) ?F)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (HAVE.V ?F))))
			(?P2 (NOT (?X_E HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F AFTER ?E))
			(!W2 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (((ADV-A (FROM.P ?X_A)) EAT.2.V) ?F)) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?F FOOD.N))
			(!R3 (?X_E (PLUR RABBIT.N)))
			(!R4 (?X_A HAND.N))
			(!R5 (?X_E (PERTAIN-TO ?X_B)))
			(!R6 (?X_B AGENT.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_D PAPA.N))
			(!R9 (?X_D (PERTAIN-TO ?X_B)))
			(!R10 (?X_C (K DEAR.A) PAPA.N))
			(!R11 (?X_C (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (THAT (NOT (?X_E HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_E HAVE.V ?F))
			(?I2 (?X_E HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (HAVE.V ?F))))
			(?P2 (NOT (?X_E HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_F))
			(!W2 (?I1 BEFORE ?X_F))
			(!W3 (?X_F CAUSE-OF ?P1))
			(!W4 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-74.PR ?X_O
	               (TWO.D (L X (AND (X PRETTY.A) (X (PLUR RABBIT.N))))) ?X_B ?X_P
	               ?X_M ?F))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G LITTLE.A))
			(!R2 (?X_G HOUSE.N))
			(!R3 (?X_N (PERTAIN-TO ?X_O)))
			(!R4 (?X_L PAPA.N))
			(!R5 (?X_L (PERTAIN-TO ?X_O)))
			(!R6 (?X_P (PERTAIN-TO ?X_L)))
			(!R7 (?X_M (PERTAIN-TO ?X_O)))
			(!R8 (NOT (?X_O = ?X_M)))
			(!R9 (NOT (?X_M = ?F)))
			(!R10 (NOT (?X_O = ?F)))
			(!R11 (?X_M (PLUR RABBIT.N)))
			(!R12 (?X_N HAND.N))
			(!R13 (?F FOOD.N))
			(!R14 (?X_P OBJECT.N))
			(!R15 (?X_P (K DEAR.A) PAPA.N))
			(!R16 (?X_O AGENT.N))
			(!R17 (NOT (?X_P ACTION.N)))
			(!R18 (NOT (?X_P AGENT.N)))
		)
		(:STEPS
			(?X_K
	   (?X_L (GIVE.V ?X_O (TWO.D (L X (AND (X PRETTY.A) (X (PLUR RABBIT.N))))))))
			(?E_1 (?X_O FEED.2.V ?X_M ?F))
			(?X_I (?X_M (((ADV-A (FROM.P ?X_N)) EAT.2.V) ?F)))
			(?X_F (?X_O ((SHALL.AUX ((ADV-A (IN.P ?X_G)) KEEP.V)) ?X_B)))
			(?X_D (?X_O LIKE.8.V ?X_P))
			(?X_D (?X_O LIKE.9.V ?X_P))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_F)))
			(!W2 (?E_1 (BEFORE ?X_I)))
			(!W3 (?E_1 (BEFORE ?X_D)))
			(!W4 (?X_I (BEFORE ?X_D)))
		)
	)
	(
			"A papa of a agent gives a agent two pretty rabbit."
			"A agent feed.110s a rabbits of a agent a food."
			"A rabbits of a agent eat.117 a food from a hand of a agent."
			"A agent keeps X_B shalls in a little house."
			"A agent like.104s a object of a papa of a agent."
			"A agent like.105s a object of a papa of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A COMPOSITE-SCHEMA-75.PR) ** ?E)
		(:ROLES
			(!R1 (?X_A MARKET.N))
		)
		(:STEPS
			(?X_C (?X_A RALLY.V))
		)
	)
	(
			"A market rallies."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FALL.3.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A COW.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.3.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.3.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.3.V) ?L2))
			(?X_B (?X_A (OVER.PRT FALL.3.V)))
			(?X_B (?X_A FALL.3.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? FALL.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) DIE.1.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A COW.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) DIE.1.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) DIE.1.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) DIE.1.V) ?L2))
			(?X_B (?X_A DIE.1.V))
			(?X_B (?X_A DIE.1.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? DIE.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-76.PR (K ASLEEP.A) (K (UP.ADV (TO.P ?X_L))) ?X_L
	               ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I MAN.N))
			(!R2 (?X_L COW.N))
			(!R3 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_K (?X_L (FALL.V (K ASLEEP.A))))
			(?X_H (?X_I (GO.V (K (UP.ADV (TO.P ?X_L))))))
			(?X_F (?X_I (PUSH.V ?X_L)))
			(?X_D (?X_L ((ADV-A (FROM.P ?L1)) FALL.3.V) ?L2))
			(?X_B (?X_L ((ADV-A (FROM.P ?L1)) DIE.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_H (BEFORE ?X_F)))
			(!W6 (?X_H (BEFORE ?X_D)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A cow falls asleep."
			"A man goes up to a cow."
			"A man pushes a cow."
			"A cow fall.150s a destination from L1."
			"A cow die.151s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-77.PR (KE (?X_C (PLAY.V (K BALL.N)))))) ** ?E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_C BIG.A))
			(!R3 (?X_C DOG.N))
			(!R4 (?X_B (HAS.V ?X_C)))
		)
		(:STEPS
			(?X_E (?X_A ((MAY.AUX SEE.V) (KE (?X_C (PLAY.V (K BALL.N)))))))
		)
	)
	(
			"A agent sees a big dog plays ball may."
		adding constraint (I$2$195.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA (((K (L X (AND (X LAST.A) (X NIGHT.N))))
	              (COMPOSITE-SCHEMA-78.PR (K (L X (AND (X SUPER.A) (X TIRED.A))))
	               (KA SLEEP.V)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
		)
		(:STEPS
			(?X_C
	   ((K (L X (AND (X LAST.A) (X NIGHT.N)))) ?X_D
	    (BE.V (K (L X (AND (X SUPER.A) (X TIRED.A)))))))
			(?X_F (?X_D ((REALLY.ADV WANT.V) (KA SLEEP.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_F)))
		)
	)
	(
			"Last night is super tired."
			"A agent wants sleeping really."
	)
)



(
	(EPI-SCHEMA ((MUST.AUX-S (?X_B (COOK.1.V ?X_C))) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_C ((TOO.ADV BAD.A) (KA (OUT.ADV GO.V)))))
			(!R4 (?X_A RAINING.A))
			(!R5 (?X_A NIGHT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT ((ADV-E (DURING ?X_A)) (?X_C EXIST.V))))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (NOT ((ADV-E (DURING ?X_A)) (?X_C EXIST.V))))
		)
		(:POSTCONDS
			(?X_F ((ADV-E (DURING ?X_A)) (?X_C EXIST.V)))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
			(!W2 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-79.PR ?X_F)) ** ?E)
		(:ROLES
			(!R1 (?X_E RAINING.A))
			(!R2 (?X_E NIGHT.N))
			(!R3 (?X_F ((TOO.ADV BAD.A) (KA (OUT.ADV GO.V)))))
			(!R4 (NOT (?X_F AGENT.N)))
			(!R5 (?X_G AGENT.N))
		)
		(:STEPS
			(?X_D ((ADV-E (DURING ?X_E)) (?X_F BE.V)))
			(?X_B (MUST.AUX-S (?X_G (COOK.1.V ?X_F))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A too bad out go is DURING a raining night."
			"A agent cook.189s a too bad out go must."
		adding constraint (I$42$236.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-80.PR ?X_M ?X_J ?X_K ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_M HAND.N))
			(!R2 (?X_J BAT.N))
			(!R3 (?X_K BLACK.A))
			(!R4 (?X_K HAT.N))
			(!R5 (?X_F AGENT.N))
			(!R6 (?X_O (PERTAIN-TO ?X_F)))
			(!R7 (?X_L BOY.N))
			(!R8 (?X_L (HAS.V ?X_I)))
			(!R9 (?X_I (PERTAIN-TO ?X_L)))
			(!R10 (?X_J (PERTAIN-TO ?X_L)))
			(!R11 (?X_M (PERTAIN-TO ?X_L)))
			(!R12 (?X_K (IS.V ?X_L)))
			(!R13 (?X_N BLACK.A))
			(!R14 (?X_N BAT.N))
			(!R15 (?X_N (PERTAIN-TO ?X_L)))
			(!R16 (?X_N (IN.P ?X_M)))
			(!R17 (?X_N (IS.V ?X_O)))
		)
		(:STEPS
			(?X_A (?X_J (IN.P ?X_M)))
			(?X_B (?X_L (HAS.V ?X_J)))
			(?X_E (?X_L (HAVE.V ?X_K)))
			(?X_H (?X_F (HAVE.V ?X_N)))
			(?X_C (?X_L (HAS.V ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_B)))
			(!W2 (?X_A (BEFORE ?X_E)))
			(!W3 (?X_A (BEFORE ?X_H)))
			(!W4 (?X_A (BEFORE ?X_C)))
			(!W5 (?X_B (BEFORE ?X_E)))
			(!W6 (?X_B (BEFORE ?X_H)))
			(!W7 (?X_B (BEFORE ?X_C)))
			(!W8 (?X_E (BEFORE ?X_H)))
			(!W9 (?X_E (BEFORE ?X_C)))
			(!W10 (?X_H (BEFORE ?X_C)))
		)
	)
	(
			"A bat of a boy has a of a boy has X_I is in."
			"A boy has a of a boy has X_I has a bat of a boy has a of a boy has X_I."
			"A boy has a of a boy has X_I has a black hat is a boy has a of a boy has X_I."
			"A agent has a black bat of a boy has X_I in a hand of a boy has X_I is a of a agent."
			"A boy has a of a boy has X_I has a black bat of a boy has X_I in a hand of a boy has X_I is a of a agent."
		adding constraint (I$0$248.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D (((ADV-A (TO.P ?X_A)) GET.9.V) ?O)) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_D = ?O)))
			(!R6 (?X_D (AFRAID.A (KA (TRY.V ?X_C)))))
			(!R7 (?X_A BOARD.N))
			(!R8 (?X_B (K OWN.A) WAY.N))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
			(!R10 (?X_C GAINER.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (?X_D (HAVE.V ?O))))))
			(?G2 (?X_D (NEED.V ?O)))
			(?G3 (?X_D (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D HAVE.V ?O)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_D HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-81.PR ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_F (AFRAID.A (KA (TRY.V ?X_D)))))
			(!R2 (?X_C (K OWN.A) WAY.N))
			(!R3 (?X_C (PERTAIN-TO ?X_F)))
			(!R4 (?X_D GAINER.N))
			(!R5 (?X_F AGENT.N))
			(!R6 (?X_E BOARD.N))
			(!R7 (NOT (?O AGENT.N)))
			(!R8 (NOT (?O ACTION.N)))
			(!R9 (NOT (?X_F = ?O)))
		)
		(:STEPS
			(?X_B (?X_F (((ADV-A (TO.P ?X_E)) GET.9.V) ?O)))
		)
	)
	(
			"A afraid trying a gainer agent get.222s O to a board."
		adding constraint (ME$9$269.SK AGENT.N)
		adding constraint (WE$0$270.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D (((ADV-A (FROM.P ?X_C)) FALL.4.V) ?L2)) ** ?X_E)
		(:ROLES
			(!R1 (?X_D BROTHER.N))
			(!R2 (?X_C LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_C = ?L2)))
			(!R5 (?X_C TREE.N))
			(!R6 (?X_B AGENT.N))
			(!R7 (?X_D (PERTAIN-TO ?X_B)))
			(!R8 (?X_A HOUSE.N))
			(!R9 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?X_C))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.4.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?X_C)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.4.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.4.V) ?L2))
			(?X_E (?X_D FALL.4.V))
			(?X_E (?X_D FALL.4.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? FALL.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.19.V)
	              (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F))))))
	             ** ?X_G)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F))))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F))))))))
			(!R5 (?X_E HOUSE.N))
			(!R6 (?X_F (PLUR WOOD.N)))
			(!R7 (?X_D HIKE.N))
			(!R8 (?X_A AGENT.N))
			(!R9 (?X_E (PERTAIN-TO ?X_A)))
			(!R10 (?X_B (PERTAIN-TO ?X_A)))
			(!R11 (?X_B BROTHER.N))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V
	     (KA
	      ((ADV-A (AT.P (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))
	       BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F))))))))
		)
		(:PARAPHRASES
			(?X_G
	   (?X_C
	    ((ADV-A
	      (DESTINATION_PREP.? (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))
	     GO.19.V)))
			(?X_G
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.?
	        (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))
	      GO.19.V))))
			(?X_G
	   (?X_C
	    ((ADV-A
	      (DESTINATION_PREP.? (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))
	     GO.19.V)
	    (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))
			(?X_G (?X_C GO.19.V))
			(?X_G (?X_C GO.19.V (K (IN.P (?X_D ((ADV-A (BY.P ?X_E)) (IN.P ?X_F)))))))
			(?X_G (?X_C (LOCATION_ADV.? GO.19.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_G))
			(!W2 (?I2 BEFORE ?X_G))
			(!W3 (?P1 AFTER ?X_G))
			(!W4 (?P2 AFTER ?X_G))
			(!W5 (?G1 CAUSE-OF ?X_G))
			(!W6 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C REQUEST_ACTION.4.V ?X_D (KA (DOWN.ADV GET.V))) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_D BROTHER.N))
			(!R3 ((KA (DOWN.ADV GET.V)) ACTION.N))
			(!R4 (NOT (?X_C = ?X_D)))
			(!R5 (?X_A AGENT.N))
			(!R6 (?X_D (PERTAIN-TO ?X_A)))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_B HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V ?X_D (KA (DOWN.ADV GET.V)))))
			(?G2 (?X_C (WANT.V (THAT (?X_C (DOWN.ADV GET.V))))))
		)
		(:STEPS
			(?E1 (?X_C (ASK.V ?X_D (KA (DOWN.ADV GET.V)))))
			(?E2 (?X_D (DOWN.ADV GET.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_C (ASK.V ?X_D (KA (DOWN.ADV GET.V)))))
			(?X_E (?X_C (TELL.V ?X_D (KA (DOWN.ADV GET.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-82.PR (KE (?X_A (OF.P ?X_H))) ?L2
	               (K (IN.P (?X_L ((ADV-A (BY.P ?X_M)) (IN.P ?X_N))))) ?X_P
	               (KA (DOWN.ADV GET.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H (VERY.ADV HIGH.A)))
			(!R2 (?X_H (PLUR TREE.N)))
			(!R3 (?X_K AGENT.N))
			(!R4 (?X_M (PERTAIN-TO ?X_K)))
			(!R5 (?X_P (PERTAIN-TO ?X_K)))
			(!R6 (?X_M HOUSE.N))
			(!R7 (?X_N (PLUR WOOD.N)))
			(!R8 (?X_L HIKE.N))
			(!R9 ((K (IN.P (?X_L ((ADV-A (BY.P ?X_M)) (IN.P ?X_N))))) DESTINATION.N))
			(!R10 ((KA (DOWN.ADV GET.V)) ACTION.N))
			(!R11 (?X_O AGENT.N))
			(!R12 (NOT (?X_O = ?X_P)))
			(!R13 (?X_Q LOCATION.N))
			(!R14 (?X_Q TREE.N))
			(!R15 (?X_P BROTHER.N))
			(!R16 (NOT (?X_Q = ?L2)))
			(!R17 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_J
	   (?X_O ((ADV-A (FROM.P ?L1)) GO.19.V)
	    (K (IN.P (?X_L ((ADV-A (BY.P ?X_M)) (IN.P ?X_N)))))))
			(?X_G (?X_P (CLIMB.V (KE (?X_A (OF.P ?X_H))))))
			(?X_E (?X_O REQUEST_ACTION.4.V ?X_P (KA (DOWN.ADV GET.V))))
			(?X_C (?X_P (((ADV-A (FROM.P ?X_Q)) FALL.4.V) ?L2)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.242s in a hike by a house of a agent in a woods from L1."
			"A brother of a agent climbs X_A of a very high trees."
			"A agent request action.251s a brother of a agent down get."
			"A brother of a agent fall.239s a destination from a location tree."
		adding constraint (THEY$24$284.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A MAKE.5.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A GIRL.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B DRESS.N))
			(!R4 (?X_B PRETTY.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.5.V ?X_B (KA (MAKE.V ?X_C))) ** ?E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B GIRL.N))
			(!R3 ((KA (MAKE.V ?X_C)) ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_C PRETTY.A))
			(!R6 (?X_C DRESS.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B (KA (MAKE.V ?X_C)))))
			(?G2 (?X_A (WANT.V (THAT (?X_A (MAKE.V ?X_C))))))
		)
		(:STEPS
			(?E1 (?X_A (ASK.V ?X_B (KA (MAKE.V ?X_C)))))
			(?X_D (?X_B (MAKE.V ?X_C)))
		)
		(:PARAPHRASES
			(?E (?X_A (ASK.V ?X_B (KA (MAKE.V ?X_C)))))
			(?E (?X_A (TELL.V ?X_B (KA (MAKE.V ?X_C)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (COMPOSITE-SCHEMA-83.PR ?X_E ?X_D (KA (MAKE.V ?X_E)))) ** ?E)
		(:ROLES
			(!R1 (NOT (?X_E AGENT.N)))
			(!R2 (?X_D GIRL.N))
			(!R3 ((KA (MAKE.V ?X_E)) ACTION.N))
			(!R4 (?X_C AGENT.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_E PRETTY.A))
			(!R7 (?X_E DRESS.N))
		)
		(:STEPS
			(?X_B (?X_D MAKE.5.V ?X_E))
			(?E_1 (?X_C REQUEST_ACTION.5.V ?X_D (KA (MAKE.V ?X_E))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B BEFORE ?E_1))
		)
	)
	(
			"A girl make.261s a pretty dress."
			"A agent request action.265s a girl making a pretty dress."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-84.PR ?X_A)) ** ?E)
		(:ROLES
			(!R1 (?X_A BIRD.N))
			(!R2 (?X_A BABY.N))
		)
		(:STEPS
			(?X_C (NOT (?X_A ((CAN.AUX HAVE.V) ?X_A))))
		)
	)
	(
			"A bird baby has a bird baby not can."
		adding constraint (HE$14$303.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-85.PR
	               (KA ((ADV-A (WITH.P (ALL.D (PLUR CHILD.N)))) PLAY.V))))
	             ** ?E)
		(:STEPS
			(?X_C (?X_A (LIKE.V (KA ((ADV-A (WITH.P (ALL.D (PLUR CHILD.N)))) PLAY.V)))))
		)
	)
	(
			"X_A likes with all childs playing."
		adding constraint (THEY$7$320.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A
	              ((CAN.AUX MAKE.6.V) (K (L X (AND (X GREEN.A) (X PAINT.N))))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K (L X (AND (X GREEN.A) (X PAINT.N)))) AGENT.N)))
			(!R3 (?X_A (HAS.V (NO.D (PLUR FLOWER.N)))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT ((K (L X (AND (X GREEN.A) (X PAINT.N)))) EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V (K (L X (AND (X GREEN.A) (X PAINT.N)))))))))
		)
		(:PRECONDS
			(?I1 (NOT ((K (L X (AND (X GREEN.A) (X PAINT.N)))) EXIST.V)))
		)
		(:POSTCONDS
			(?P1 ((K (L X (AND (X GREEN.A) (X PAINT.N)))) EXIST.V))
			(?P2 (?X_A (HAVE.V (K (L X (AND (X GREEN.A) (X PAINT.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.6.V ?X_B
	              (KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3
	   ((KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))) ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_B (HAS.V (NO.D (PLUR FLOWER.N)))))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V ?X_B
	     (KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))))
			(?G2
	   (?X_A
	    (WANT.V
	     (THAT (?X_A ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N))))))))))
		)
		(:STEPS
			(?E1
	   (?X_A
	    (ASK.V ?X_B
	     (KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))))
			(?X_D
	   (?X_B ((CAN.AUX (CAN.AUX MAKE.V)) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))
		)
		(:PARAPHRASES
			(?E
	   (?X_A
	    (ASK.V ?X_B
	     (KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))))
			(?E
	   (?X_A
	    (TELL.V ?X_B
	     (KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-86.PR
	               (K
	                (L X
	                 (AND (X BLUE.A)
	                      ((X PAINT.N) AND (X AND) (X YELLOW.A) (X PAINT.N)))))
	               (K (L X (AND (X GREEN.A) (X PAINT.N)))) ?X_K
	               (KA
	                ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D (PLUR LEAF.N)))
			(!R2 (?X_D GREEN.A))
			(!R3 (NOT ((K (L X (AND (X GREEN.A) (X PAINT.N)))) AGENT.N)))
			(!R4 (?X_J AGENT.N))
			(!R5
	   ((KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))) ACTION.N))
			(!R6 (?X_K AGENT.N))
			(!R7 (?X_K (HAS.V (NO.D (PLUR FLOWER.N)))))
			(!R8 (NOT (?X_J = ?X_K)))
		)
		(:STEPS
			(?X_H (?X_A STEM.V))
			(?X_F (?X_K ((CAN.AUX MAKE.6.V) (K (L X (AND (X GREEN.A) (X PAINT.N)))))))
			(?X_C
	   (?X_D
	    ((CAN.AUX MIX.V)
	     (K
	      (L X
	       (AND (X BLUE.A) ((X PAINT.N) AND (X AND) (X YELLOW.A) (X PAINT.N))))))))
			(?E_1
	   (?X_J REQUEST_ACTION.6.V ?X_K
	    (KA ((CAN.AUX MAKE.V) (K (L X (AND (X GREEN.A) (X PAINT.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_C)))
			(!W2 (?X_H (BEFORE ?E_1)))
			(!W3 (?X_C (BEFORE ?E_1)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (AT.P ?X_H)) PLAY.4.V)) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_D TOY.N))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A ROCK.N))
			(!R7 (?X_E (OVER.P ?X_A)))
			(!R8 (?X_D (PLUR SHOE.N)))
			(!R9 (?X_D (PERTAIN-TO ?X_C)))
			(!R10 (?X_C MALE.A))
			(!R11 (?X_C AGENT.N))
			(!R12 (?X_B (PLUR FOOT.N)))
			(!R13 (?X_B (PERTAIN-TO ?X_C)))
			(!R14 (?X_H OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_E HAVE.V ?X_D))
		)
		(:POSTCONDS
			(?P1 (?X_E EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (WITH.P ?X_D)) PLAY.4.V)))
			(?X_F (?X_E PLAY.4.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (AT.P ?X_H)) PLAY.5.V)) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_D TOY.N))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_E (OVER.P ?X_A)))
			(!R7 (?X_A ROCK.N))
			(!R8 (?X_D (PLUR SHOE.N)))
			(!R9 (?X_D (PERTAIN-TO ?X_B)))
			(!R10 (?X_B MALE.A))
			(!R11 (?X_B AGENT.N))
			(!R12 (?X_C (PERTAIN-TO ?X_B)))
			(!R13 (?X_C (PLUR FOOT.N)))
			(!R14 (?X_H OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_E HAVE.V ?X_D))
		)
		(:POSTCONDS
			(?P1 (?X_E EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (WITH.P ?X_D)) PLAY.5.V)))
			(?X_F (?X_E PLAY.5.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-87.PR (BOTH.D (PLUR SHOE.N)) ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_J (PLUR SHOE.N)))
			(!R2 (?X_K (PLUR FOOT.N)))
			(!R3 (?X_L MALE.A))
			(!R4 (?X_L AGENT.N))
			(!R5 (?X_J (PERTAIN-TO ?X_L)))
			(!R6 (?X_K (PERTAIN-TO ?X_L)))
			(!R7 (?X_O AGENT.N))
			(!R8 (?X_R ROCK.N))
			(!R9 (?X_S (OVER.P ?X_R)))
			(!R10 (?X_S AGENT.N))
		)
		(:STEPS
			(?X_N
	   ((BOTH.D
	     (L X
	      (AND (X {REF}.N)
	           (?X_A ?X_C (AND (?X_C (PLUR SHOE.N)) (?X_C (PERTAIN-TO ?X_O)))
	            (X (OF.P ?X_C))))))
	    (OFF.PRT COME.V)))
			(?X_I (?X_L ((UP.PRT PICK.V) (BOTH.D (PLUR SHOE.N)))))
			(?X_F (?X_L ((BACK.ADV ((ADV-A (ON.P ?X_K)) PUT.V)) ?X_J)))
			(?X_D (?X_L ((BACK.ADV ((ADV-A (ON.P ?X_K)) PUT.V)) ?X_J)))
			(?X_Q (?X_S ((ADV-A (AT.P ?X_H)) PLAY.4.V)))
			(?X_Q (?X_S ((ADV-A (AT.P ?X_H)) PLAY.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_N (BEFORE ?X_I)))
			(!W2 (?X_N (BEFORE ?X_F)))
			(!W3 (?X_N (BEFORE ?X_D)))
			(!W4 (?X_I (BEFORE ?X_F)))
			(!W5 (?X_I (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) COME.3.V) (KA VISIT.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A FRIEND.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA VISIT.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA VISIT.V))))
			(!R5 (?X_A (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KA VISIT.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA VISIT.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA VISIT.V))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA VISIT.V)))
	     ((ADV-A (FOR.P (KA VISIT.V))) COME.3.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA VISIT.V))) COME.3.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (KA VISIT.V))) COME.3.V) (KA VISIT.V)))
			(?X_B (?X_A COME.3.V))
			(?X_B (?X_A COME.3.V (KA VISIT.V)))
			(?X_B (?X_A (LOCATION_ADV.? COME.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (SAME-TIME ?X_E)))
			(!W7 (?X_B (RIGHT-AFTER ?X_C)))
			(!W8 (?X_D (BEFORE ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) COME.4.V) (KA VISIT.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A FRIEND.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA VISIT.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA VISIT.V))))
			(!R5 (?X_A (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KA VISIT.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA VISIT.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA VISIT.V))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA VISIT.V)))
	     ((ADV-A (FOR.P (KA VISIT.V))) COME.4.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA VISIT.V))) COME.4.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (KA VISIT.V))) COME.4.V) (KA VISIT.V)))
			(?X_B (?X_A COME.4.V))
			(?X_B (?X_A COME.4.V (KA VISIT.V)))
			(?X_B (?X_A (LOCATION_ADV.? COME.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (BEFORE ?X_C)))
			(!W7 (?X_D (SAME-TIME ?X_C)))
			(!W8 (?X_D (RIGHT-AFTER ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (TOGETHER.ADV PLAY.6.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_A EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (WITH.P ?T)) PLAY.6.V)))
			(?X_B (?X_A PLAY.6.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.10.V (K ((ADV-A (FROM.P ?X_B)) SICK.A))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A FRIEND.N))
			(!R2 (NOT ((K ((ADV-A (FROM.P ?X_B)) SICK.A)) AGENT.N)))
			(!R3 (NOT ((K ((ADV-A (FROM.P ?X_B)) SICK.A)) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K ((ADV-A (FROM.P ?X_B)) SICK.A)))))
			(!R6 (?X_B ((ADV-A (AT.P (K HOME.N))) SICK.A)))
			(!R7 (?X_A (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1
	   (?X_A (WANT.V (THAT (?X_A (HAVE.V (K ((ADV-A (FROM.P ?X_B)) SICK.A))))))))
			(?G2 (?X_A (NEED.V (K ((ADV-A (FROM.P ?X_B)) SICK.A)))))
			(?G3 (?X_A (WANT.V (K ((ADV-A (FROM.P ?X_B)) SICK.A)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K ((ADV-A (FROM.P ?X_B)) SICK.A)))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K ((ADV-A (FROM.P ?X_B)) SICK.A)) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K ((ADV-A (FROM.P ?X_B)) SICK.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-88.PR (KA VISIT.V)
	               (K ((ADV-A (FROM.P ?X_J)) SICK.A))))
	             ** ?E)
		(:ROLES
			(!R1 ((KA VISIT.V) DESTINATION.N))
			(!R2 (?X_H AGENT.N))
			(!R3 (?X_I (PERTAIN-TO ?X_I)))
			(!R4 (?X_I FRIEND.N))
			(!R5 (NOT ((K ((ADV-A (FROM.P ?X_J)) SICK.A)) AGENT.N)))
			(!R6 (NOT ((K ((ADV-A (FROM.P ?X_J)) SICK.A)) ACTION.N)))
			(!R7 (NOT (?X_I = (K ((ADV-A (FROM.P ?X_J)) SICK.A)))))
			(!R8 (?X_J ((ADV-A (AT.P (K HOME.N))) SICK.A)))
		)
		(:STEPS
			(?X_G (?X_I ((ADV-A (FROM.P ?L1)) COME.4.V) (KA VISIT.V)))
			(?X_A (?X_I ((ADV-A (FROM.P ?L1)) COME.3.V) (KA VISIT.V)))
			(?X_E (?X_H (TOGETHER.ADV PLAY.6.V)))
			(?X_C (?X_I GET.10.V (K ((ADV-A (FROM.P ?X_J)) SICK.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_A)))
			(!W2 (?X_G (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_C)))
			(!W4 (?X_A (BEFORE ?X_E)))
			(!W5 (?X_A (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A of a of X_I friend friend come.326s visiting from L1."
			"A of a of X_I friend friend come.325s visiting from L1."
			"A agent play.334s together."
			"A of a of X_I friend friend get.330s from a at home sick sick."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-89.PR (KA ((ADV-A (ON.P ?X_B)) GO.V)))) ** ?E)
		(:ROLES
			(!R1 (?X_A (TOO.ADV SHORT.A)))
			(!R2 (?X_B RIDE.N))
		)
		(:STEPS
			(?X_D (?X_A (WANT.V (KA ((ADV-A (ON.P ?X_B)) GO.V)))))
		)
	)
	(
			"A too short wants on a ride going."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) COME.5.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MONKEY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) COME.5.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.5.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) COME.5.V) ?L2))
			(?X_B (?X_A (DOWN.ADV COME.5.V)))
			(?X_B (?X_A COME.5.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? COME.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (CONSEC ?X_C)))
			(!W7 (?X_B (AT-ABOUT ?X_D)))
			(!W8 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) COME.6.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MONKEY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) COME.6.V)))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.6.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) COME.6.V) ?L2))
			(?X_C (?X_A (DOWN.ADV COME.6.V)))
			(?X_C (?X_A COME.6.V ?L2))
			(?X_C (?X_A (LOCATION_ADV.? COME.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (CONSEC ?X_B)))
			(!W7 (?X_B (AT-ABOUT ?X_D)))
			(!W8 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X FEED.3.V ?X_C ?X_B) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_C MONKEY.N))
			(!R3 (?X_B FOOD.N))
			(!R4 (NOT (?X = ?X_C)))
			(!R5 (NOT (?X_C = ?X_B)))
			(!R6 (NOT (?X = ?X_B)))
			(!R7 (?X_B COCOANUT.N))
			(!R8 (?X_B (TO.P ?X_A)))
			(!R9 (?X_A GROUND.N))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_C EAT.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_B))
			(?I2 (?X_C HUNGRY.A))
		)
		(:STEPS
			(?X_F (?X_C EAT.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_B))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F AFTER ?E))
			(!W2 (?X_F (AT-ABOUT ?X_D)))
			(!W3 (?X_E (AT-ABOUT ?X_D)))
			(!W4 (?X_E (CONSEC ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C EAT.3.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_C MONKEY.N))
			(!R2 (?X_B FOOD.N))
			(!R3 (?X_B COCOANUT.N))
			(!R4 (?X_B (TO.P ?X_A)))
			(!R5 (?X_A GROUND.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
			(?I2 (?X_C HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (HAVE.V ?X_B))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_D))
			(!W2 (?I1 BEFORE ?X_D))
			(!W3 (?X_D CAUSE-OF ?P1))
			(!W4 (?X_E (CONSEC ?X_D)))
			(!W5 (?X_D (AT-ABOUT ?X_F)))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R
	              (COMPOSITE-SCHEMA-90.PR ?X_P (KA (L X (AND (X RUN.V) (X PLAY.V))))
	               ?L2 ?X_R ?X_S))
	             ** ?E)
		(:ROLES
			(!R1 (?X_P TREE.N))
			(!R2 (?X_Q GROUND.N))
			(!R3 (?X_S (TO.P ?X_Q)))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (NOT (?X = ?X_R)))
			(!R6 (NOT (?X_R = ?X_S)))
			(!R7 (NOT (?X = ?X_S)))
			(!R8 (?X AGENT.N))
			(!R9 (?X_R MONKEY.N))
			(!R10 (?X_S FOOD.N))
			(!R11 (?X_S COCOANUT.N))
		)
		(:STEPS
			(?X_O (?X_R ((CAN.AUX CLIMB.V) ?X_P)))
			(?X_K (?X_R (CLIMB.V ?X_P)))
			(?X_M (?X_R (GET.V ?X_S)))
			(?X_I (?X_R (DROP.V ?X_S)))
			(?X_G (?X_R ((ADV-A (FROM.P ?L1)) COME.5.V) ?L2))
			(?X_G (?X_R ((ADV-A (FROM.P ?L1)) COME.6.V) ?L2))
			(?E_1 (?X FEED.3.V ?X_R ?X_S))
			(?X_E (?X_R EAT.3.V ?X_S))
			(?X_C (?X_R (LIKE.V (KA (L X (AND (X RUN.V) (X PLAY.V)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_K)))
			(!W2 (?X_O (BEFORE ?X_M)))
			(!W3 (?X_O (BEFORE ?X_I)))
			(!W4 (?X_O (BEFORE ?X_G)))
			(!W5 (?X_O (BEFORE ?X_E)))
			(!W6 (?X_O (BEFORE ?X_C)))
			(!W7 (?X_K (BEFORE ?X_M)))
			(!W8 (?X_K (BEFORE ?X_I)))
			(!W9 (?X_K (BEFORE ?X_G)))
			(!W10 (?X_K (BEFORE ?X_E)))
			(!W11 (?X_K (BEFORE ?X_C)))
			(!W12 (?X_M (BEFORE ?X_I)))
			(!W13 (?X_M (BEFORE ?X_G)))
			(!W14 (?X_M (BEFORE ?X_E)))
			(!W15 (?X_M (BEFORE ?X_C)))
			(!W16 (?X_I (BEFORE ?X_G)))
			(!W17 (?X_I (BEFORE ?X_E)))
			(!W18 (?X_I (BEFORE ?X_C)))
			(!W19 (?X_G (BEFORE ?X_E)))
			(!W20 (?X_G (BEFORE ?X_C)))
			(!W21 (?E_1 (BEFORE ?X_E)))
			(!W22 (?E_1 (BEFORE ?X_C)))
			(!W23 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A monkey climbs a tree can."
			"A monkey climbs a tree."
			"A monkey gets a food cocoanut to a ground."
			"A monkey drops a food cocoanut to a ground."
			"A monkey come.350s a destination from L1."
			"A monkey come.351s a destination from L1."
			"A agent feed.359s a monkey a food cocoanut to a ground."
			"A monkey eat.357s a food cocoanut to a ground."
			"A monkey likes run playing."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-91.PR (TWO.D (PLUR DOG.N)))) ** ?E)
		(:ROLES
			(!R1 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:STEPS
			(?X_D (?X_B (HAVE.V (TWO.D (PLUR DOG.N)))))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-92.PR ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B HORSE.N))
			(!R3 (?X_B GOOD.A))
		)
		(:STEPS
			(E14.SK (NOT (?X_A (WHIP.V ?X_B))))
		)
	)
	(
			"A agent whips a horse good not."
	)
)



(
	(EPI-SCHEMA ((?X_A
	              (GIVE.3.V ?X_B
	               (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N))))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2
	   (NOT
	    ((THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N)))))) AGENT.N)))
			(!R3 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT
	      (?X_B
	       (HAVE.V
	        (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N))))))))))))
		)
		(:PRECONDS
			(?I1
	   (?X_A HAVE.V (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N))))))))
			(?I2
	   (NOT
	    (?X_B HAVE.V
	     (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N)))))))))
		)
		(:POSTCONDS
			(?P1
	   (NOT
	    (?X_A HAVE.V
	     (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N)))))))))
			(?P2
	   (?X_B HAVE.V (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N))))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_A
	    ((ADV-A (TO.P ?X_B))
	     (GIVE.3.V
	      (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N))))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-93.PR (KE (AND (?X_G RED.A) (?X_G YELLOW.A)))
	               (K PURPLE.A) ?X_G
	               (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2
	   (NOT
	    ((THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N)))))) AGENT.N)))
			(!R3 (?X_I AGENT.N))
		)
		(:STEPS
			(?X_D (?X_I (GIVE.V (KE (AND (?X_G RED.A) (?X_G YELLOW.A))))))
			(?X_B ((SET-OF (K RED.N) (K BLUE.N)) (MAKE.V (K PURPLE.A))))
			(?X_F
	   (?X_I
	    (GIVE.3.V ?X_G
	     (THREE.D (L X (AND (X (PLUR CAKE.N)) (X (OF.P (K PAINT.N)))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent gives and a agent red a agent yellow."
			"Red and blue make purple."
			"A agent give.23s a agent three cake of."
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (UNDER.P ?X_A)) FIND.14.V) ?X_C)) ** ?X_G)
		(:ROLES
			(!R1 (?X_B PUPPY.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C DAY.N))
			(!R4 (?X_A (PERTAIN-TO (K SUSIE.N))))
			(!R5 (?X_A BED.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_G))
			(!W2 (?X_G (RIGHT-AFTER ?X_D)))
			(!W3 (?X_G (SAME-TIME ?X_F)))
			(!W4 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_G))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K SUSIE.N) (COMPOSITE-SCHEMA-94.PR ?X_H ?X_J ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_H PUPPY.N))
			(!R2 (?X_I DAY.N))
			(!R3 (?X_J (PERTAIN-TO (K SUSIE.N))))
			(!R4 (?X_J BED.N))
		)
		(:STEPS
			(?X_G ((K SUSIE.N) (GET.V ?X_H)))
			(?X_E ((K SUSIE.N) (EVERYWHERE.ADV LOOK.V)))
			(?X_C (?X_H (UNDER.P ?X_J)))
			(?X_A (?X_H (((ADV-A (UNDER.P ?X_J)) FIND.14.V) ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_A)))
			(!W3 (?X_E (BEFORE ?X_A)))
			(!W4 (?X_C (BEFORE ?X_A)))
		)
	)
	(
			"Susie gets a puppy."
			"Susie looks everywhere."
			"A puppy is under."
			"A puppy find.37s a day under a of susie bed."
		adding constraint (I$0$71.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-95.PR (K (PLUR RAINBOW.N)) ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_D DAY.N))
			(!R2 (?X_I FAMILY.N))
			(!R3 (?X_J RAINBOW.N))
		)
		(:STEPS
			(?X_C (?X_I ((REALLY.ADV LOVE.V) (K (PLUR RAINBOW.N)))))
			(?X_F ((ADV-E (DURING ?X_D)) (?X_A RAIN.V)))
			(?X_H (?X_I (OUTSIDE.ADV LOOK.V)))
			(?X_L (?X_I (SEE.V ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_F)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_L)))
			(!W4 (?X_F (BEFORE ?X_H)))
			(!W5 (?X_F (BEFORE ?X_L)))
			(!W6 (?X_H (BEFORE ?X_L)))
		)
	)
	(
			"A family loves rainbows really."
			"X_A rains DURING a day."
			"A family looks outside."
			"A family sees a rainbow."
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P ?X_C)) PUT.4.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_C BOX.N))
			(!R4 (NOT (?X_C AGENT.N)))
			(!R5 (?X_B SMALLER-THAN ?X_C))
			(!R6 (?X_B (SO.ADV TINY.A)))
			(!R7 (?X_B COUPLE.N))
			(!R8 (?X_B BABY.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (IN.P ?X_C))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B (IN.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (IN.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (INTO.P ?X_C)) PUT.4.V) ?X_B))
			(?X_D (?X_A ((ADV-A (INSIDE.P ?X_C)) PUT.4.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.15.V (KE (?X_B TURTLE.V))) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((KE (?X_B TURTLE.V)) ENTITY.N))
			(!R4 (?X_B (SO.ADV TINY.A)))
			(!R5 (?X_B BABY.N))
			(!R6 (?X_B COUPLE.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((KE (?X_B TURTLE.V)) (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P (KE (?X_B TURTLE.V)))) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT ((KE (?X_B TURTLE.V)) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (KE (?X_B TURTLE.V))))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT ((KE (?X_B TURTLE.V)) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (KE (?X_B TURTLE.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (BEFORE ?X_D)))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-96.PR ?X_J (KE (?X_J TURTLE.V)))) ** ?E)
		(:ROLES
			(!R1 (?X_C HOUR.N))
			(!R2 ((KE (?X_J TURTLE.V)) ENTITY.N))
			(!R3 (?X_J SMALLER-THAN ?X_L))
			(!R4 (?X_J (SO.ADV TINY.A)))
			(!R5 (?X_J COUPLE.N))
			(!R6 (?X_J BABY.N))
			(!R7 (?X_K AGENT.N))
			(!R8 (?X_L BOX.N))
			(!R9 (NOT (?X_L AGENT.N)))
		)
		(:STEPS
			(?X_B (?X_K (((ADV-A (FOR.P ?X_C)) KEEP.V) ?X_J)))
			(?X_G (?X_K FIND.15.V (KE (?X_J TURTLE.V))))
			(?X_I (?X_J TURTLE.V))
			(?X_E (?X_K (((ADV-A (IN.P ?X_L)) PUT.4.V) ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_I (BEFORE ?X_E)))
		)
	)
	(
			"A agent keeps a so tiny couple baby for a hour."
			"A agent find.70s a so tiny couple baby turtles."
			"A so tiny couple baby turtles."
			"A agent put.65s a so tiny couple baby in a box."
	)
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.7.V ?X_B ?A) ** ?X_C)
		(:ROLES
			(!R1 (?X_A FRIEND.N))
			(!R2 (?X_B MAN.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?E1 (?X_A ((AGAIN.ADV ASK.V) ?X_B ?A)))
			(?E2 (?X_B (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((AGAIN.ADV ASK.V) ?X_B ?A)))
			(?X_C (?X_A (TELL.V ?X_B ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.8.V ?X_B ?A) ** ?X_E)
		(:ROLES
			(!R1 (?X_A FRIEND.N))
			(!R2 (?X_B MAN.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?X_D (?X_A ((WHY.ADV ASK.V) ?X_B ?A)))
			(?E2 (?X_B (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_E (?X_A ((WHY.ADV ASK.V) ?X_B ?A)))
			(?X_E (?X_A (TELL.V ?X_B ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?X_D))
			(!W2 (?X_D CAUSE-OF ?E2))
			(!W3 (?X_E (BEFORE ?X_F)))
			(!W4 (?X_D (SAME-TIME ?X_F)))
			(!W5 (?X_D (RIGHT-AFTER ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-97.PR ?X_J ?A)) ** ?E)
		(:ROLES
			(!R1 (?X_J MAN.N))
			(!R2 (?X_I FRIEND.N))
			(!R3 (?X_I (PERTAIN-TO ?X_J)))
			(!R4 (NOT (?X_I = ?X_J)))
			(!R5 (?A ACTION.N))
		)
		(:STEPS
			(?X_H (?X_J CRY.V))
			(?X_F (?X_I REQUEST_ACTION.8.V ?X_J ?A))
			(?X_D (?X_I REQUEST_ACTION.7.V ?X_J ?A))
			(?X_B (?X_J (OUT.ADV ((ADV-A (IN.P (K ANGER.N))) LASH.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_D)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_F (BEFORE ?X_D)))
			(!W4 (?X_F (BEFORE ?X_B)))
			(!W5 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man cries."
			"A friend of a man request action.84s a man a action."
			"A friend of a man request action.83s a man a action."
			"A man lashes out in anger."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?X_B)) COME.7.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C FRIEND.N))
			(!R2 (?X_B OUTSIDE.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_B = ?L2)))
			(!R5 (?X_B LOUD.A))
			(!R6 (?X_B NOISE.N))
			(!R7 (?X_A (OF.P ?X_B)))
			(!R8 (?X_A SOURCE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?X_B)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?X_B))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) COME.7.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?X_B)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.7.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) COME.7.V) ?L2))
			(?X_D (?X_C (OVER.PRT COME.7.V)))
			(?X_D (?X_C COME.7.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? COME.7.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-98.PR ?X_M (K SCARED.A) ?X_L ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_H WOMAN.N))
			(!R2 (?X_K SOURCE.N))
			(!R3 (?X_K (OF.P ?X_M)))
			(!R4 (?X_M OUTSIDE.N))
			(!R5 (?X_M LOUD.A))
			(!R6 (?X_M NOISE.N))
			(!R7 (?X_L FRIEND.N))
			(!R8 (NOT (?X_M = ?L2)))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_J (?X_A (BE.V ?X_M)))
			(?X_G (?X_H (FEEL.V (K SCARED.A))))
			(?X_E (?X_H (CALL.V ?X_L)))
			(?X_C (?X_L ((ADV-A (FROM.P ?X_M)) COME.7.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"X_A is a outside loud noise."
			"A woman feels scared."
			"A woman calls a friend."
			"A friend come.97s a destination from a outside loud noise."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.20.V) ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_D DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_D)))
			(!R5 (?X_D STORE.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A NEW.A))
			(!R8 (?X_A (PLUR CHAIR.N)))
			(!R9 (?X_B (K OLD.A) (PLUR ONE.N)))
			(!R10 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?X_D)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) ((ADV-A (TO.P ?X_D)) GO.20.V))))
			(?X_E
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.20.V))))
			(?X_E (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.20.V) ?X_D))
			(?X_E (?X_C GO.20.V))
			(?X_E (?X_C GO.20.V ?X_D))
			(?X_E (?X_C (LOCATION_ADV.? GO.20.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_G)))
			(!W7 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.21.V) ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_D DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_D)))
			(!R5 (?X_D STORE.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (K OLD.A) (PLUR ONE.N)))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
			(!R9 (?X_B NEW.A))
			(!R10 (?X_B (PLUR CHAIR.N)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?X_D)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) ((ADV-A (TO.P ?X_D)) GO.21.V))))
			(?X_E
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.21.V))))
			(?X_E (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.21.V) ?X_D))
			(?X_E (?X_C GO.21.V))
			(?X_E (?X_C GO.21.V ?X_D))
			(?X_E (?X_C (LOCATION_ADV.? GO.21.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_G)))
			(!W7 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C GET.11.V (K MORE.A)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT ((K MORE.A) AGENT.N)))
			(!R3 (NOT ((K MORE.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = (K MORE.A))))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (K OLD.A) (PLUR ONE.N)))
			(!R8 (?X_B NEW.A))
			(!R9 (?X_B (PERTAIN-TO ?X_C)))
			(!R10 (?X_B (PLUR CHAIR.N)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V (K MORE.A)))))))
			(?G2 (?X_C (NEED.V (K MORE.A))))
			(?G3 (?X_C (WANT.V (K MORE.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V (K MORE.A))))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 ((K MORE.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V (K MORE.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_F)))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R (COMPOSITE-SCHEMA-99.PR ?X_P ?X_O (K NICE.A) ?X_Q (K MORE.A)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_P (K OLD.A) (PLUR ONE.N)))
			(!R2 (?X_O NEW.A))
			(!R3 (?X_O (PLUR CHAIR.N)))
			(!R4 (?X_O (PERTAIN-TO ?X_R)))
			(!R5 (?X_P (PERTAIN-TO ?X_R)))
			(!R6 (?X_Q DESTINATION.N))
			(!R7 (?X_Q STORE.N))
			(!R8 (?X_R AGENT.N))
			(!R9 (NOT ((K MORE.A) AGENT.N)))
			(!R10 (NOT ((K MORE.A) ACTION.N)))
			(!R11 (NOT (?X_R = (K MORE.A))))
		)
		(:STEPS
			(?X_N (?X_R (NEED.V ?X_O)))
			(?X_L (?X_R ((AWAY.PRT THROW.V) ?X_P)))
			(?X_A (?X_R ((AWAY.PRT THROW.V) ?X_P)))
			(?X_J (?X_R ((ADV-A (FROM.P ?L1)) GO.20.V) ?X_Q))
			(?X_J (?X_R ((ADV-A (FROM.P ?L1)) GO.21.V) ?X_Q))
			(?X_H (?X_R GET.11.V (K MORE.A)))
			(?X_B (?X_R ((UP.PRT SET.V) ?X_O)))
			(?X_F (?X_R ((UP.PRT SET.V) ?X_O)))
			(?X_D (?X_O (LOOK.V (K NICE.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_N (BEFORE ?X_A)))
			(!W2 (?X_N (BEFORE ?X_J)))
			(!W3 (?X_N (BEFORE ?X_H)))
			(!W4 (?X_N (BEFORE ?X_B)))
			(!W5 (?X_N (BEFORE ?X_F)))
			(!W6 (?X_N (BEFORE ?X_D)))
			(!W7 (?X_L (BEFORE ?X_A)))
			(!W8 (?X_L (BEFORE ?X_J)))
			(!W9 (?X_L (BEFORE ?X_H)))
			(!W10 (?X_L (BEFORE ?X_B)))
			(!W11 (?X_L (BEFORE ?X_F)))
			(!W12 (?X_L (BEFORE ?X_D)))
			(!W13 (?X_A (BEFORE ?X_J)))
			(!W14 (?X_A (BEFORE ?X_H)))
			(!W15 (?X_A (BEFORE ?X_B)))
			(!W16 (?X_A (BEFORE ?X_F)))
			(!W17 (?X_A (BEFORE ?X_D)))
			(!W18 (?X_J (BEFORE ?X_B)))
			(!W19 (?X_J (BEFORE ?X_F)))
			(!W20 (?X_J (BEFORE ?X_D)))
			(!W21 (?X_H (BEFORE ?X_B)))
			(!W22 (?X_H (BEFORE ?X_F)))
			(!W23 (?X_H (BEFORE ?X_D)))
			(!W24 (?X_B (BEFORE ?X_D)))
			(!W25 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent needs a new chairs of a agent."
			"A agent throws a of a agent away."
			"A agent throws a of a agent away."
			"A agent go.132s a destination store from L1."
			"A agent go.133s a destination store from L1."
			"A agent get.126s more."
			"A agent sets a new chairs of a agent up."
			"A agent sets a new chairs of a agent up."
			"A new chairs of a agent looks nice."
	)
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.1.V
	              (KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 ((KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))) ACTION.N))
			(!R3 (?X_A WAGON.N))
			(!R4 (?X_A LITTLE.A))
			(!R5 (?X_C (HAS.V ?X_A)))
		)
		(:PRECONDS
			(?I1
	   (?X_B
	    (THINK.V
	     (THAT ((KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B (WANT.V (KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))))))
			(?X_D
	   (?X_B (LIKE.V (KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))))))
			(?X_D
	   (?X_B (LOVE.V (KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))))))
			(?X_D
	   (?X_B (ENJOY.V (KA (RIDE.V (IN.P (AND (?X_C LITTLE.A) (?X_C WAGON.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.2.V (KA ((ADV-A (IN.P ?X_C)) RIDE.V))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 ((KA ((ADV-A (IN.P ?X_C)) RIDE.V)) ACTION.N))
			(!R3 (?X_C WAGON.N))
			(!R4 (?X_C LITTLE.A))
			(!R5 (?X_A (HAS.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (?X_B (THINK.V (THAT ((KA ((ADV-A (IN.P ?X_C)) RIDE.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B (WANT.V (KA ((ADV-A (IN.P ?X_C)) RIDE.V)))))
			(?X_D (?X_B (LIKE.V (KA ((ADV-A (IN.P ?X_C)) RIDE.V)))))
			(?X_D (?X_B (LOVE.V (KA ((ADV-A (IN.P ?X_C)) RIDE.V)))))
			(?X_D (?X_B (ENJOY.V (KA ((ADV-A (IN.P ?X_C)) RIDE.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.7.V ?X_C ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C ENTITY.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_D DESTINATION.N))
			(!R6 (?X_D RIDE.N))
			(!R7 (?X_A LITTLE.A))
			(!R8 (?X_B (HAS.V ?X_A)))
			(!R9 (?X_A WAGON.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?X_D)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?X_D)) BE.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B (((ADV-A (TO.P ?X_D)) ((ADV-A (FOR.P ?X_D)) TAKE.V)) ?X_C)))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) CARRY.V) ?X_C))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) BRING.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? TAKE.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? CARRY.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? BRING.V) ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?P1 POSTCOND-OF ?X_E))
			(!W3 (?X_E (AFTER ?X_F)))
			(!W4 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-100.PR
	               (KA (RIDE.V (IN.P (AND (?X_K LITTLE.A) (?X_K WAGON.N)))))
	               (KA ((ADV-A (IN.P ?X_H)) RIDE.V)) ?X_I ?X_J))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K (HAS.V ?X_H)))
			(!R2 (?X_H WAGON.N))
			(!R3 (?X_H LITTLE.A))
			(!R4 ((KA ((ADV-A (IN.P ?X_H)) RIDE.V)) ACTION.N))
			(!R5 (?X_I AGENT.N))
			(!R6 ((KA (RIDE.V (IN.P (AND (?X_K LITTLE.A) (?X_K WAGON.N))))) ACTION.N))
			(!R7 (?X_I SMALLER-THAN.N ?X_K))
			(!R8 (?X_J DESTINATION.N))
			(!R9 (?X_J RIDE.N))
			(!R10 (?X_K AGENT.N))
		)
		(:STEPS
			(?X_E (?X_I ENJOY_ACTION.2.V (KA ((ADV-A (IN.P ?X_H)) RIDE.V))))
			(?X_C
	   (?X_I ENJOY_ACTION.1.V
	    (KA (RIDE.V (IN.P (AND (?X_K LITTLE.A) (?X_K WAGON.N)))))))
			(?X_A (?X_K TRANSPORT_OBJECT.7.V ?X_I ?X_J))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_C)))
			(!W2 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A agent enjoy action.150s in a wagon little riding."
			"A agent enjoy action.147s riding in and a agent has a wagon little little a agent has a wagon little wagon."
			"A agent has a wagon little transport object.141s a agent a destination ride."
	)
)



(
	(EPI-SCHEMA ((?X_A FIND.16.V (KE (?X_B (VERY.ADV UNCOMFORTABLE.A)))) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((KE (?X_B (VERY.ADV UNCOMFORTABLE.A))) ENTITY.N))
			(!R4 (NOT (?X_A (SURE.A (KE (?X_A (WANT.V (KA (EVEN.ADV (WEAR.V ?X_B))))))))))
			(!R5 (?X_B DRESS.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((KE (?X_B (VERY.ADV UNCOMFORTABLE.A))) (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P (KE (?X_B (VERY.ADV UNCOMFORTABLE.A))))) SEARCH.V)))
			(?I4
	   (NOT
	    (?X_A (KNOW.V (THAT ((KE (?X_B (VERY.ADV UNCOMFORTABLE.A))) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (KE (?X_B (VERY.ADV UNCOMFORTABLE.A)))))))
		)
		(:POSTCONDS
			(?P1
	   (?X_A (KNOW.V (THAT ((KE (?X_B (VERY.ADV UNCOMFORTABLE.A))) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (KE (?X_B (VERY.ADV UNCOMFORTABLE.A))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-101.PR ?X_H
	               (KE (?X_H (VERY.ADV UNCOMFORTABLE.A)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2 ((KE (?X_H (VERY.ADV UNCOMFORTABLE.A))) ENTITY.N))
			(!R3 (?X_H DRESS.N))
			(!R4 (NOT (?X_G (SURE.A (KE (?X_G (WANT.V (KA (EVEN.ADV (WEAR.V ?X_H))))))))))
		)
		(:STEPS
			(?X_F (?X_G ((ADV-A (ON.P ?X_H)) TRY.V)))
			(?X_B (?X_G ((NEVER.ADV (AGAIN.ADV WEAR.V)) ?X_H)))
			(?X_D (?X_G FIND.16.V (KE (?X_H (VERY.ADV UNCOMFORTABLE.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A agent tries on a dress."
			"A agent wears a dress never again."
			"A agent find.155s a dress very uncomfortable."
		adding constraint (I$0$255.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_E
	              (COMPOSITE-SCHEMA-102.PR ?X_F
	               (K (L X (AND (X COLD.A) (X INSIDE.N))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_F GREAT.A))
			(!R3 (?X_F TIME.N))
			(!R4 (?X_M ICE.N))
			(!R5 (?X_M RINK.N))
		)
		(:STEPS
			(?X_H (?X_E (HAVE.V ?X_F)))
			(?X_J (?X_A FIT.V))
			(?X_L (?X_B (BE.V (K (L X (AND (X COLD.A) (X INSIDE.N)))))))
			(?X_O (?X_D ((ADV-A (AT.P ?X_M)) BE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_J)))
			(!W2 (?X_H (BEFORE ?X_L)))
			(!W3 (?X_H (BEFORE ?X_O)))
			(!W4 (?X_J (BEFORE ?X_L)))
			(!W5 (?X_J (BEFORE ?X_O)))
			(!W6 (?X_L (BEFORE ?X_O)))
		)
	)
	(
			"A agent has a great time."
			"X_A fits."
			"X_B is cold inside."
			"X_D is at a ice rink."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-103.PR ?X_A (K (AWAY.ADV (FROM.P ?X_B))))) **
	             ?E)
		(:ROLES
			(!R1 (?X_E HOOP.N))
		)
		(:STEPS
			(?X_D (NOT (?X_B ((CAN.AUX CATCH.V) ?X_A))))
			(?X_G (?X_E (ROLL.V (K (AWAY.ADV (FROM.P ?X_B))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_G)))
		)
	)
	(
			"X_B catches X_A not can."
			"A hoop rolls away from X_B."
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.8.V ?X_C (KA (EAT.V ?X_C))) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C FISH.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 ((KA (EAT.V ?X_C)) DESTINATION.N))
			(!R6 (?X_C LARGE.A))
			(!R7 (?X_A (PLUR FRIEND.N)))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P (KA (EAT.V ?X_C)))) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P (KA (EAT.V ?X_C)))) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P (KA (EAT.V ?X_C)))) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P (KA (EAT.V ?X_C)))) CARRY.V) ?X_C))
			(?X_D
	   (?X_B
	    (((ADV-A (TO.P (KA (EAT.V ?X_C))))
	      (BACK.PRT ((ADV-A (FOR.P (KA (EAT.V ?X_C)))) BRING.V)))
	     ?X_C)))
			(?X_D (?X_B (LOCATION_ADV.? TAKE.V) ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? CARRY.V) ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? BRING.V) ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.3.V (KA ((ADV-A (WITH.P ?X_B)) GO.V))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA ((ADV-A (WITH.P ?X_B)) GO.V)) ACTION.N))
			(!R3 (?X_B (PERTAIN-TO ?X_A)))
			(!R4 (?X_B (PLUR FRIEND.N)))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA ((ADV-A (WITH.P ?X_B)) GO.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A (WANT.V (KA ((ADV-A (WITH.P ?X_B)) GO.V)))))
			(?X_C (?X_A (LIKE.V (KA ((ADV-A (WITH.P ?X_B)) GO.V)))))
			(?X_C (?X_A (LOVE.V (KA ((ADV-A (WITH.P ?X_B)) GO.V)))))
			(?X_C (?X_A (ENJOY.V (KA ((ADV-A (WITH.P ?X_B)) GO.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.10.V (K FISHING.N)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K FISHING.N) ACTION.N)))
			(!R3 (NOT ((K FISHING.N) AGENT.N)))
			(!R4 ((K FISHING.N) OBJECT.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A (PLUR FRIEND.N)))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V (K FISHING.N))))))
		)
		(:PARAPHRASES
			(?X_C (?X_B WANT.V (K FISHING.N)))
			(?X_C (?X_B (WANT.V (K FISHING.N))))
			(?X_C (?X_B (LIKE.10.V (K FISHING.N))))
			(?X_C (?X_B (LOVE.V (K FISHING.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-104.PR ?X_N (KA (EAT.V ?X_N))
	               (KA ((ADV-A (WITH.P ?X_M)) GO.V)) (K FISHING.N)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H POND.N))
			(!R2 (?X_H LOCAL.A))
			(!R3 ((K FISHING.N) OBJECT.N))
			(!R4 (NOT ((K FISHING.N) ACTION.N)))
			(!R5 (NOT ((K FISHING.N) AGENT.N)))
			(!R6 ((KA ((ADV-A (WITH.P ?X_M)) GO.V)) ACTION.N))
			(!R7 (?X_M (PERTAIN-TO ?X_O)))
			(!R8 (?X_M (PLUR FRIEND.N)))
			(!R9 (?X_N SMALLER-THAN.N ?X_O))
			(!R10 (?X_N FISH.N))
			(!R11 (?X_N LARGE.A))
			(!R12 ((KA (EAT.V ?X_N)) DESTINATION.N))
			(!R13 (?X_O AGENT.N))
		)
		(:STEPS
			(?X_J (?X_O ((ADV-A (WITH.P ?X_M)) GO.V)))
			(?X_L (?X_O LIKE.10.V (K FISHING.N)))
			(?X_A (?X_O ENJOY_ACTION.3.V (KA ((ADV-A (WITH.P ?X_M)) GO.V))))
			(?X_G ((ADV-E (DURING (K YESTERDAY.N))) (?X_O ((ADV-A (TO.P ?X_H)) GO.V))))
			(?X_E (?X_O (CATCH.V ?X_N)))
			(?X_C (?X_O TRANSPORT_OBJECT.8.V ?X_N (KA (EAT.V ?X_N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_G)))
			(!W3 (?X_J (BEFORE ?X_E)))
			(!W4 (?X_J (BEFORE ?X_C)))
			(!W5 (?X_L (BEFORE ?X_A)))
			(!W6 (?X_L (BEFORE ?X_G)))
			(!W7 (?X_L (BEFORE ?X_E)))
			(!W8 (?X_L (BEFORE ?X_C)))
			(!W9 (?X_A (BEFORE ?X_G)))
			(!W10 (?X_A (BEFORE ?X_E)))
			(!W11 (?X_A (BEFORE ?X_C)))
			(!W12 (?X_G (BEFORE ?X_E)))
			(!W13 (?X_G (BEFORE ?X_C)))
			(!W14 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent goes with a friends of a agent."
			"A agent like.179s fishing."
			"A agent enjoy action.190s with a friends of a agent going."
			"A agent goes DURING yesterday to a pond local."
			"A agent catches a fish large."
			"A agent transport object.175s a fish large eating a fish large."
		adding constraint (ME$0$329.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-105.PR ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_A FEMALE.A))
			(!R2 (?X_A AGENT.N))
			(!R3 (?X_B MOUSE.N))
		)
		(:STEPS
			(?X_D (?X_A (WANT.V ?X_B)))
		)
	)
	(
			"A female agent wants a mouse."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.4.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B (PLUR HEN.N)))
			(!R6 (?X_A CAT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.4.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.4.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.4.V) ?L2))
			(?X_C (?X_B ((ADV-A (AT.P ?X_A)) RUN.4.V)))
			(?X_C (?X_B RUN.4.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (COMPOSITE-SCHEMA-106.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C CAT.N))
			(!R2 (?X_D (PLUR HEN.N)))
			(!R3 (?X_D DOG.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_B (?X_D ((ADV-A (FROM.P ?L1)) RUN.4.V) ?L2))
		)
	)
	(
			"A hens dog run.232 a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) RUN.5.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E COW.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A GOOD.A))
			(!R6 (?X_A MAN.N))
			(!R7 (?X_E (WITH.P ?X_A)))
			(!R8 (?X_A (TO.P ?X_C)))
			(!R9 (?X_C DOG.N))
			(!R10 (?X_C (HAS.V ?X_B)))
			(!R11 (?X_B BIG.A))
			(!R12 (?X_B HAT.N))
			(!R13 (?X_D GOOD.A))
			(!R14 (?X_C (IS.V ?X_D)))
			(!R15 (?X_D DOG.N))
			(!R16 (?X_D LITTLE.A))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.5.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.5.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.5.V) ?L2))
			(?X_F (?X_E (CAN.AUX RUN.5.V)))
			(?X_F (?X_E RUN.5.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? RUN.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) RUN.6.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E COW.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_E (WITH.P ?X_A)))
			(!R6 (?X_A GOOD.A))
			(!R7 (?X_A MAN.N))
			(!R8 (?X_A (TO.P ?X_C)))
			(!R9 (?X_C DOG.N))
			(!R10 (?X_B GOOD.A))
			(!R11 (?X_B LITTLE.A))
			(!R12 (?X_B DOG.N))
			(!R13 (?X_C (IS.V ?X_B)))
			(!R14 (?X_D BIG.A))
			(!R15 (?X_C (HAS.V ?X_D)))
			(!R16 (?X_D HAT.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.6.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.6.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.6.V) ?L2))
			(?X_F (?X_E (CAN.AUX RUN.6.V)))
			(?X_F (?X_E RUN.6.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? RUN.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C TRANSPORT_OBJECT.9.V ?X_D ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?X_D HAT.N))
			(!R3 (?X_D SMALLER-THAN.N ?X_C))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_E DESTINATION.N))
			(!R6 (?X_D BIG.A))
			(!R7 (?X_C (HAS.V ?X_D)))
			(!R8 (?X_E GOOD.A))
			(!R9 (?X_E MAN.N))
			(!R10 (?X_E (TO.P ?X_C)))
			(!R11 (?X_A DOG.N))
			(!R12 (?X_A LITTLE.A))
			(!R13 (?X_A GOOD.A))
			(!R14 (?X_C (IS.V ?X_A)))
			(!R15 (?X_B (WITH.P ?X_E)))
			(!R16 (?X_B COW.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D ((ADV-A (AT.P ?X_E)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_D ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_C (HAVE.V ?X_D)))
		)
		(:POSTCONDS
			(?P1 (?X_D ((ADV-A (AT.P ?X_E)) BE.V)))
		)
		(:PARAPHRASES
			(?X_F (?X_C ((MAY.AUX ((ADV-A (TO.P ?X_E)) TAKE.V)) ?X_D)))
			(?X_F (?X_C ((ADV-A (TO.P ?X_E)) CARRY.V) ?X_D))
			(?X_F (?X_C ((ADV-A (TO.P ?X_E)) BRING.V) ?X_D))
			(?X_F (?X_C (LOCATION_ADV.? TAKE.V) ?X_D))
			(?X_F (?X_C (LOCATION_ADV.? CARRY.V) ?X_D))
			(?X_F (?X_C (LOCATION_ADV.? BRING.V) ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?P1 POSTCOND-OF ?X_F))
			(!W3 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((MAY.AUX ((ADV-A (TO.P ?X_A)) TAKE.6.V)) ?X_E)) ** ?X_F)
		(:ROLES
			(!R1 (?X_D DOG.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (NOT (?X_E ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_D = ?X_E)))
			(!R6 (?X_A GOOD.A))
			(!R7 (?X_A MAN.N))
			(!R8 (?X_A (TO.P ?X_D)))
			(!R9 (?X_E HAT.N))
			(!R10 (?X_E BIG.A))
			(!R11 (?X_D (HAS.V ?X_E)))
			(!R12 (?X_B (WITH.P ?X_A)))
			(!R13 (?X_B COW.N))
			(!R14 (?X_D (IS.V ?X_C)))
			(!R15 (?X_C GOOD.A))
			(!R16 (?X_C LITTLE.A))
			(!R17 (?X_C DOG.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
			(?G2 (?X_D (NEED.V ?X_E)))
			(?G3 (?X_D (WANT.V ?X_E)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D HAVE.V ?X_E)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_E (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_D HAVE.V ?X_E))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?I2 PRECOND-OF ?X_F))
			(!W3 (?I3 PRECOND-OF ?X_F))
			(!W4 (?P1 POSTCOND-OF ?X_F))
			(!W5 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-107.PR (SET-OF ?X_K ?X_L ?X_N) ?L2 ?X_K ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_N (WITH.P ?X_K)))
			(!R2 (?X_I AGENT.N))
			(!R3 (?X_J GOOD.A))
			(!R4 (?X_J LITTLE.A))
			(!R5 (?X_J DOG.N))
			(!R6 (?X_L (IS.V ?X_J)))
			(!R7 (?X_K DESTINATION.N))
			(!R8 (?X_M SMALLER-THAN.N ?X_L))
			(!R9 (?X_K GOOD.A))
			(!R10 (?X_K MAN.N))
			(!R11 (?X_K (TO.P ?X_L)))
			(!R12 (?X_M HAT.N))
			(!R13 (?X_M BIG.A))
			(!R14 (?X_L DOG.N))
			(!R15 (?X_L (HAS.V ?X_M)))
			(!R16 (NOT (?X_M AGENT.N)))
			(!R17 (NOT (?X_M ACTION.N)))
			(!R18 (NOT (?X_L = ?X_M)))
			(!R19 (?X_N COW.N))
			(!R20 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_I (SEE.V (SET-OF ?X_K ?X_L ?X_N))))
			(?X_F (?X_L TRANSPORT_OBJECT.9.V ?X_M ?X_K))
			(?X_F (?X_L ((MAY.AUX ((ADV-A (TO.P ?X_K)) TAKE.6.V)) ?X_M)))
			(?X_D (?X_N ((ADV-A (FROM.P ?L1)) RUN.5.V) ?L2))
			(?X_D (?X_N ((ADV-A (FROM.P ?L1)) RUN.6.V) ?L2))
			(?X_B (NOT (?X_N (CAN.AUX PLAY.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent sees a destination good man to a dog is X_J has a hat big a dog is a good little dog has a hat big and a cow with a destination good man to X_L."
			"A dog is a good little dog has a hat big transport object.249s a hat big a destination good man to a dog is X_J has a hat big."
			"A dog is a good little dog has a hat big take.259s a hat big may to a destination good man to a dog is X_J has a hat big."
			"A cow with a destination good man to X_L run.263s a destination from L1."
			"A cow with a destination good man to X_L run.264s a destination from L1."
			"A cow with a destination good man to X_L plays not can."
	)
)



(
	(EPI-SCHEMA ((?X_E (((ADV-A (NEAR.P ?X_B)) FIND.17.V) ?X_F)) ** ?X_H)
		(:ROLES
			(!R1 (?X_E DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_F FLOOR.N))
			(!R4 (?X_E (PERTAIN-TO ?X_C)))
			(!R5 (?X_A (IS.V ?X_B)))
			(!R6 (?X_D LARGE.A))
			(!R7 (?X_D (IS.V ?X_C)))
			(!R8 (?X_D BOY.N))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 (?X_E ((ADV-A (FOR.P ?X_F)) SEARCH.V)))
			(?I4 (NOT (?X_E (KNOW.V (THAT (?X_F (AT.P ?L)))))))
			(?I5 (NOT (?X_E (HAVE.V ?X_F))))
		)
		(:POSTCONDS
			(?P1 (?X_E (KNOW.V (THAT (?X_F (AT.P ?L))))))
			(?P2 (?X_E (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (((ADV-A (NEAR.P ?X_B)) FIND.18.V) ?X_F)) ** ?X_H)
		(:ROLES
			(!R1 (?X_E DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_F BUN.N))
			(!R4 (?X_A (IS.V ?X_B)))
			(!R5 (?X_E (PERTAIN-TO ?X_D)))
			(!R6 (?X_C LARGE.A))
			(!R7 (?X_C BOY.N))
			(!R8 (?X_C (IS.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 (?X_E ((ADV-A (FOR.P ?X_F)) SEARCH.V)))
			(?I4 (NOT (?X_E (KNOW.V (THAT (?X_F (AT.P ?L)))))))
			(?I5 (NOT (?X_E (HAVE.V ?X_F))))
		)
		(:POSTCONDS
			(?P1 (?X_E (KNOW.V (THAT (?X_F (AT.P ?L))))))
			(?P2 (?X_E (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-108.PR ?X_G ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_C (IS.V ?X_D)))
			(!R2 (?X_E LARGE.A))
			(!R3 (?X_E BOY.N))
			(!R4 (?X_E (IS.V ?X_F)))
			(!R5 (?X_H (PERTAIN-TO ?X_F)))
			(!R6 (?X_G FLOOR.N))
			(!R7 (?X_H DOG.N))
			(!R8 (?X_I BUN.N))
		)
		(:STEPS
			(?X_B (?X_H (((ADV-A (NEAR.P ?X_D)) FIND.17.V) ?X_G)))
			(?X_B (?X_H (((ADV-A (NEAR.P ?X_D)) FIND.18.V) ?X_I)))
		)
	)
	(
			"A dog of X_F find.286s a floor near X_D."
			"A dog of X_F find.287s a bun near X_D."
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.10.V ?X_B (K (PLUR MONTH.N))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B ENTITY.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 ((K (PLUR MONTH.N)) DESTINATION.N))
			(!R6 (?X_B (PLUR WEIGHT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P (K (PLUR MONTH.N)))) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P (K (PLUR MONTH.N)))) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P (K (PLUR MONTH.N)))) TAKE.V) ?X_B))
			(?X_C
	   (?X_A
	    (((ADV-A (TO.P (K (PLUR MONTH.N))))
	      (OUT.PRT ((ADV-A (FOR.P (K (PLUR MONTH.N)))) CARRY.V)))
	     ?X_B)))
			(?X_C (?X_A ((ADV-A (TO.P (K (PLUR MONTH.N)))) BRING.V) ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-109.PR (KA (GET.V (K BUFF.N))) (K BUFF.N) ?X_I
	               (K (PLUR MONTH.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I SMALLER-THAN.N ?X_J))
			(!R2 (?X_I (PLUR WEIGHT.N)))
			(!R3 (?X_J AGENT.N))
			(!R4 ((K (PLUR MONTH.N)) DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_J (WANT.V (KA (GET.V (K BUFF.N))))))
			(?X_F (?X_J ((ADV-A (FOR.P (KA (OUT.PRT WORK.V)))) START.V)))
			(?X_B (?X_J (GET.V (K BUFF.N))))
			(?X_D (?X_J TRANSPORT_OBJECT.10.V ?X_I (K (PLUR MONTH.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A agent wants getting buff."
			"A agent starts for out working."
			"A agent gets buff."
	)
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-110.PR ?X_O (KE (?X_A DRUM.V)) ?X_F
	               (SET-OF ?X_J ?X_K) ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_F (K LITTLE.A) GIRL.N))
			(!R3 (?X_F (WITH.P ?X_G)))
			(!R4 (?X_J GOOD.A))
			(!R5 (?X_J BABY.N))
			(!R6 (?X_K PRETTY.A))
			(!R7 (?X_K DOLL.N))
			(!R8 (?X_O ((ADV-A (IN.P ?X_N)) HIGH.A)))
			(!R9 (?X_O RED.A))
			(!R10 (?X_O BIRD.N))
			(!R11 (?X_P MAN.N))
			(!R12 (?X_P (IN.P ?X_Q)))
		)
		(:STEPS
			(?X_B (NOT (?X_C ((CAN.AUX CATCH.V) ?X_O))))
			(?X_E (?X_O ((CAN.AUX SEE.V) (KE (?X_A DRUM.V)))))
			(?X_I (?X_O ((CAN.AUX SEE.V) ?X_F)))
			(?X_M (?X_O ((CAN.AUX SEE.V) (SET-OF ?X_J ?X_K))))
			(?X_S (?X_O ((CAN.AUX SEE.V) ?X_P)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_E)))
			(!W2 (?X_B (BEFORE ?X_I)))
			(!W3 (?X_B (BEFORE ?X_M)))
			(!W4 (?X_B (BEFORE ?X_S)))
			(!W5 (?X_E (BEFORE ?X_I)))
			(!W6 (?X_E (BEFORE ?X_M)))
			(!W7 (?X_E (BEFORE ?X_S)))
			(!W8 (?X_I (BEFORE ?X_M)))
			(!W9 (?X_I (BEFORE ?X_S)))
			(!W10 (?X_M (BEFORE ?X_S)))
		)
	)
	(
			"ULF to English error"
			"A in X_N high red bird sees X_A drums can."
			"A in X_N high red bird sees a with X_G can."
			"A in X_N high red bird sees a good baby and a pretty doll can."
			"A in X_N high red bird sees a man in X_Q can."
	)
)



(
	(EPI-SCHEMA ((?X_B
	              (COMPOSITE-SCHEMA-111.PR (KA (CATCH.V ?X_E))
	               (KE ((K (PLUR CHICK.N)) (NEAR.P ?X_F))) ?X_C))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E CHICK.N))
			(!R2 (?X_F HEN.N))
		)
		(:STEPS
			(?X_D (?X_B (WANT.V (KA (CATCH.V ?X_E)))))
			(?X_H (?X_A (BE.V (KE ((K (PLUR CHICK.N)) (NEAR.P ?X_F))))))
			(?X_J (?X_B ((NEVER.ADV CATCH.V) ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_H)))
			(!W2 (?X_D (BEFORE ?X_J)))
			(!W3 (?X_H (BEFORE ?X_J)))
		)
	)
	(
			"X_B wants catching a chick."
			"X_A is chicks near a hen."
			"X_B catches X_C never."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-112.PR (SET-OF ?X_B (TWO.D (PLUR CAT.N))))) **
	             ?E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B DOG.N))
		)
		(:STEPS
			(?X_D (?X_A (SEE.V (SET-OF ?X_B (TWO.D (PLUR CAT.N))))))
		)
	)
	(
			"A agent sees a dog and two cats."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.22.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A PLANE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.22.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.22.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.22.V) ?L2))
			(?X_C ((ADV-E (DURING (K YESTERDAY.N))) (?X_B ((ADV-A (ON.P ?X_A)) GO.22.V))))
			(?X_C (?X_B GO.22.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.22.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-113.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C FIRE.N))
			(!R2 (?X_F (SET-OF AGENT.N)))
			(!R3 (?X_I PLANE.N))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_J AGENT.N))
		)
		(:STEPS
			(?X_H (?X_J ((ADV-A (FROM.P ?L1)) GO.22.V) ?L2))
			(?X_E (MUST.AUX-S (?X_F (BACK.ADV TURN.V))))
			(?X_B (?X_C (ABOUT.PRT COME.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_E)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.39s a destination from L1."
			"A agent turns must back."
			"A fire comes about."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-114.PR ?X_A ?X_H)) ** ?E)
		(:ROLES
			(!R1 (?X_H BED.N))
			(!R2 (?X_G (PERTAIN-TO ?X_H)))
			(!R3 (?X_H (PERTAIN-TO ?X_I)))
		)
		(:STEPS
			(?X_D (?X_H ((AWAY.ADV SWAT.V) ?X_A)))
			(?X_F (?X_A (UNDER.P ?X_H)))
			(?X_B (?X_A ((ADV-A (UNDER.P ?X_H)) RUN.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_F)))
			(!W2 (?X_D (BEFORE ?X_B)))
			(!W3 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A bed of X_I swats X_A away."
			"X_A is under."
			"X_A runs under a bed of X_I."
	)
)



(
	(EPI-SCHEMA ((?X_B REQUEST_ACTION.9.V ?X_D ?A) ** ?X_E)
		(:ROLES
			(!R1 (?X_B TEACHER.N))
			(!R2 (?X_D BOY.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_B = ?X_D)))
			(!R5 (?X_C NAME.N))
			(!R6 (?X_A SHAPE.N))
			(!R7 (?X_C (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V ?X_D ?A)))
			(?G2 (?X_B (WANT.V (THAT (?X_B (DO.V ?A))))))
		)
		(:STEPS
			(?E1 (?X_B (((ADV-A (FOR.P ?X_C)) ASK.V) ?X_D ?A)))
			(?E2 (?X_D (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_E (?X_B (((ADV-A (FOR.P ?X_C)) ASK.V) ?X_D ?A)))
			(?X_E (?X_B (TELL.V ?X_D ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-115.PR ?X_M (K SQUARE.A) ?X_C ?X_O ?A)) ** ?E)
		(:ROLES
			(!R1 (?X_C TRIANGLE.N))
			(!R2 (?X_L NAME.N))
			(!R3 (?X_M SHAPE.N))
			(!R4 (?X_L (PERTAIN-TO ?X_M)))
			(!R5 (?X_N TEACHER.N))
			(!R6 (?X_O BOY.N))
			(!R7 (NOT (?X_N = ?X_O)))
			(!R8 (?A ACTION.N))
		)
		(:STEPS
			(?X_K (?X_N (DRAW.V ?X_M)))
			(?X_G (?X_O (SAY.V (K SQUARE.A))))
			(?X_E (?X_N (CORRECT.V ?X_O)))
			(?X_B (?X_M (BE.V ?X_C)))
			(?X_I (?X_N REQUEST_ACTION.9.V ?X_O ?A))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_G)))
			(!W2 (?X_K (BEFORE ?X_E)))
			(!W3 (?X_K (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A teacher draws a shape."
			"A boy says square."
			"A teacher corrects a boy."
			"A shape is a triangle."
			"A teacher request action.73s a boy a action."
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.4.V (KA (STOP.V WORK.V))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (STOP.V WORK.V)) ACTION.N))
			(!R3 (?X_A TIRED.A))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (STOP.V WORK.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_B (?X_A (WANT.V (KA (STOP.V WORK.V)))))
			(?X_B (?X_A (LIKE.V (KA (STOP.V WORK.V)))))
			(?X_B (?X_A (LOVE.V (KA (STOP.V WORK.V)))))
			(?X_B (?X_A (ENJOY.V (KA (STOP.V WORK.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-116.PR (KA WORK.V) ?X_H (KA (STOP.V WORK.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H MAN.N))
			(!R2 (?X_I LOT.N))
			(!R3 (?X_I (OF.P (K MONEY.N))))
			(!R4 (?X_L AGENT.N))
			(!R5 (?X_L TIRED.A))
			(!R6 ((KA (STOP.V WORK.V)) ACTION.N))
		)
		(:STEPS
			(?X_A (?X_L (OF.P (KA WORK.V))))
			(?X_G (?X_L (((ADV-A (WITH.P ?X_I)) MEET.V) ?X_H)))
			(?X_E (?X_L (MARRY.V ?X_H)))
			(?X_C (MUST.AUX-S (?X_L (AGAIN.ADV (NEVER.ADV WORK.V)))))
			(?X_K (?X_L ENJOY_ACTION.4.V (KA (STOP.V WORK.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_G)))
			(!W2 (?X_A (BEFORE ?X_E)))
			(!W3 (?X_A (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent tired is of."
			"A agent tired meets a man with a lot of money."
			"A agent tired marries a man."
			"A agent tired works must again never."
			"A agent tired enjoy action.102s stopping work."
	)
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-117.PR ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_C ((ADV-A (FOR.P (K (PLUR YEAR.N)))) SAD.A)))
			(!R2 (?X_B CABIN.N))
			(!R3 (?X_B (NEAR.P ?X_A)))
			(!R4 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:STEPS
			(?X_E (?X_C (HAVE.V ?X_B)))
		)
	)
	(
			"A for years sad has a cabin near X_A of a for years sad."
	)
)



(
	(EPI-SCHEMA (((K SUSIE.N) (COMPOSITE-SCHEMA-118.PR (K LOST.A) ?X_C ?X_F)) ** ?E)
		(:ROLES
			(!R1 (?X_C MAP.N))
			(!R2 (?X_F OLD.A))
			(!R3 (?X_F MAP.N))
		)
		(:STEPS
			(?X_B ((K SUSIE.N) (GET.V (K LOST.A))))
			(?X_E ((K SUSIE.N) (NEED.V ?X_C)))
			(?X_H ((K SUSIE.N) (FIND.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_E)))
			(!W2 (?X_B (BEFORE ?X_H)))
			(!W3 (?X_E (BEFORE ?X_H)))
		)
	)
	(
			"Susie gets lost."
			"Susie needs a map."
			"Susie finds a old map."
	)
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-119.PR (KA ((ADV-A (TO.P (K SCHOOL.N))) GO.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C MORNING.N))
		)
		(:STEPS
			(?X_E ((ADV-E (DURING ?X_C)) (?X_A ((ADV-A (TO.P (K SCHOOL.N))) GO.V))))
			(?X_G (?X_B (LIKE.V (KA ((ADV-A (TO.P (K SCHOOL.N))) GO.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_G)))
		)
	)
	(
			"X_A goes DURING a morning to school."
			"X_B likes to school going."
		adding constraint (I$0$208.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-120.PR (KA (PLAY.V (K FIRE.N))) ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_H BED.N))
			(!R2 (?X_K AGENT.N))
			(!R3 (?X_G (PERTAIN-TO ?X_K)))
			(!R4 (?X_H (PERTAIN-TO ?X_K)))
			(!R5 (?X_I BURN.V))
			(!R6 (?X_I MARK.N))
			(!R7 (?X_J HAND.N))
			(!R8 (?X_J (PERTAIN-TO ?X_K)))
		)
		(:STEPS
			(?X_B (?X_K (LIKE.V (KA (PLAY.V (K FIRE.N))))))
			(?X_D (?X_H ((ADV-A (ON.P (K FIRE.N))) BE.V)))
			(?X_F (?X_K (BURN.V ?X_J)))
			(?X_M (?X_K ?X_I (HAVE.V ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
			(!W2 (?X_B (BEFORE ?X_F)))
			(!W3 (?X_B (BEFORE ?X_M)))
			(!W4 (?X_D (BEFORE ?X_F)))
			(!W5 (?X_D (BEFORE ?X_M)))
			(!W6 (?X_F (BEFORE ?X_M)))
		)
	)
	(
			"A agent likes playing fire."
			"A bed of a agent is on fire."
			"A agent burns a hand of a agent."
			"A agent has a hand of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.11.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B ENTITY.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_B (PLUR BANANA.N)))
			(!R7 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A (TAKE.V ?X_B)))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A BRING.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.23.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B STORE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.23.V)))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.23.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.23.V) ?X_B))
			(?X_C (?X_A GO.23.V))
			(?X_C (?X_A ((TOO.ADV GO.23.V) ?X_B)))
			(?X_C (?X_A (LOCATION_ADV.? GO.23.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (AT.P ?X_E)) TAKE.7.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PLUR BANANA.N)))
			(!R7 (?X_E HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-121.PR ?X_H ?L2 ?X_I ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_H (PLUR BANANA.N)))
			(!R2 (?X_I DESTINATION.N))
			(!R3 (?X_I STORE.N))
			(!R4 (?X_K SMALLER-THAN.N ?X_J))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 HOME.N))
			(!R7 (?X_K (PLUR BANANA.N)))
			(!R8 (?X_J AGENT.N))
			(!R9 (NOT (?X_K AGENT.N)))
			(!R10 (NOT (?X_K ACTION.N)))
			(!R11 (NOT (?X_J = ?X_K)))
		)
		(:STEPS
			(?X_G (?X_J (NEED.V ?X_H)))
			(?X_D (?X_J ((ADV-A (FROM.P ?L1)) GO.23.V) ?X_I))
			(?X_B (?X_J TRANSPORT_OBJECT.11.V ?X_K ?L2))
			(?X_B (?X_J (((ADV-A (AT.P ?X_E)) TAKE.7.V) ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent needs a bananas."
			"A agent go.167s a destination store from L1."
			"A agent transport object.164s a bananas a destination home."
			"A agent take.165s a bananas at X_E."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-122.PR (K BAD.A) ?X_C ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_F FRIEND.N))
			(!R2 (?X_I TRY.N))
		)
		(:STEPS
			(?X_E (?X_B (FEEL.V (K BAD.A))))
			(?X_H
	   (?X_F
	    ((ADV-A (FOR.P (KA (DRINK.V (K (L X (AND (X MORE.A) (X WATER.N))))))))
	     SUGGEST.V)))
			(?X_K (?X_B (GIVE.V ?X_C ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_H)))
			(!W2 (?X_E (BEFORE ?X_K)))
			(!W3 (?X_H (BEFORE ?X_K)))
		)
	)
	(
			"X_B feels bad."
			"A friend suggests for drinking more water."
			"X_B gives X_C a try."
		adding constraint (I$0$248.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X FEED.4.V ?X_C ?X_B) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_C KITTEN.N))
			(!R3 (?X_B FOOD.N))
			(!R4 (NOT (?X = ?X_C)))
			(!R5 (NOT (?X_C = ?X_B)))
			(!R6 (NOT (?X = ?X_B)))
			(!R7 (?X_C NEW.A))
			(!R8 (?X_C BAD.A))
			(!R9 (?X_B (PLUR SHOE.N)))
			(!R10 (?X_A AGENT.N))
			(!R11 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_C EAT.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_B))
			(?I2 (?X_C HUNGRY.A))
		)
		(:STEPS
			(?X_D (?X_C EAT.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_B))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D AFTER ?E))
			(!W2 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C EAT.4.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_C KITTEN.N))
			(!R2 (?X_B FOOD.N))
			(!R3 (?X_B (PLUR SHOE.N)))
			(!R4 (?X_C NEW.A))
			(!R5 (?X_C BAD.A))
			(!R6 (?X_A AGENT.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
			(?I2 (?X_C HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (HAVE.V ?X_B))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_D))
			(!W2 (?I1 BEFORE ?X_D))
			(!W3 (?X_D CAUSE-OF ?P1))
			(!W4 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-123.PR ?X_A ?X_J ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_H AGENT.N))
			(!R2 (?X_I (PERTAIN-TO ?X_H)))
			(!R3 (NOT (?X = ?X_J)))
			(!R4 (NOT (?X_J = ?X_I)))
			(!R5 (NOT (?X = ?X_I)))
			(!R6 (?X AGENT.N))
			(!R7 (?X_I FOOD.N))
			(!R8 (?X_I (PLUR SHOE.N)))
			(!R9 (?X_J NEW.A))
			(!R10 (?X_J BAD.A))
			(!R11 (?X_J KITTEN.N))
		)
		(:STEPS
			(?X_G (?X_H (GET.V ?X_J)))
			(?E_1 (?X FEED.4.V ?X_J ?X_I))
			(?X_E (?X_J EAT.4.V ?X_I))
			(?X_C (?X_J (BE.V ?X_A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_C)))
			(!W3 (?E_1 (BEFORE ?X_E)))
			(!W4 (?E_1 (BEFORE ?X_C)))
			(!W5 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent gets a new bad kitten."
			"A agent feed.193s a new bad kitten a food shoes of a agent."
			"A new bad kitten eat.188s a food shoes of a agent."
			"A new bad kitten is X_A."
		adding constraint (WE$0$266.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?X_B)) RUN.7.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C CAT.N))
			(!R2 (?X_B EDGE.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_B = ?L2)))
			(!R5 (?X_C (PERTAIN-TO ?X_A)))
			(!R6 (?X_A AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?X_B)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?X_B))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.7.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?X_B)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.7.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.7.V) ?L2))
			(?X_D (?X_C (AWAY.PRT RUN.7.V)))
			(?X_D (?X_C RUN.7.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? RUN.7.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((JUST.ADV GET.12.V) ?X_D)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?X_B EDGE.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_D NEW.A))
			(!R7 (?X_D (VERY.ADV PLUSH.A)))
			(!R8 (?X_D RUG.N))
			(!R9 (?X_A CAT.N))
			(!R10 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?G2 (?X_C (NEED.V ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?X_B)))
			(?I3 (?X_D (AT.P ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-124.PR ?L2 ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_F WIFE.N))
			(!R2 (?X_F (PERTAIN-TO ?X_G)))
			(!R3 (?X_N (PERTAIN-TO ?X_L)))
			(!R4 (?X_L AGENT.N))
			(!R5 (?X_M NEW.A))
			(!R6 (?X_M (VERY.ADV PLUSH.A)))
			(!R7 (?X_M RUG.N))
			(!R8 (NOT (?X_M AGENT.N)))
			(!R9 (NOT (?X_M ACTION.N)))
			(!R10 (NOT (?X_L = ?X_M)))
			(!R11 (?X_O EDGE.N))
			(!R12 (?X_N CAT.N))
			(!R13 (NOT (?X_O = ?L2)))
			(!R14 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_N ((ADV-A (WITH.P ?X_O)) PLAY.V)))
			(?X_K (?X_L ((JUST.ADV GET.12.V) ?X_M)))
			(?X_A (?X_N ((ADV-A (WITH.P ?X_O)) PLAY.V)))
			(?X_E (?X_F ((ADV-A (AT.P ?X_N)) YELL.V)))
			(?X_C (?X_N ((ADV-A (FROM.P ?X_O)) RUN.7.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_A)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_K (BEFORE ?X_A)))
			(!W5 (?X_K (BEFORE ?X_E)))
			(!W6 (?X_K (BEFORE ?X_C)))
			(!W7 (?X_A (BEFORE ?X_E)))
			(!W8 (?X_A (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A cat of a agent plays with a edge."
			"A agent get.204s a new very plush rug just."
			"A cat of a agent plays with a edge."
			"A wife of X_G yells at a cat of a agent."
			"A cat of a agent run.197s a destination from a edge."
		adding constraint (THEY$22$283.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) RIDE.3.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B TOWN.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (PLUR BIKE.N)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.3.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.3.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RIDE.3.V) ?L2))
			(?X_D (?X_C ((ADV-A (AROUND.P ?X_B)) RIDE.3.V)))
			(?X_D (?X_C RIDE.3.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? RIDE.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((TOGETHER.ADV GET.13.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?X_A TOWN.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C (PLUR BIKE.N)))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 (?X_C (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (SAME-TIME ?X_G)))
			(!W6 (?X_D (RIGHT-AFTER ?X_E)))
			(!W7 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((TOGETHER.ADV GET.9.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?X_A TOWN.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C (PLUR BIKE.N)))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 (?X_C (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (BEFORE ?X_E)))
			(!W6 (?X_F (SAME-TIME ?X_E)))
			(!W7 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B
	              (COMPOSITE-SCHEMA-125.PR (KA (RIDE.V (K (PLUR BIKE.N)))) ?X_A ?X_C
	               ?L2 ?X_Q))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G TOWN.N))
			(!R2 (?X_L DATE.N))
			(!R3 (?X_Q (PLUR BIKE.N)))
			(!R4 (?X_Q (PERTAIN-TO ?X_R)))
			(!R5 (NOT (?X_Q AGENT.N)))
			(!R6 (NOT (?X_Q ACTION.N)))
			(!R7 (NOT (?X_R = ?X_Q)))
			(!R8 (?X_R AGENT.N))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_P (?X_B (LOVE.V (KA (RIDE.V (K (PLUR BIKE.N)))))))
			(?X_N (?X_B (MEET.V ?X_A)))
			(?X_K (?X_B (((ADV-A (ON.P ?X_L)) ASK.V) ?X_C)))
			(?X_I (?X_R ((TOGETHER.ADV GET.9.V) ?X_Q)))
			(?X_D (?X_R ((TOGETHER.ADV GET.13.V) ?X_Q)))
			(?X_F (?X_R ((ADV-A (FROM.P ?L1)) RIDE.3.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_P (BEFORE ?X_N)))
			(!W2 (?X_P (BEFORE ?X_K)))
			(!W3 (?X_P (BEFORE ?X_D)))
			(!W4 (?X_P (BEFORE ?X_F)))
			(!W5 (?X_N (BEFORE ?X_K)))
			(!W6 (?X_N (BEFORE ?X_D)))
			(!W7 (?X_N (BEFORE ?X_F)))
			(!W8 (?X_K (BEFORE ?X_D)))
			(!W9 (?X_K (BEFORE ?X_F)))
			(!W10 (?X_I (BEFORE ?X_D)))
			(!W11 (?X_I (BEFORE ?X_F)))
			(!W12 (?X_D (BEFORE ?X_F)))
		)
	)
	(
			"X_B loves riding bikes."
			"X_B meets X_A."
			"X_B asks X_C on a date."
			"A agent get.222s a bikes of a agent together."
			"A agent get.220s a bikes of a agent together."
			"A agent ride.218s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.11.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_B TATTOO.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.11.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((REALLY.ADV LIKE.12.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.12.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-126.PR ?X_E ?X_G)) ** ?E)
		(:ROLES
			(!R1 (NOT (?X_E ACTION.N)))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (?X_E OBJECT.N))
			(!R4 (?X_E TATTOO.N))
			(!R5 (?X_F AGENT.N))
			(!R6 (?X_G OBJECT.N))
			(!R7 (NOT (?X_G ACTION.N)))
			(!R8 (NOT (?X_G AGENT.N)))
		)
		(:STEPS
			(?X_D (?X_F LIKE.11.V ?X_E))
			(?X_B (?X_F ((REALLY.ADV LIKE.12.V) ?X_G)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent like.235s a object tattoo."
			"A agent like.236s a object really."
		adding constraint (THEY$5$304.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.13.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B BOX.N))
			(!R5 (?X_B GLUTEN.A))
			(!R6 (?X_B FREE.A))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.13.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-127.PR ?X_D)) ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_D GLUTEN.A))
			(!R3 (?X_D BOX.N))
			(!R4 (?X_D FREE.A))
			(!R5 (NOT (?X_D ACTION.N)))
			(!R6 (NOT (?X_D AGENT.N)))
		)
		(:STEPS
			(?X_B (?X_C LIKE.13.V ?X_D))
		)
	)
	(
			"A agent like.239s a gluten box free."
	)
)



(
	(EPI-SCHEMA ((?X_C ((BACK.ADV ((ADV-A (AT.P ?X_A)) DRINK.1.V)) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C TEACHER.N))
			(!R2 (?X_B BEVERAGE.N))
			(!R3 (?X_C NEW.A))
			(!R4 (?X_A (PLUR CHILD.N)))
			(!R5 (?X_A CLASS.N))
			(!R6 (?X_B BAD.A))
			(!R7 (?X_B CLASS.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (NOT (?X_C THIRSTY.A))))))
		)
		(:PRECONDS
			(?X_F (?X_C HAVE.V ?X_B))
			(?I2 (?X_C THIRSTY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (HAVE.V ?X_B))))
			(?P2 (NOT (?X_C THIRSTY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_D))
			(!W2 (?X_F BEFORE ?X_D))
			(!W3 (?X_D CAUSE-OF ?P1))
			(!W4 (?X_D (AT-ABOUT ?X_E)))
			(!W5 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-128.PR (K PAPER.N) ?X_K ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_I BEVERAGE.N))
			(!R2 (?X_I BAD.A))
			(!R3 (?X_I CLASS.N))
			(!R4 (?X_J (PLUR CHILD.N)))
			(!R5 (?X_J CLASS.N))
			(!R6 (?X_K NEW.A))
			(!R7 (?X_K TEACHER.N))
		)
		(:STEPS
			(?X_H (?X_K (HAVE.V ?X_I)))
			(?X_F (?X_J (THROW.V (K PAPER.N))))
			(?X_D ((K PAPER.N) (HIT.V ?X_K)))
			(?X_B (?X_K ((BACK.ADV ((ADV-A (AT.P ?X_J)) DRINK.1.V)) ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A new teacher has a beverage bad class."
			"A childs class throw paper."
			"Paper hits a new teacher."
			"A new teacher drink.267s a beverage bad class back at a childs class."
	)
)



(
	(EPI-SCHEMA ((?X_C (GIVE.4.V ?X_D ?X_E)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (?X_D AGENT.N))
			(!R4 (?X_E BUN.N))
			(!R5 (?X_D (IS.V ?X_A)))
			(!R6 (?X_A BUN.N))
			(!R7 (?X_B (K HIND.A) (PLUR FOOT.N)))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_E))
			(?I2 (NOT (?X_D HAVE.V ?X_E)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?X_E)))
			(?P2 (?X_D HAVE.V ?X_E))
		)
		(:PARAPHRASES
			(?X_F (?X_C (((ADV-A (TO.P ?X_D)) GIVE.4.V) ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AFTER ?X_G)))
			(!W2 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (GIVE.5.V ?X_D ?X_E)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (?X_D AGENT.N))
			(!R4 (?X_E BUN.N))
			(!R5 (?X_A (K HIND.A) (PLUR FOOT.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_D (IS.V ?X_B)))
			(!R8 (?X_B BUN.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_E))
			(?I2 (NOT (?X_D HAVE.V ?X_E)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?X_E)))
			(?P2 (?X_D HAVE.V ?X_E))
		)
		(:PARAPHRASES
			(?X_F (?X_C (((ADV-A (TO.P ?X_D)) GIVE.5.V) ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AFTER ?X_G)))
			(!W2 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (ON.P ?X_A)) FIND.19.V) ?X_C)) ** ?X_I)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_A (K HIND.A) (PLUR FOOT.N)))
			(!R4 (?X_A (PERTAIN-TO ?X_C)))
			(!R5 (?X_B BUN.N))
			(!R6 (?X_C (IS.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_C ((MAY.AUX HAVE.V) ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?X_G (?X_C ((MAY.AUX HAVE.V) ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_I))
			(!W2 (?X_I (RIGHT-AFTER ?X_D)))
			(!W3 (?X_I (SAME-TIME ?X_F)))
			(!W4 (?X_E (AT-ABOUT ?X_F)))
			(!W5 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (((ADV-A (AT.P ?X_B)) FIND.18.V) ?X_E)) ** ?X_L)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_E BUN.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
			(!R5 (?X_A (K HIND.A) (PLUR FOOT.N)))
			(!R6 (?X_B (IS.V ?X_C)))
			(!R7 (?X_C BUN.N))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L)))
			(?I2 (?X_E (AT.P ?L)))
			(?I3 (?X_D ((ADV-A (FOR.P ?X_E)) SEARCH.V)))
			(?I4 (NOT (?X_D (KNOW.V (THAT (?X_E (AT.P ?L)))))))
			(?I5 (NOT (?X_D (HAVE.V ?X_E))))
		)
		(:POSTCONDS
			(?P1 (?X_D (KNOW.V (THAT (?X_E (AT.P ?L))))))
			(?P2 (?X_D (HAVE.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_L))
			(!W2 (?X_L (DURING ?X_G)))
			(!W3 (?X_F (DURING ?X_G)))
			(!W4 (?X_F (CONSEC ?X_L)))
			(!W5 (?X_G (AT-ABOUT ?X_H)))
			(!W6 (?X_I (AT-ABOUT ?X_H)))
			(!W7 (?X_K (DURING ?X_I)))
			(!W8 (?X_J (DURING ?X_I)))
			(!W9 (?X_J (CONSEC ?X_K)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_L))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_W (COMPOSITE-SCHEMA-129.PR ?X_U ?X_W ?X_Y)) ** ?E)
		(:ROLES
			(!R1 (?X_P BUN.N))
			(!R2 (?X_W (IS.V ?X_P)))
			(!R3 (?X_U (K HIND.A) (PLUR FOOT.N)))
			(!R4 (?X_U (PERTAIN-TO ?X_W)))
			(!R5 (?X_V AGENT.N))
			(!R6 (?X_W AGENT.N))
			(!R7 (?X_X AGENT.N))
			(!R8 (?X_Y BUN.N))
			(!R9 (NOT (?X_Y AGENT.N)))
		)
		(:STEPS
			(?X_M (?X_W ((MAY.AUX HAVE.V) ?X_W)))
			(?X_K (?X_W (ON.P ?X_U)))
			(?X_B (?X_W (((ADV-A (ON.P ?X_U)) FIND.19.V) ?X_W)))
			(?X_I (?X_W ((ADV-A (AT.P ?X_A)) LOOK.V)))
			(?X_C (?X_V SIT.V))
			(?X_D (?X_V ((ADV-A (AT.P ?X_W)) LOOK.V)))
			(?X_E (?X_V SIT.V))
			(?X_F (?X_V (((ADV-A (AT.P ?X_W)) FIND.18.V) ?X_Y)))
			(?X_G (?X_X (GIVE.4.V ?X_W ?X_Y)))
			(?X_G (?X_X (GIVE.5.V ?X_W ?X_Y)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_K)))
			(!W2 (?X_M (BEFORE ?X_B)))
			(!W3 (?X_M (BEFORE ?X_C)))
			(!W4 (?X_M (BEFORE ?X_D)))
			(!W5 (?X_M (BEFORE ?X_E)))
			(!W6 (?X_M (BEFORE ?X_F)))
			(!W7 (?X_M (BEFORE ?X_G)))
			(!W8 (?X_K (BEFORE ?X_C)))
			(!W9 (?X_K (BEFORE ?X_D)))
			(!W10 (?X_K (BEFORE ?X_E)))
			(!W11 (?X_K (BEFORE ?X_F)))
			(!W12 (?X_K (BEFORE ?X_G)))
			(!W13 (?X_B (BEFORE ?X_C)))
			(!W14 (?X_B (BEFORE ?X_D)))
			(!W15 (?X_B (BEFORE ?X_E)))
			(!W16 (?X_B (BEFORE ?X_F)))
			(!W17 (?X_B (BEFORE ?X_G)))
			(!W18 (?X_C (BEFORE ?X_D)))
			(!W19 (?X_C (BEFORE ?X_G)))
			(!W20 (?X_D (BEFORE ?X_G)))
			(!W21 (?X_E (BEFORE ?X_F)))
			(!W22 (?X_E (BEFORE ?X_G)))
			(!W23 (?X_F (BEFORE ?X_G)))
		)
	)
	(
			"A agent is a bun has a agent is a bun may."
			"A agent is a bun is on."
			"A agent is a bun find.289s a agent is a bun on a of a agent is a bun."
			"A agent is a bun looks at X_A."
			"A agent sits."
			"A agent looks at a agent is a bun."
			"A agent sits."
			"A agent find.287s a bun at a agent is a bun."
			"A agent give.279s a agent is a bun a bun."
			"A agent give.280s a agent is a bun a bun."
		adding constraint (ME$2$359.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA (((K DOG.N) (((ADV-A (AT.P ?X_B)) FIND.20.V) ?X_F)) ** ?X_I)
		(:ROLES
			(!R1 ((K DOG.N) AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_F HAT.N))
			(!R4 (?X_B AGENT.N))
			(!R5 (?X_D (PERTAIN-TO ?X_B)))
			(!R6 (?X_D (K DOG.N) JIP.N))
			(!R7 (?X_A HAT.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
			(!R9 (?X_C (IS.V ?X_D)))
			(!R10 (?X_F (PERTAIN-TO ?X_E)))
		)
		(:PRECONDS
			(?I1 ((K DOG.N) (AT.P ?L)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 ((K DOG.N) ((ADV-A (FOR.P ?X_F)) SEARCH.V)))
			(?I4 (NOT ((K DOG.N) (KNOW.V (THAT (?X_F (AT.P ?L)))))))
			(?I5 (NOT ((K DOG.N) (HAVE.V ?X_F))))
		)
		(:POSTCONDS
			(?P1 ((K DOG.N) (KNOW.V (THAT (?X_F (AT.P ?L))))))
			(?P2 ((K DOG.N) (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_I))
			(!W2 (?X_I (AT-ABOUT ?X_H)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K DOG.N) (((ADV-A (AT.P ?X_A)) FIND.21.V) ?X_E)) ** ?X_H)
		(:ROLES
			(!R1 ((K DOG.N) AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_E HAT.N))
			(!R4 (?X_A AGENT.N))
			(!R5 (?X_D (PERTAIN-TO ?X_A)))
			(!R6 (?X_D (K DOG.N) JIP.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_B HAT.N))
			(!R9 (?X_C (IS.V ?X_D)))
		)
		(:PRECONDS
			(?I1 ((K DOG.N) (AT.P ?L)))
			(?I2 (?X_E (AT.P ?L)))
			(?I3 ((K DOG.N) ((ADV-A (FOR.P ?X_E)) SEARCH.V)))
			(?I4 (NOT ((K DOG.N) (KNOW.V (THAT (?X_E (AT.P ?L)))))))
			(?I5 (NOT ((K DOG.N) (HAVE.V ?X_E))))
		)
		(:POSTCONDS
			(?P1 ((K DOG.N) (KNOW.V (THAT (?X_E (AT.P ?L))))))
			(?P2 ((K DOG.N) (HAVE.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (AT-ABOUT ?X_G)))
			(!W3 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K DOG.N) (COMPOSITE-SCHEMA-130.PR ?X_I ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_I (PERTAIN-TO ?X_E)))
			(!R2 (?X_F HAT.N))
			(!R3 (?X_F (PERTAIN-TO ?X_K)))
			(!R4 (?X_H (K DOG.N) JIP.N))
			(!R5 (?X_G (IS.V ?X_H)))
			(!R6 (?X_H (PERTAIN-TO ?X_K)))
			(!R7 (?X_I HAT.N))
			(!R8 ((K DOG.N) AGENT.N))
			(!R9 (?X_J HAT.N))
			(!R10 (?X_K AGENT.N))
		)
		(:STEPS
			(?X_D ((K DOG.N) SIT.V))
			(?X_B ((K DOG.N) (((ADV-A (AT.P ?X_K)) FIND.20.V) ?X_I)))
			(?X_B ((K DOG.N) (((ADV-A (AT.P ?X_K)) FIND.21.V) ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D BEFORE ?X_B))
		)
	)
	(
			"Dog sits."
			"Dog find.302s a hat of X_E at a agent."
			"Dog find.304s a hat at a agent."
	)
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-131.PR ?X_D (KA (SEE.V ?X_D)))) ** ?E)
		(:ROLES
			(!R1 (?X_C (HOME.ADV DRIVE.V)))
			(!R2 (?X_C (SAD.A (KE (?X_C (KILL.V ?X_D))))))
			(!R3 (?X_D DEAD.A))
			(!R4 (?X_D DOG.N))
			(!R5 (?X_D (IN.P ?X_E)))
		)
		(:STEPS
			(?X_B (?X_C (HIT.V ?X_D)))
			(?X_G (?X_C ((OUT.PRT GET.V) (KA (SEE.V ?X_D)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_G)))
		)
	)
	(
			"A home drive sad a home drive sad X_C kills a dead dog in X_E kills a dead dog in X_E hits a dead dog in X_E."
			"A home drive sad a home drive sad X_C kills a dead dog in X_E kills a dead dog in X_E gets seeing a dead dog in X_E out."
	)
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-132.PR ?X_I ?X_J ?X_H)) ** ?E)
		(:ROLES
			(!R1 (?X_I DOG.N))
			(!R2 (?X_J HEART.N))
			(!R3 (?X_H HOLE.N))
			(!R4 (?X_I (PERTAIN-TO ?X_K)))
			(!R5 (?X_J (PERTAIN-TO ?X_K)))
			(!R6 (?X_L PET.N))
			(!R7 (?X_L STORE.N))
			(!R8 (?X_O GREAT.A))
		)
		(:STEPS
			(?X_A (?X_K (LOSE.V ?X_I)))
			(?X_E (?X_K (LOSE.V ?X_I)))
			(?X_G (?X_K ?X_H (IN.P ?X_J)))
			(?X_B (?X_K (((ADV-A (IN.P ?X_J)) FEEL.V) ?X_H)))
			(?X_N (?X_K ((ADV-A (TO.P ?X_L)) GO.V)))
			(?X_C (?X_O DOG.N))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_E)))
			(!W2 (?X_A (BEFORE ?X_G)))
			(!W3 (?X_A (BEFORE ?X_B)))
			(!W4 (?X_A (BEFORE ?X_N)))
			(!W5 (?X_A (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_G)))
			(!W7 (?X_E (BEFORE ?X_B)))
			(!W8 (?X_E (BEFORE ?X_N)))
			(!W9 (?X_E (BEFORE ?X_C)))
			(!W10 (?X_G (BEFORE ?X_B)))
			(!W11 (?X_G (BEFORE ?X_N)))
			(!W12 (?X_G (BEFORE ?X_C)))
			(!W13 (?X_B (BEFORE ?X_N)))
			(!W14 (?X_B (BEFORE ?X_C)))
			(!W15 (?X_N (BEFORE ?X_C)))
		)
	)
	(
			"X_K loses a dog of X_K."
			"X_K loses a dog of X_K."
			"X_K is in."
			"X_K feels a hole in a heart of X_K."
			"X_K goes to a pet store."
			"A great is dog."
		adding constraint (I$0$408.SK AGENT.N)
		adding constraint (SHE$8$409.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-133.PR (K COFFEE.N) ?X_F ?X_A)) ** ?E)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_F SHARP.A))
			(!R3 (?X_F TURN.N))
			(!R4 (?X_J NICE.A))
			(!R5 (?X_J AGENT.N))
			(!R6 (?X_I (PERTAIN-TO ?X_J)))
		)
		(:STEPS
			(?X_D (?X_J (HOLD.V (K COFFEE.N))))
			(?X_H (?X_E (TAKE.V ?X_F)))
			(?X_B (?X_J (ABOUT.P ?X_A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_H)))
			(!W2 (?X_D (BEFORE ?X_B)))
			(!W3 (?X_H (BEFORE ?X_B)))
		)
	)
	(
			"A nice agent holds coffee."
			"A agent takes a sharp turn."
			"A nice agent is about."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.14.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A BOY.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_B STORY.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.14.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-134.PR (KA (AGAIN.ADV HEAR.V) ?X_M)
	               (KA (((ADV-A (BY.P ?X_L)) READ.V) ?X_M)) ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K MAN.N))
			(!R2 (?X_M OBJECT.N))
			(!R3 (?X_M STORY.N))
			(!R4 (?X_L BOY.N))
			(!R5 (NOT (?X_M ACTION.N)))
			(!R6 (NOT (?X_M AGENT.N)))
		)
		(:STEPS
			(?X_J (?X_K (TELL.V ?X_M)))
			(?X_F (?X_L (ASK.V (KA (AGAIN.ADV HEAR.V) ?X_M))))
			(?X_D (?X_K REFUSE.V))
			(?X_B (?X_L (TRY.V (KA (((ADV-A (BY.P ?X_L)) READ.V) ?X_M)))))
			(?X_H (?X_L LIKE.14.V ?X_M))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_F)))
			(!W2 (?X_J (BEFORE ?X_D)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man tells a object story."
			"A boy asks again hear a object story."
			"A man refuses."
			"A boy tries by a boy reading a object story."
			"A boy like.372s a object story."
	)
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-135.PR (K (L X (AND (X GOOD.A) (X (TO.P ?X_N)))))
	               ?X_K ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_N WOMAN.N))
			(!R2 (?X_K MAN.N))
			(!R3 (?X_L WAY.N))
			(!R4 (?X_L HOME.N))
			(!R5 (?X_M NUMBER.N))
			(!R6 (?X_M (PERTAIN-TO ?X_N)))
		)
		(:STEPS
			(?X_F (?X_N (KISS.V ?X_K)))
			(?X_H (?X_A (FEEL.V (K (L X (AND (X GOOD.A) (X (TO.P ?X_N))))))))
			(?X_D (?X_N (GIVE.V ?X_K ?X_M)))
			(?X_J (?X_N (GIVE.V ?X_K ?X_M)))
			(?X_P (?X_K (((ADV-A (ON.P ?X_L)) LOSE.V) ?X_M)))
			(?X_R (?X_C (AGAIN.ADV MEET.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_H)))
			(!W2 (?X_F (BEFORE ?X_D)))
			(!W3 (?X_F (BEFORE ?X_J)))
			(!W4 (?X_F (BEFORE ?X_P)))
			(!W5 (?X_F (BEFORE ?X_R)))
			(!W6 (?X_H (BEFORE ?X_D)))
			(!W7 (?X_H (BEFORE ?X_J)))
			(!W8 (?X_H (BEFORE ?X_P)))
			(!W9 (?X_H (BEFORE ?X_R)))
			(!W10 (?X_D (BEFORE ?X_J)))
			(!W11 (?X_D (BEFORE ?X_P)))
			(!W12 (?X_D (BEFORE ?X_R)))
			(!W13 (?X_J (BEFORE ?X_P)))
			(!W14 (?X_J (BEFORE ?X_R)))
			(!W15 (?X_P (BEFORE ?X_R)))
		)
	)
	(
			"A woman kisses a man."
			"X_A feels good to."
			"A woman gives a man a number of a woman."
			"A woman gives a man a number of a woman."
			"A man loses a number of a woman on a way home."
	)
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-136.PR ?X_D ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_E AFRAID.A))
			(!R2 (?X_E (OF.P (K (PLUR SPIDER.N)))))
			(!R3 (?X_C (PERTAIN-TO ?X_E)))
			(!R4 (?X_D MOTHER.N))
			(!R5 (?X_D (PERTAIN-TO ?X_E)))
			(!R6 (?X_H AGENT.N))
			(!R7 (?X_I BIG.A))
			(!R8 (?X_I SPIDER.N))
		)
		(:STEPS
			(?X_A (?X_E (CALL.V ?X_D)))
			(?X_G (?X_E (CALL.V ?X_D)))
			(?X_B (?X_H (SEE.V ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_G)))
			(!W2 (?X_A (BEFORE ?X_B)))
			(!W3 (?X_G (BEFORE ?X_B)))
		)
	)
	(
			"A afraid of spiders calls a mother of a afraid of spiders."
			"A afraid of spiders calls a mother of a afraid of spiders."
			"A agent sees a big spider."
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.15.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C CAR.N))
			(!R5 (?X_C NEW.A))
			(!R6 (?X_C COLOR.N))
			(!R7 (?X_A (PLUR FRIEND.N)))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V ?X_C))
			(?X_D (?X_B (WANT.V ?X_C)))
			(?X_D (?X_B (LIKE.15.V ?X_C)))
			(?X_D (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.12.V ?X_C ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?X_C ENTITY.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_D DESTINATION.N))
			(!R6 (?X_D SHOP.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_A (PLUR FRIEND.N)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?X_D)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?X_D)) BE.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B (((ADV-A (TO.P ?X_D)) TAKE.V) ?X_C)))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) CARRY.V) ?X_C))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) BRING.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? TAKE.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? CARRY.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? BRING.V) ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?P1 POSTCOND-OF ?X_E))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (TO.P ?X_A)) TAKE.8.V) ?X_D)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_A SHOP.N))
			(!R7 (?X_B (PLUR FRIEND.N)))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?G2 (?X_C (NEED.V ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_D (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-137.PR (K BLUE.A)
	               (K (L X (AND (X (PASV PAINT.V)) (X BLUE.A)))) ?X_K ?X_L ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J (PLUR FRIEND.N)))
			(!R2 (?X_J (PERTAIN-TO ?X_M)))
			(!R3 (?X_K NEW.A))
			(!R4 (?X_K COLOR.N))
			(!R5 (?X_K CAR.N))
			(!R6 (NOT (?X_K ACTION.N)))
			(!R7 (NOT (?X_K AGENT.N)))
			(!R8 (?X_L DESTINATION.N))
			(!R9 (?X_N SMALLER-THAN.N ?X_M))
			(!R10 (?X_L SHOP.N))
			(!R11 (?X_M MAN.N))
			(!R12 (NOT (?X_N AGENT.N)))
			(!R13 (NOT (?X_N ACTION.N)))
			(!R14 (NOT (?X_M = ?X_N)))
		)
		(:STEPS
			(?X_I (?X_M LIKE.15.V ?X_K))
			(?X_G (?X_J (SAY.V (K BLUE.A))))
			(?X_E (?X_M TRANSPORT_OBJECT.12.V ?X_N ?X_L))
			(?X_E (?X_M (((ADV-A (TO.P ?X_L)) TAKE.8.V) ?X_N)))
			(?X_C (?X_N (GET.V (K (L X (AND (X (PASV PAINT.V)) (X BLUE.A)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man like.31s a new color car."
			"A friends of a man say blue."
			"A man transport object.21s X_N a destination shop."
			"A man take.23s X_N to a destination shop."
			"X_N gets PASV paints blue."
		adding constraint (I$0$43.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.22.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B DOOR.N))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.22.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.22.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.22.V) ?X_B))
			(?X_C (?X_A GO.22.V))
			(?X_C (?X_A GO.22.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.22.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-138.PR ?X_F (KE (?X_A (BE.V ?X_F))) ?X_I)) **
	             ?E)
		(:ROLES
			(!R1 (?X_F NEW.A))
			(!R2 (?X_F BOOK.N))
			(!R3 (?X_J AGENT.N))
			(!R4 (?X_I DESTINATION.N))
			(!R5 (?X_I DOOR.N))
			(!R6 (?X_I (PERTAIN-TO ?X_J)))
		)
		(:STEPS
			(?X_H (?X_J ((ADV-A (FROM.P ?L1)) GO.22.V) ?X_I))
			(?X_E (?X_A (BE.V ?X_F)))
			(?X_C (?X_J (SEE.V (KE (?X_A (BE.V ?X_F))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_E)))
			(!W2 (?X_H (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.39s a destination door of a agent from L1."
			"X_A is a new book."
			"A agent sees X_A is a new book."
	)
)



(
	(EPI-SCHEMA ((?X FEED.5.V ?X_B ?X_A) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_B FOX.N))
			(!R3 (?X_A FOOD.N))
			(!R4 (NOT (?X = ?X_B)))
			(!R5 (NOT (?X_B = ?X_A)))
			(!R6 (NOT (?X = ?X_A)))
			(!R7 (?X_A HEN.N))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_B EAT.V ?X_A)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:STEPS
			(?X_C (?X_B EAT.V ?X_A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C AFTER ?E))
			(!W2 (?X_C (AFTER ?X_D)))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B EAT.5.V ?X_A) ** ?X_C)
		(:ROLES
			(!R1 (?X_B FOX.N))
			(!R2 (?X_A FOOD.N))
			(!R3 (?X_A HEN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_C))
			(!W2 (?I1 BEFORE ?X_C))
			(!W3 (?X_C CAUSE-OF ?P1))
			(!W4 (?X_C (AFTER ?X_D)))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X (COMPOSITE-SCHEMA-139.PR ?X_D ?X_E)) ** ?E)
		(:ROLES
			(!R1 (NOT (?X = ?X_D)))
			(!R2 (NOT (?X_D = ?X_E)))
			(!R3 (NOT (?X = ?X_E)))
			(!R4 (?X AGENT.N))
			(!R5 (?X_D FOX.N))
			(!R6 (?X_E FOOD.N))
			(!R7 (?X_E HEN.N))
		)
		(:STEPS
			(?E_1 (?X FEED.5.V ?X_D ?X_E))
			(?X_A (?X_D EAT.5.V ?X_E))
		)
		(:EPISODE-RELATIONS
			(!W1 (?E_1 (BEFORE ?X_A)))
		)
	)
	(
			"A agent feed.54s a fox a food hen."
			"A fox eat.52s a food hen."
	)
)



(
	(EPI-SCHEMA ((?X_A WATCH.2.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?X_B WOMAN.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (?I PERTAIN-TO ?X_B))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (KNOW.V ?I))))))
		)
		(:PRECONDS
			(?I1 (?X_A (CAN.MD (SEE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 0.5))
			(!N3 (!G1 NECESSARY-TO-DEGREE 0.5))
			(!N4 (!P1 NECESSARY-TO-DEGREE 0.5))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (INTO.P ?X_A)) FIND.15.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D WOMAN.N))
			(!R4 (?X_A WINDOW.N))
			(!R5 (?X_A (OF.P ?X_B)))
			(!R6 (?X_B HOUSE.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (INTO.P ?X_A)) FIND.22.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D POLICE.N))
			(!R4 (?X_A WINDOW.N))
			(!R5 (?X_A (OF.P ?X_B)))
			(!R6 (?X_B HOUSE.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-140.PR ?X_O ?X_N ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_K HOUSE.N))
			(!R2 (?X_L (OF.P ?X_K)))
			(!R3 (?X_L WINDOW.N))
			(!R4 (?X_M POLICE.N))
			(!R5 (?X_N WOMAN.N))
			(!R6 (?X_O MAN.N))
		)
		(:STEPS
			(?X_J (?X_O (((ADV-A (INTO.P ?X_L)) FIND.15.V) ?X_N)))
			(?X_J (?X_O (((ADV-A (INTO.P ?X_L)) FIND.22.V) ?X_M)))
			(?X_H (?X_O ((INSIDE.ADV SEE.V) ?X_N)))
			(?X_F (?X_O WATCH.2.V ?X_N))
			(?X_D (?X_N (((ADV-A (FOR.P (KA WATCH.V))) NOTICE.V) ?X_O)))
			(?X_B (?X_N (CALL.V ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man find.70s a woman into a window of a house."
			"A man find.71s a police into a window of a house."
			"A man sees a woman inside."
			"A man watch.62s a woman."
			"A woman notices a man for watching."
			"A woman calls a police."
	)
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-141.PR ?X_D ?X_H ?X_K ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_D (K NICE.A) PLANT.N))
			(!R2 (?X_D (IN.P ?X_E)))
			(!R3 (?X_H WINDOW.N))
			(!R4 (?X_K FLOOR.N))
			(!R5 (?X_L CAT.N))
			(!R6 (?X_L (PERTAIN-TO ?X_M)))
		)
		(:STEPS
			(?X_G (?X_M (BUY.V ?X_D)))
			(?X_J (?X_M (KA PUT.V) (K NICE.A) (((ADV-A (AT.P (K HOME.N))) INTO.P) ?X_H)))
			(?X_B (?X_M (ON.P ?X_K)))
			(?X_C (?X_A (BE.V ?X_L)))
			(?X_O (?X_A (BE.V ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_J)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_G (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_O)))
			(!W5 (?X_J (BEFORE ?X_B)))
			(!W6 (?X_J (BEFORE ?X_C)))
			(!W7 (?X_J (BEFORE ?X_O)))
			(!W8 (?X_B (BEFORE ?X_C)))
			(!W9 (?X_B (BEFORE ?X_O)))
			(!W10 (?X_C (BEFORE ?X_O)))
		)
	)
	(
			"X_M buys a in X_E."
			"X_M is at home into."
			"X_M is on."
			"X_A is a cat of X_M."
			"X_A is a cat of X_M."
	)
)



(
	(EPI-SCHEMA ((?X_A FIND.23.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B LETTER.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-142.PR ?X_E ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_E SMALL.A))
			(!R2 (?X_E NOTE.N))
			(!R3 (?X_J AGENT.N))
			(!R4 (?X_K LETTER.N))
		)
		(:STEPS
			(?X_G (?X_J ((UP.PRT OPEN.V) ?X_K)))
			(?X_D ((K INSIDE.N) (BE.V ?X_E)))
			(?X_B (?X_J ((AWAY.ADV THROW.V) ?X_E)))
			(?X_I (?X_J FIND.23.V ?X_K))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent opens a letter up."
			"Inside is a small note."
			"A agent throws a small note away."
			"A agent find.119s a letter."
	)
)



(
	(EPI-SCHEMA ((?X_C (GIVE.6.V ?X_D ?X_E)) ** ?X_H)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (?X_D AGENT.N))
			(!R4 (?X_E RIDE.N))
			(!R5 (?X_C (IS.V (KE ((K KIND.N) (TO.P ?X_D))))))
			(!R6 (?X_A NICE.A))
			(!R7 (?X_A WAGON.N))
			(!R8 (?X_C (HAS.V ?X_A)))
			(!R9 (?X_B (PERTAIN-TO ?X_C)))
			(!R10 (?X_B (K LITTLE.A) SISTER.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_E))
			(?I2 (NOT (?X_D HAVE.V ?X_E)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?X_E)))
			(?P2 (?X_D HAVE.V ?X_E))
		)
		(:PARAPHRASES
			(?X_H (?X_C ((ADV-A (TO.P ?X_D)) (GIVE.6.V ?X_E))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (AT-ABOUT ?X_F)))
			(!W2 (?X_G (AT-ABOUT ?X_F)))
			(!W3 (?X_G (CONSEC ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (GIVE.7.V ?X_D ?X_E)) ** ?X_G)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (?X_D AGENT.N))
			(!R4 (?X_C (IS.V (KE ((K KIND.N) (TO.P ?X_D))))))
			(!R5 (?X_E RIDE.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (K LITTLE.A) SISTER.N))
			(!R8 (?X_C (HAS.V ?X_B)))
			(!R9 (?X_B WAGON.N))
			(!R10 (?X_B NICE.A))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_E))
			(?I2 (NOT (?X_D HAVE.V ?X_E)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?X_E)))
			(?P2 (?X_D HAVE.V ?X_E))
		)
		(:PARAPHRASES
			(?X_G (?X_C ((ADV-A (TO.P ?X_D)) (GIVE.7.V ?X_E))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (CONSEC ?X_G)))
			(!W2 (?X_F (AT-ABOUT ?X_H)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E PLAY.7.V) ** ?X_G)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?X_D GAME.N))
			(!R5 (NOT (?X_D AGENT.N)))
			(!R6 (?X_E (IS.V (KE ((K KIND.N) (TO.P ?X_A))))))
			(!R7 (?X_B NICE.A))
			(!R8 (?X_B WAGON.N))
			(!R9 (?X_E (HAS.V ?X_B)))
			(!R10 (?X_C (K LITTLE.A) SISTER.N))
			(!R11 (?X_C (PERTAIN-TO ?X_E)))
			(!R12 (?X_D RIDE.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_E HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_E EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_G (?X_E ((ADV-A (WITH.P ?T)) PLAY.7.V)))
			(?X_G (?X_E PLAY.7.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (CONSEC ?X_F)))
			(!W2 (?X_F (AT-ABOUT ?X_H)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E PLAY.8.V) ** ?X_G)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?X_D GAME.N))
			(!R5 (NOT (?X_D AGENT.N)))
			(!R6 (?X_E (IS.V (KE ((K KIND.N) (TO.P ?X_A))))))
			(!R7 (?X_B (K LITTLE.A) SISTER.N))
			(!R8 (?X_B (PERTAIN-TO ?X_E)))
			(!R9 (?X_C WAGON.N))
			(!R10 (?X_C NICE.A))
			(!R11 (?X_E (HAS.V ?X_C)))
			(!R12 (?X_D RIDE.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_E HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_E EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_G (?X_E ((ADV-A (WITH.P ?T)) PLAY.8.V)))
			(?X_G (?X_E PLAY.8.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (CONSEC ?X_F)))
			(!W2 (?X_F (AT-ABOUT ?X_H)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-143.PR ?X_E ?X_H ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_E (K LITTLE.A) SISTER.N))
			(!R2 (?X_E (PERTAIN-TO ?X_G)))
			(!R3 (?X_F NICE.A))
			(!R4 (?X_F WAGON.N))
			(!R5 (?X_G (HAS.V ?X_F)))
			(!R6 (?X_G AGENT.N))
			(!R7 (?X_G (IS.V (KE ((K KIND.N) (TO.P ?X_H))))))
			(!R8 (?X_I RIDE.N))
			(!R9 (?X_H AGENT.N))
			(!R10 (NOT (?X_I AGENT.N)))
		)
		(:STEPS
			(E112.SK (?X_H (IS.V ?X_E)))
			(?X_B (?X_G PLAY.7.V))
			(?X_B (?X_G PLAY.8.V))
			(?X_D (?X_G (GIVE.6.V ?X_H ?X_I)))
			(?X_D (?X_G (GIVE.7.V ?X_H ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"A agent is a of a agent is kind to a agent has a nice wagon."
			"A agent is kind to a agent has a nice wagon play.127s."
			"A agent is kind to a agent has a nice wagon play.128s."
			"A agent is kind to a agent has a nice wagon give.123s a agent a ride."
			"A agent is kind to a agent has a nice wagon give.124s a agent a ride."
	)
)



(
	(EPI-SCHEMA ((?X_B FIND.24.V (K GLUE.N)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K GLUE.N) ENTITY.N))
			(!R4 (?X_A (VERY.ADV UPSET.A)))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A MOM.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 ((K GLUE.N) (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P (K GLUE.N))) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT ((K GLUE.N) (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V (K GLUE.N)))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT ((K GLUE.N) (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V (K GLUE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-144.PR ?X_F ?X_C (K GLUE.N))) ** ?E)
		(:ROLES
			(!R1 (?X_C HOUR.N))
			(!R2 (?X_F CARPET.N))
			(!R3 (?X_K MOM.N))
			(!R4 (?X_K (VERY.ADV UPSET.A)))
			(!R5 (?X_K (PERTAIN-TO ?X_L)))
			(!R6 ((K GLUE.N) ENTITY.N))
			(!R7 (?X_L BOY.N))
		)
		(:STEPS
			(?X_H (?X_L ((OUT.PRT POUR.V) (K GLUE.N))))
			(?X_E ((K GLUE.N) (COVER.V ?X_F)))
			(?X_B ((K GLUE.N) ((IN.PRT DRY.V) ?X_C)))
			(?X_J (?X_L FIND.24.V (K GLUE.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_E)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A boy pours glue out."
			"Glue covers a carpet."
			"Glue dries a hour in."
			"A boy find.141s glue."
	)
)



(
	(EPI-SCHEMA ((?X_C LIKE.16.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C MONKEY.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_C BROWN.A))
			(!R6 (?X_D COCOANUT.N))
			(!R7 (?X_C (HAS.V ?X_A)))
			(!R8 (?X_A LARGE.A))
			(!R9 (?X_A TAIL.N))
			(!R10 (?X_B (HAS.V ?X_D)))
			(!R11 (?X_B MONKEY.N))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.16.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C LIKE.17.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C MONKEY.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_D COCOANUT.N))
			(!R6 (?X_C BROWN.A))
			(!R7 (?X_A (HAS.V ?X_D)))
			(!R8 (?X_A MONKEY.N))
			(!R9 (?X_C (HAS.V ?X_B)))
			(!R10 (?X_B LARGE.A))
			(!R11 (?X_B TAIL.N))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.17.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X FEED.6.V ?X_D ?X_C) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_D MONKEY.N))
			(!R3 (?X_C FOOD.N))
			(!R4 (NOT (?X = ?X_D)))
			(!R5 (NOT (?X_D = ?X_C)))
			(!R6 (NOT (?X = ?X_C)))
			(!R7 (?X_D BROWN.A))
			(!R8 (?X_C COCOANUT.N))
			(!R9 (?X_A (HAS.V ?X_C)))
			(!R10 (?X_A MONKEY.N))
			(!R11 (?X_D (HAS.V ?X_B)))
			(!R12 (?X_B TAIL.N))
			(!R13 (?X_B LARGE.A))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_D HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_D EAT.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_C))
			(?I2 (?X_D HUNGRY.A))
		)
		(:STEPS
			(?X_E (?X_D EAT.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_C))))
			(?P2 (NOT (?X_D HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E AFTER ?E))
			(!W2 (?X_E (AFTER ?X_F)))
			(!W3 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D EAT.6.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_D MONKEY.N))
			(!R2 (?X_C FOOD.N))
			(!R3 (?X_D BROWN.A))
			(!R4 (?X_C COCOANUT.N))
			(!R5 (?X_A TAIL.N))
			(!R6 (?X_A LARGE.A))
			(!R7 (?X_D (HAS.V ?X_A)))
			(!R8 (?X_B MONKEY.N))
			(!R9 (?X_B (HAS.V ?X_C)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (NOT (?X_D HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?X_C))
			(?I2 (?X_D HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (HAVE.V ?X_C))))
			(?P2 (NOT (?X_D HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_E))
			(!W2 (?I1 BEFORE ?X_E))
			(!W3 (?X_E CAUSE-OF ?P1))
			(!W4 (?X_E (AFTER ?X_F)))
			(!W5 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-145.PR ?X_H ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_D LARGE.A))
			(!R2 (?X_D TAIL.N))
			(!R3 (?X_H (HAS.V ?X_D)))
			(!R4 (?X_E MONKEY.N))
			(!R5 (?X_E (HAS.V ?X_I)))
			(!R6 (?X_I OBJECT.N))
			(!R7 (NOT (?X_I ACTION.N)))
			(!R8 (NOT (?X_I AGENT.N)))
			(!R9 (NOT (?X = ?X_H)))
			(!R10 (NOT (?X_H = ?X_I)))
			(!R11 (NOT (?X = ?X_I)))
			(!R12 (?X AGENT.N))
			(!R13 (?X_H MONKEY.N))
			(!R14 (?X_H BROWN.A))
			(!R15 (?X_I FOOD.N))
			(!R16 (?X_I COCOANUT.N))
		)
		(:STEPS
			(?X_C (?X_H LIKE.16.V ?X_I))
			(?X_C (?X_H LIKE.17.V ?X_I))
			(?E_1 (?X FEED.6.V ?X_H ?X_I))
			(?X_A (?X_H EAT.6.V ?X_I))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
			(!W2 (?E_1 (BEFORE ?X_A)))
		)
	)
	(
			"A monkey brown has a large tail like.157s a object food cocoanut."
			"A monkey brown has a large tail like.158s a object food cocoanut."
			"A agent feed.170s a monkey brown has a large tail a object food cocoanut."
			"A monkey brown has a large tail eat.163s a object food cocoanut."
	)
)



(
	(EPI-SCHEMA (((K YESTERDAY.N) (COMPOSITE-SCHEMA-146.PR ?X_B ?X_J ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_B NEST.N))
			(!R2 (?X_B (HAS.V (FIVE.D (L X (AND (X BLUE.A) (X (PLUR EGG.N))))))))
			(!R3 (?X_F MOTHER.N))
			(!R4 (?X_F BIRD.N))
			(!R5 (?X_G NEST.N))
			(!R6 (?X_J (PLUR EGG.N)))
			(!R7 (?X_M (PLUR BIRD.N)))
			(!R8 (?X_M FATHER.N))
			(!R9 (?X_M NEST.N))
			(!R10 (?X_M MOTHER.N))
		)
		(:STEPS
			(?X_E ((K YESTERDAY.N) ((RAMON.ADV FIND.V) ?X_B)))
			(?X_I (?X_F ((ADV-A (ON.P ?X_G)) SIT.V)))
			(?X_L (?X_A ((CANNOT.ADV SEE.V) ?X_J)))
			(?X_O (?X_M (MAKE.V ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_I)))
			(!W2 (?X_E (BEFORE ?X_L)))
			(!W3 (?X_E (BEFORE ?X_O)))
			(!W4 (?X_I (BEFORE ?X_L)))
			(!W5 (?X_I (BEFORE ?X_O)))
			(!W6 (?X_L (BEFORE ?X_O)))
		)
	)
	(
			"Yesterday finds a nest has five blue egg ramon."
			"A mother bird sits on a nest."
			"X_A sees a eggs cannot."
			"A birds father nest mother make a birds father nest mother."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) WALK.6.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.6.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.6.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.6.V) ?L2))
			(?X_B (?X_A WALK.6.V))
			(?X_B (?X_A WALK.6.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? WALK.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-147.PR (KA (FIND.V ?X_E)) ?X_J ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_E OWNER.N))
			(!R2 (?X_J WALLET.N))
			(!R3 (?X_M AGENT.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_L (?X_M ((ADV-A (FROM.P ?L1)) WALK.6.V) ?L2))
			(?X_I (?X_M ((SUDDENLY.ADV SEE.V) ?X_J)))
			(?X_G (?X_M ((UP.PRT PICK.V) ?X_J)))
			(?X_D (?X_M (TRY.V (KA (FIND.V ?X_E)))))
			(?X_B (?X_M (KEEP.V ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_I)))
			(!W2 (?X_L (BEFORE ?X_G)))
			(!W3 (?X_L (BEFORE ?X_D)))
			(!W4 (?X_L (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_D)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_G (BEFORE ?X_D)))
			(!W9 (?X_G (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent walk.202s a destination from L1."
			"A agent sees a wallet suddenly."
			"A agent picks a wallet up."
			"A agent tries finding a owner."
			"A agent keeps a wallet."
		adding constraint (THEY$34$218.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.24.V)
	              (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C)))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C)))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C)))))))
			(!R5 (?X_B HAMMER.V))
			(!R6 (?X_C CRATE.N))
			(!R7 (?X_C GONE.A))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (KA
	      ((ADV-A (AT.P (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))
	       BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C)))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_A
	    ((ADV-A
	      (DESTINATION_PREP.? (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))
	     GO.24.V)))
			(?X_D
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.? (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))
	      GO.24.V))))
			(?X_D
	   (?X_A
	    ((ADV-A
	      (DESTINATION_PREP.? (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))
	     GO.24.V)
	    (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))
			(?X_D (?X_A GO.24.V))
			(?X_D (?X_A GO.24.V (K ((ADV-A (WITH.P ?X_B)) (BACK.ADV (TO.P ?X_C))))))
			(?X_D (?X_A (LOCATION_ADV.? GO.24.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.25.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B CRATE.N))
			(!R4 (?X_B GONE.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-148.PR (K ((ADV-A (AT.P (K HOME.N))) (FOR.P ?X_H)))
	               (K ((ADV-A (WITH.P ?X_H)) (BACK.ADV (TO.P ?X_I)))) ?X_I))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H HAMMER.V))
			(!R2 (?X_G MAN.N))
			(!R3 ((K ((ADV-A (WITH.P ?X_H)) (BACK.ADV (TO.P ?X_I)))) DESTINATION.N))
			(!R4 (?X_I CRATE.N))
			(!R5 (?X_I GONE.A))
		)
		(:STEPS
			(?X_F (?X_G FIND.25.V ?X_I))
			(?X_D (?X_G (LOOK.V (K ((ADV-A (AT.P (K HOME.N))) (FOR.P ?X_H))))))
			(?X_B
	   (?X_G ((ADV-A (FROM.P ?L1)) GO.24.V)
	    (K ((ADV-A (WITH.P ?X_H)) (BACK.ADV (TO.P ?X_I))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man find.219s a crate gone."
			"A man looks at home for a hammer."
			"A man go.214s with a hammer back to a crate gone from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.2.V)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 (?X_C BLANKET.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (FIND.V ?X_C)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?LX)))
			(?I2 (?X_C (AT.P ?LO)))
			(?I3 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (FIND.V ?X_C)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (FOR.P ?X_C)) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (FOR.P ?X_C)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (FOR.P ?X_A)) FIND.26.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D BLANKET.N))
			(!R4 (?X_A BLANKET.N))
			(!R5 (?X_B HOUSE.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_D BIGGER.A))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FIND.27.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C BLANKET.N))
			(!R4 (?X_C BIGGER.A))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A HOUSE.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-149.PR ?X_J ?X_N ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_G (TOO.ADV SMALL.A)))
			(!R2 (?X_J HOUSE.N))
			(!R3 (?X_J (PERTAIN-TO ?X_N)))
			(!R4 (?X_K COLD.A))
			(!R5 (?X_L BLANKET.N))
			(!R6 (?X_M BIGGER.A))
			(!R7 (?X_M BLANKET.N))
			(!R8 (?X_N AGENT.N))
		)
		(:STEPS
			(?X_A (?X_K (IN.P ?X_J)))
			(?X_I (?X_N ((ADV-A (FOR.P ?X_L)) SEARCH.2.V)))
			(?X_I (?X_N (((ADV-A (FOR.P ?X_L)) FIND.26.V) ?X_M)))
			(?X_B (?X_G ONE.N))
			(?X_F (?X_N FIND.27.V ?X_M))
			(?X_D (?X_N (((ADV-A (WITH.P ?X_M)) COVER.V) ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_B)))
			(!W2 (?X_A (BEFORE ?X_D)))
			(!W3 (?X_I (BEFORE ?X_F)))
			(!W4 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"A cold is in."
			"A agent search.232s for a blanket."
			"A agent find.235s a bigger blanket for a blanket."
			"A too small is one."
			"A agent find.237s a bigger blanket."
			"A agent covers a agent with a bigger blanket."
		adding constraint (THEY$12$280.SK AGENT.N)
		adding constraint (SHE$38$281.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-150.PR ?X_D (KA (FAST.ADV (PASV DRIVE.V)))
	               (KE (?X_K ((PASV MAKE.V) (KA (FAST.ADV (PASV DRIVE.V)))))) ?X_K
	               ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D (VERY.ADV FAST.A)))
			(!R2 (?X_D CAR.N))
			(!R3 (?X_K NEW.A))
			(!R4 (?X_K CAR.N))
			(!R5 (?X_N GREAT.A))
			(!R6 (?X_N TIME.N))
		)
		(:STEPS
			(?X_C (?X_A (BUY.V ?X_K)))
			(?X_F (?X_K (BE.V ?X_D)))
			(?X_H (?X_K ((PASV MAKE.V) (KA (FAST.ADV (PASV DRIVE.V))))))
			(?X_J
	   (?X_A (THINK.V (KE (?X_K ((PASV MAKE.V) (KA (FAST.ADV (PASV DRIVE.V)))))))))
			(?X_M (?X_A ((FAST.ADV DRIVE.V) ?X_K)))
			(?X_P (?X_A (HAVE.V ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_F)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_J)))
			(!W4 (?X_C (BEFORE ?X_M)))
			(!W5 (?X_C (BEFORE ?X_P)))
			(!W6 (?X_F (BEFORE ?X_H)))
			(!W7 (?X_F (BEFORE ?X_J)))
			(!W8 (?X_F (BEFORE ?X_M)))
			(!W9 (?X_F (BEFORE ?X_P)))
			(!W10 (?X_H (BEFORE ?X_J)))
			(!W11 (?X_H (BEFORE ?X_M)))
			(!W12 (?X_H (BEFORE ?X_P)))
			(!W13 (?X_J (BEFORE ?X_M)))
			(!W14 (?X_J (BEFORE ?X_P)))
			(!W15 (?X_M (BEFORE ?X_P)))
		)
	)
	(
			"X_A buys a new car."
			"A new car is a very fast car."
			"A new car is PASV makes."
			"X_A thinks a new car PASV makes fast PASV drives."
			"X_A drives a new car fast."
			"X_A has a great time."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.6.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PLUR DOG.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.6.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.6.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.6.V) ?L2))
			(?X_B (?X_A RUN.6.V))
			(?X_B (?X_A RUN.6.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? RUN.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.8.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.8.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.8.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.8.V) ?L2))
			(?X_B (?X_A RUN.8.V))
			(?X_B (?X_A RUN.8.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? RUN.8.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-151.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_E DOG.N))
			(!R2 (?X_F (PLUR DOG.N)))
			(!R3 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_D (?X_E ((ADV-A (FROM.P ?L1)) RUN.8.V) ?L2))
			(?X_B (?X_F ((ADV-A (FROM.P ?L1)) RUN.6.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A dog run.265s a destination from L1."
			"A dogs run.264 a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-152.PR ?X_F (KE (?X_P (HEAR.V ?X_F))) ?X_O ?X_P
	               (KA (UP.PRT LOCK.V) ?X_L) (KE (?X_P (MORE.ADV AFRAID.A)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F NOISE.N))
			(!R2 (?X_O MOM.N))
			(!R3 (?X_O (PERTAIN-TO ?X_K)))
			(!R4 (?X_L HOUSE.N))
			(!R5 (?X_P BOY.N))
			(!R6 (?X_O (PERTAIN-TO ?X_P)))
		)
		(:STEPS
			(?X_E (?X_P (HEAR.V ?X_F)))
			(?X_H (?X_P (THINK.V (KE (?X_P (HEAR.V ?X_F))))))
			(?X_B (?X_P (CALL.V ?X_O)))
			(?X_J (?X_P (CALL.V ?X_O)))
			(?X_C (?X_O (TELL.V ?X_P (KA (UP.PRT LOCK.V) ?X_L))))
			(?X_N (?X_O (TELL.V ?X_P (KA (UP.PRT LOCK.V) ?X_L))))
			(?X_R (?X_A (MAKE.V (KE (?X_P (MORE.ADV AFRAID.A))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_H)))
			(!W2 (?X_E (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_J)))
			(!W4 (?X_E (BEFORE ?X_C)))
			(!W5 (?X_E (BEFORE ?X_N)))
			(!W6 (?X_E (BEFORE ?X_R)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_H (BEFORE ?X_J)))
			(!W9 (?X_H (BEFORE ?X_C)))
			(!W10 (?X_H (BEFORE ?X_N)))
			(!W11 (?X_H (BEFORE ?X_R)))
			(!W12 (?X_B (BEFORE ?X_J)))
			(!W13 (?X_B (BEFORE ?X_C)))
			(!W14 (?X_B (BEFORE ?X_N)))
			(!W15 (?X_B (BEFORE ?X_R)))
			(!W16 (?X_J (BEFORE ?X_C)))
			(!W17 (?X_J (BEFORE ?X_N)))
			(!W18 (?X_J (BEFORE ?X_R)))
			(!W19 (?X_C (BEFORE ?X_N)))
			(!W20 (?X_C (BEFORE ?X_R)))
			(!W21 (?X_N (BEFORE ?X_R)))
		)
	)
	(
			"A boy hears a noise."
			"A boy thinks a boy hears a noise."
			"A boy calls a mom of a boy of X_K."
			"A boy calls a mom of a boy of X_K."
			"A mom of a boy of X_K tells a boy up lock a house."
			"A mom of a boy of X_K tells a boy up lock a house."
			"X_A makes a boy more afraid."
		adding constraint (ME$0$386.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (ON.P ?X_A)) FIND.9.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D BARK.N))
			(!R4 (?X_A FLOOR.N))
			(!R5 (?X_B AGENT.N))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-153.PR ?X_L ?X_A ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_D (IMPINGES-ON ?X_B)))
			(!R2 (?X_K AGENT.N))
			(!R3 (?X_L (PERTAIN-TO ?X_K)))
			(!R4 (?X_L DOG.N))
			(!R5 (?X_M BARK.N))
			(!R6 (?X_N FLOOR.N))
		)
		(:STEPS
			(?X_J (?X_L DREAM.V))
			(?X_F (?X_L ((OUT.PRT LET.V) ?X_M)))
			(?X_D (?X_K ((NEVER.ADV HAVE.V) ?X_L ?X_A)))
			(?X_H (?X_L (((ADV-A (ON.P ?X_N)) FIND.9.V) ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_F)))
			(!W2 (?X_J (BEFORE ?X_D)))
			(!W3 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A dog of a agent dreams."
			"A dog of a agent lets a bark out."
			"A agent has a dog of a agent X_A never."
			"A dog of a agent find.297s a bark on a floor."
	)
)



(
	(EPI-SCHEMA (((K SUSIE.N) (COMPOSITE-SCHEMA-154.PR ?X_D ?X_E (KA EAT.V))) ** ?E)
		(:ROLES
			(!R1 (?X_D TOP.N))
			(!R2 (?X_E PLATE.N))
			(!R3 (?X_E (PERTAIN-TO (K SUSIE.N))))
		)
		(:STEPS
			(?X_C ((K SUSIE.N) (FILL.V ?X_E ?X_D)))
			(?X_A ((K SUSIE.N) (((ADV-A (TO.P ?X_D)) FILL.V) ?X_E)))
			(?X_G ((K SUSIE.N) (NEED.V (KA EAT.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
			(!W2 (?X_C (BEFORE ?X_G)))
			(!W3 (?X_A (BEFORE ?X_G)))
		)
	)
	(
			"Susie fills a plate of susie a top."
			"Susie fills a plate of susie to a top."
			"Susie needs eating."
		adding constraint (THEY$12$414.SK AGENT.N)
		adding constraint (SHE$38$415.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.25.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A TIRED.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.25.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.25.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.25.V) ?L2))
			(?X_B (?X_A ((ADV-A (ON.P (K VACATION.N))) GO.25.V)))
			(?X_B (?X_A GO.25.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? GO.25.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-155.PR (K WORK.N) ?X_D ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_D GREAT.A))
			(!R2 (?X_D TIME.N))
			(!R3 (?X_G AGENT.N))
			(!R4 (?X_G TIRED.A))
			(!R5 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_A (?X_G (OF.P (K WORK.N))))
			(?X_F (?X_G ((ADV-A (FROM.P ?L1)) GO.25.V) ?L2))
			(?X_C (?X_G (((ADV-A (BY.P (K (PLUR DAY.N)))) EXTEND.V) ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_F)))
			(!W2 (?X_A (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent tired is of."
			"A agent tired go.309s a destination from L1."
			"A agent tired extends a great time by days."
		adding constraint (I$0$443.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-156.PR ?X_D (KA (HAVE.V ?X_H)))) ** ?E)
		(:ROLES
			(!R1 (?X_A (PLUR ALMOND.N)))
			(!R2 (?X_A (SO.ADV GOOD.A)))
			(!R3 (?X_D LARGE.A))
			(!R4 (?X_D BOX.N))
			(!R5 (?X_G AGENT.N))
			(!R6 (?X_H MORE.A))
		)
		(:STEPS
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_G ((ADV-A (FOR.P (KA (BUY.V ?X_A)))) GO.V))))
			(?X_F (?X_G (BUY.V ?X_D)))
			(?X_J (?X_G (WANT.V (KA (HAVE.V ?X_H)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_F)))
			(!W2 (?X_C (BEFORE ?X_J)))
			(!W3 (?X_F (BEFORE ?X_J)))
		)
	)
	(
			"A agent goes DURING yesterday for buying a almonds so good."
			"A agent buys a large box."
			"A agent wants having a more."
		adding constraint (HE$2$463.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.26.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C ROOM.N))
			(!R6 (?X_C LIVING.N))
			(!R7 (?X_A PAW.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) GO.26.V))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.26.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.26.V) ?X_C))
			(?X_D (?X_B GO.26.V))
			(?X_D (?X_B GO.26.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.26.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.18.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C PILLOW.N))
			(!R5 (?X_C NEW.A))
			(!R6 (?X_A PAW.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V ?X_C))
			(?X_D (?X_B (WANT.V ?X_C)))
			(?X_D (?X_B (LIKE.18.V ?X_C)))
			(?X_D (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-157.PR ?X_L ?X_M ?X_N ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_M PAW.N))
			(!R2 (?X_L THING.N))
			(!R3 (?X_L FUNNY.A))
			(!R4 (?X_M (PERTAIN-TO ?X_O)))
			(!R5 (?X_N DESTINATION.N))
			(!R6 (?X_N ROOM.N))
			(!R7 (?X_N LIVING.N))
			(!R8 (?X_P NEW.A))
			(!R9 (?X_P PILLOW.N))
			(!R10 (?X_O CAT.N))
			(!R11 (NOT (?X_P ACTION.N)))
			(!R12 (NOT (?X_P AGENT.N)))
		)
		(:STEPS
			(?X_G (?X_O ?X_P (WITH.P ?X_M)))
			(?X_B (?X_O ((ADV-A (FROM.P ?L1)) GO.26.V) ?X_N))
			(?X_K (?X_A (BE.V ?X_L)))
			(?X_I (?X_O (HAVE.V ?X_P)))
			(?X_C (?X_O (((ADV-A (WITH.P ?X_M)) POKE.V) ?X_P)))
			(?X_E (?X_O LIKE.18.V ?X_P))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_C)))
			(!W2 (?X_G (BEFORE ?X_E)))
			(!W3 (?X_B (BEFORE ?X_K)))
			(!W4 (?X_B (BEFORE ?X_I)))
			(!W5 (?X_B (BEFORE ?X_C)))
			(!W6 (?X_B (BEFORE ?X_E)))
			(!W7 (?X_K (BEFORE ?X_I)))
			(!W8 (?X_K (BEFORE ?X_C)))
			(!W9 (?X_K (BEFORE ?X_E)))
			(!W10 (?X_I (BEFORE ?X_C)))
			(!W11 (?X_I (BEFORE ?X_E)))
			(!W12 (?X_C (BEFORE ?X_E)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.10.V ?X_B ?A) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_A HAPPY.A))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_B HAPPY.A))
			(!R8 (?X_B (PLUR FRIEND.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?X_C (?X_A (ASK.V ?X_B ?A)))
			(?E2 (?X_B (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_E (?X_A (ASK.V ?X_B ?A)))
			(?X_E (?X_A (TELL.V ?X_B ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?X_C))
			(!W2 (?X_C CAUSE-OF ?E2))
			(!W3 (?X_E (RIGHT-AFTER ?X_F)))
			(!W4 (?X_E (SAME-TIME ?X_D)))
			(!W5 (?X_C (BEFORE ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.11.V ?X_B ?A) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_A HAPPY.A))
			(!R6 (?X_B HAPPY.A))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_B (PLUR FRIEND.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?X_D (?X_A (ASK.V ?X_B ?A)))
			(?E2 (?X_B (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_E (?X_A (ASK.V ?X_B ?A)))
			(?X_E (?X_A (TELL.V ?X_B ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?X_D))
			(!W2 (?X_D CAUSE-OF ?E2))
			(!W3 (?X_E (BEFORE ?X_F)))
			(!W4 (?X_D (SAME-TIME ?X_F)))
			(!W5 (?X_D (RIGHT-AFTER ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TELL.1.V ?X_B ?I) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_A HAPPY.A))
			(!R6 (?X_B (PLUR FRIEND.N)))
			(!R7 (?X_B HAPPY.A))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_C (?X_A TELL.1.V ?X_B ?I))
			(?X_C (?X_A LET.V ?X_B (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_D)))
			(!W2 (?X_E (SAME-TIME ?X_D)))
			(!W3 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TELL.2.V ?X_B ?I) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_A HAPPY.A))
			(!R6 (?X_B HAPPY.A))
			(!R7 (?X_B (PLUR FRIEND.N)))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_D (?X_A TELL.2.V ?X_B ?I))
			(?X_D (?X_A LET.V ?X_B (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (RIGHT-AFTER ?X_C)))
			(!W2 (?X_D (SAME-TIME ?X_F)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B MAKE.7.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_B HAPPY.A))
			(!R4 (?X_A (PLUR FRIEND.N)))
			(!R5 (?X_A HAPPY.A))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C EXIST.V)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_C EXIST.V))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-158.PR ?X_M ?A ?X_L ?I ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_J TEAM.N))
			(!R2 (NOT (?X_K AGENT.N)))
			(!R3 (NOT (?X_M = ?X_L)))
			(!R4 (?A ACTION.N))
			(!R5 (?X_L HAPPY.A))
			(!R6 (?X_L (PLUR FRIEND.N)))
			(!R7 (?X_L (PERTAIN-TO ?X_M)))
			(!R8 (NOT (?I ACTION.N)))
			(!R9 (?X_M AGENT.N))
			(!R10 (?X_M HAPPY.A))
			(!R11 (?I INFORMATION.N))
		)
		(:STEPS
			(?X_I (?X_M (OUT.PRT ((ADV-A (FOR.P ?X_J)) TRY.V))))
			(?X_A (?X_J SWIM.V))
			(?X_E (?X_M REQUEST_ACTION.11.V ?X_L ?A))
			(?X_E (?X_M TELL.1.V ?X_L ?I))
			(?X_G (?X_M MAKE.7.V ?X_K))
			(?X_B (?X_M REQUEST_ACTION.10.V ?X_L ?A))
			(?X_B (?X_M TELL.2.V ?X_L ?I))
			(?X_C (?X_L (FOR.P ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_B)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_A (BEFORE ?X_G)))
			(!W5 (?X_A (BEFORE ?X_B)))
			(!W6 (?X_A (BEFORE ?X_C)))
			(!W7 (?X_E (BEFORE ?X_B)))
			(!W8 (?X_E (BEFORE ?X_C)))
			(!W9 (?X_G (BEFORE ?X_B)))
			(!W10 (?X_G (BEFORE ?X_C)))
			(!W11 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"A cat is with."
			"A cat go.10s a destination room living from L1."
			"X_A is a thing funny."
			"A cat has a new pillow."
			"A cat pokes a new pillow with a paw of a cat."
			"A cat like.1s a new pillow."
	)
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-159.PR ?X_C (KA ((ADV-A (ON.P ?X_D)) CHECK.V))
	               (K HOME.N)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C RABBIT.N))
			(!R2 (?X_D ROAD.N))
			(!R3 (?X_D DEAD.A))
			(!R4 (?X_D RABBIT.N))
			(!R5 (?X_C (ON.P ?X_D)))
			(!R6 (?X_G (HOME.ADV DRIVE.V)))
		)
		(:STEPS
			(?X_B (?X_G (HIT.V ?X_C)))
			(?X_F (?X_G ((OUT.PRT GET.V) (KA ((ADV-A (ON.P ?X_D)) CHECK.V)))))
			(?X_I (?X_G (DRIVE.V (K HOME.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_F)))
			(!W2 (?X_B (BEFORE ?X_I)))
			(!W3 (?X_F (BEFORE ?X_I)))
		)
	)
	(
			"A agent happy tries out for a team."
			"A team swims."
			"A agent happy request action.20s a happy friends of a agent happy a action."
			"A agent happy tell.21s a happy friends of a agent happy a information."
			"A agent happy make.26s X_K."
			"A agent happy request action.16s a happy friends of a agent happy a action."
			"A agent happy tell.22s a happy friends of a agent happy a information."
			"A happy friends of a agent happy is for."
	)
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) ROW.1.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_E (HAS.V (K (BEEN.AUX ((ADV-A (IN.P ?X_B)) (AT.P (K WORK.N))))))))
			(!R6 (?X_D WHILE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_E)))
			(!R8 (?X_A HOME.N))
			(!R9 (?X_B GARDEN.N))
			(!R10 (?X_C BOAT.N))
			(!R11 (?X_C PRETTY.A))
			(!R12 (?X_E (HAS.V ?X_C)))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.1.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.1.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.1.V) ?L2))
			(?X_F ((ADV-E (DURING ?X_D)) (?X_E (NOW.ADV ROW.1.V))))
			(?X_F (?X_E ROW.1.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? ROW.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AFTER ?X_G)))
			(!W7 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) ROW.2.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_E (HAS.V (K (BEEN.AUX ((ADV-A (IN.P ?X_C)) (AT.P (K WORK.N))))))))
			(!R6 (?X_D WHILE.N))
			(!R7 (?X_A HOME.N))
			(!R8 (?X_A (PERTAIN-TO ?X_E)))
			(!R9 (?X_B PRETTY.A))
			(!R10 (?X_E (HAS.V ?X_B)))
			(!R11 (?X_B BOAT.N))
			(!R12 (?X_C GARDEN.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.2.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.2.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.2.V) ?L2))
			(?X_F ((ADV-E (DURING ?X_D)) (?X_E (NOW.ADV ROW.2.V))))
			(?X_F (?X_E ROW.2.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? ROW.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AFTER ?X_G)))
			(!W7 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C
	              ((ALWAYS.ADV TAKE.9.V)
	               (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E)))))
	             ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))) AGENT.N)))
			(!R3
	   (NOT ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))))))
			(!R6 (?X_C (HAS.V (K (BEEN.AUX ((ADV-A (IN.P ?X_A)) (AT.P (K WORK.N))))))))
			(!R7 (?X_E BOAT.N))
			(!R8 (?X_E PRETTY.A))
			(!R9 (?X_C (HAS.V ?X_E)))
			(!R10 (?X_A GARDEN.N))
			(!R11 (?X_B HOME.N))
			(!R12 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V
	     (THAT
	      (?X_C
	       (HAVE.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E)))))))))
			(?G2 (?X_C (NEED.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))))))
			(?G3 (?X_C (WANT.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))))))
		)
		(:PRECONDS
			(?I1
	   (NOT (?X_C HAVE.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))))))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_E)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?I2 PRECOND-OF ?X_F))
			(!W3 (?I3 PRECOND-OF ?X_F))
			(!W4 (?P1 POSTCOND-OF ?X_F))
			(!W5 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-160.PR ?L2
	               (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_J)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_B WHILE.N))
			(!R2 (?X_K (HAS.V (K (BEEN.AUX ((ADV-A (IN.P ?X_G)) (AT.P (K WORK.N))))))))
			(!R3 (?X_G GARDEN.N))
			(!R4 (?X_H HOME.N))
			(!R5 (?X_H (PERTAIN-TO ?X_K)))
			(!R6 (?X_J BOAT.N))
			(!R7 (?X_J PRETTY.A))
			(!R8 (?X_K (HAS.V ?X_J)))
			(!R9 (NOT ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_J))) AGENT.N)))
			(!R10
	   (NOT ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_J))) ACTION.N)))
			(!R11 (NOT (?X_K = (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_J))))))
			(!R12 (?X_K AGENT.N))
			(!R13 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_D
	   (?X_K
	    ((ALWAYS.ADV TAKE.9.V)
	     (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P ?X_J))))))
			(?X_A (?X_K ((ADV-A (FROM.P ?L1)) ROW.1.V) ?L2))
			(?X_A (?X_K ((ADV-A (FROM.P ?L1)) ROW.2.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_A)))
		)
	)
	(
			"A home drive hits a rabbit on a road dead rabbit."
			"A home drive gets on a road dead rabbit checking out."
			"A home drive drives home."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.9.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A CAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A HEN.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.9.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.9.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.9.V) ?L2))
			(?X_B (?X_A ((ADV-A (AT.P ?X_A)) RUN.9.V)))
			(?X_B (?X_A RUN.9.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? RUN.9.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AFTER ?X_C)))
			(!W7 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-161.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C HEN.N))
			(!R2 (?X_C CAT.N))
			(!R3 (?L2 DESTINATION.N))
		)
		(:STEPS
			(E88.SK (?X_C ((ADV-A (FROM.P ?L1)) RUN.9.V) ?L2))
		)
	)
	(
			"A has was in a garden at work agent has a boat pretty take.75s good care of a boat pretty always."
			"A has was in a garden at work agent has a boat pretty row.67s a destination from L1."
			"A has was in a garden at work agent has a boat pretty row.68s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B PLAY.9.V) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?X_A TOY.N))
			(!R3 (NOT (?X_A AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A FLUSH.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?X_E (?X_B HAVE.V ?X_A))
		)
		(:POSTCONDS
			(?P1 (?X_B EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (WITH.P ?X_A)) PLAY.9.V)))
			(?X_C (?X_B PLAY.9.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B PLAY.10.V) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?X_A TOY.N))
			(!R3 (NOT (?X_A AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A FLUSH.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?X_C (?X_B HAVE.V ?X_A))
		)
		(:POSTCONDS
			(?P1 (?X_B EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (WITH.P ?X_A)) PLAY.10.V)))
			(?X_E (?X_B PLAY.10.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.14.V
	              (K
	               (L X
	                (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N))))))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2
	   (NOT
	    ((K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))
	     AGENT.N)))
			(!R3
	   (NOT
	    ((K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))
	     ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5
	   (NOT
	    (?X_A =
	     (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N))))))))))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT
	      (?X_A
	       (HAVE.V
	        (K
	         (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))))))))
			(?G2
	   (?X_A
	    (NEED.V
	     (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N))))))))))
			(?G3
	   (?X_A
	    (WANT.V
	     (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N))))))))))
		)
		(:PRECONDS
			(?I1
	   (NOT
	    (?X_A HAVE.V
	     (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N))))))))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3
	   ((K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))
	    (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1
	   (?X_A HAVE.V
	    (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-162.PR ?X_J (ALL.D IN.P) ?X_C
	               (K
	                (L X
	                 (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C HAND.N))
			(!R2 (?X_J FLUSH.A))
			(!R3 (?X_M MAN.N))
			(!R4
	   (NOT
	    ((K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))
	     AGENT.N)))
			(!R5
	   (NOT
	    ((K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))
	     ACTION.N)))
			(!R6
	   (NOT
	    (?X_M =
	     (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N))))))))))
		)
		(:STEPS
			(?X_L (?X_M PLAY.9.V))
			(?X_L (?X_M PLAY.10.V))
			(?X_I (?X_M (HAVE.V ?X_J)))
			(?X_G (?X_M (GO.V (ALL.D IN.P))))
			(?X_E
	   (?X_M GET.14.V
	    (K (L X (AND (X (PASV CALL.V)) (X (WITH.P (TWO.D (PLUR PAIR.N)))))))))
			(?X_B (?X_M (WIN.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_I)))
			(!W2 (?X_L (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_E)))
			(!W4 (?X_G (BEFORE ?X_B)))
		)
	)
	(
			"A hen cat run.86s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-163.PR ?X_M ?X_O ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_L FAN.N))
			(!R2 (?X_M HAND.N))
			(!R3 (?X_I AGENT.N))
			(!R4 (?X_H (PERTAIN-TO ?X_I)))
			(!R5 (?X_O GIRL.N))
			(!R6 (?X_O (HAS.V ?X_L)))
			(!R7 (?X_M (PERTAIN-TO ?X_O)))
			(!R8 (?X_N CAT.N))
			(!R9 (?X_O (HAS.V ?X_N)))
			(!R10 (?X_N (PERTAIN-TO ?X_O)))
		)
		(:STEPS
			(?X_A (?X_L (IN.P ?X_M)))
			(?X_E (?X_O ((CAN.AUX FAN.N) ?X_N)))
			(?X_G (?X_I (SEE.V ?X_O)))
			(?X_B (?X_L (IN.P ?X_M)))
			(?X_K (?X_I ((CAN.AUX FAN.N) ?X_O)))
			(?X_C (?X_O ((CAN.AUX FAN.N) ?X_N)))
			(?X_Q (?X_O ((CAN.AUX FAN.N) ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_E)))
			(!W2 (?X_A (BEFORE ?X_G)))
			(!W3 (?X_A (BEFORE ?X_B)))
			(!W4 (?X_A (BEFORE ?X_K)))
			(!W5 (?X_A (BEFORE ?X_C)))
			(!W6 (?X_A (BEFORE ?X_Q)))
			(!W7 (?X_E (BEFORE ?X_G)))
			(!W8 (?X_E (BEFORE ?X_B)))
			(!W9 (?X_E (BEFORE ?X_K)))
			(!W10 (?X_E (BEFORE ?X_C)))
			(!W11 (?X_E (BEFORE ?X_Q)))
			(!W12 (?X_G (BEFORE ?X_B)))
			(!W13 (?X_G (BEFORE ?X_K)))
			(!W14 (?X_G (BEFORE ?X_C)))
			(!W15 (?X_G (BEFORE ?X_Q)))
			(!W16 (?X_B (BEFORE ?X_K)))
			(!W17 (?X_B (BEFORE ?X_C)))
			(!W18 (?X_B (BEFORE ?X_Q)))
			(!W19 (?X_K (BEFORE ?X_C)))
			(!W20 (?X_K (BEFORE ?X_Q)))
			(!W21 (?X_C (BEFORE ?X_Q)))
		)
	)
	(
			"A man play.95s."
			"A man play.96s."
			"A man has a flush."
			"A man goes all in."
			"A man get.98s PASV calls with."
			"A man wins a hand."
		adding constraint (I$19$142.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (TO.P ?X_A)) INVITE.1.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_C (OF.P (K (PLUR PERSON.N)))))
			(!R4 (?X_C BUNCH.N))
			(!R5 (?X_A LAKE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C EXIST.V)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_C EXIST.V))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-164.PR ?X_I (K FUN.N) ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_K (OF.P (K (PLUR PERSON.N)))))
			(!R2 (?X_K BUNCH.N))
			(!R3 (?X_I AGENT.N))
			(!R4 (?X_J LAKE.N))
			(!R5 (NOT (?X_K AGENT.N)))
		)
		(:STEPS
			(?X_F ((EVERY.D PERSON.N) ((DOWN.PRT TURN.V) ?X_I)))
			(?X_D (?X_I ((ADV-A (BY.P ?X_I)) GO.V)))
			(?X_B (?X_I (HAVE.V (K FUN.N))))
			(?X_H (?X_I (((ADV-A (TO.P ?X_J)) INVITE.1.V) ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A fan is in."
			"A girl has a fan has a cat of a girl has X_L has a cat of X_O is can fan."
			"A agent sees a girl has a fan has a cat of a girl has X_L has a cat of X_O."
			"A fan is in."
			"A agent is can fan."
			"A girl has a fan has a cat of a girl has X_L has a cat of X_O is can fan."
			"A girl has a fan has a cat of a girl has X_L has a cat of X_O is can fan."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RUN.10.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D RAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_D BLACK.A))
			(!R6 (?X_A (HAS.V ?X_D)))
			(!R7 (?X_A CAT.N))
			(!R8 (?X_C AGENT.N))
			(!R9 (?X_A (PERTAIN-TO ?X_C)))
			(!R10 (?X_B ?X_A CAT.N))
			(!R11 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.10.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.10.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.10.V) ?L2))
			(?X_E (?X_D RUN.10.V))
			(?X_E (?X_D RUN.10.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RUN.10.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RUN.11.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D RAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_D BLACK.A))
			(!R6 (?X_C CAT.N))
			(!R7 (?X_C (HAS.V ?X_D)))
			(!R8 (?X_C (PERTAIN-TO ?X_A)))
			(!R9 (?X_A AGENT.N))
			(!R10 (?X_B (PERTAIN-TO ?X_A)))
			(!R11 (?X_B ?X_C CAT.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.11.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.11.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.11.V) ?L2))
			(?X_E (?X_D RUN.11.V))
			(?X_E (?X_D RUN.11.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RUN.11.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_U (COMPOSITE-SCHEMA-165.PR ?X_S (SET-OF ?X_S ?X_V) ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_S CAT.N))
			(!R2 (?X_S (HAS.V ?X_V)))
			(!R3 (?X_T ?X_S CAT.N))
			(!R4 (?X_U AGENT.N))
			(!R5 (?X_S (PERTAIN-TO ?X_U)))
			(!R6 (?X_T (PERTAIN-TO ?X_U)))
			(!R7 (?X_V BLACK.A))
			(!R8 (?X_V RAT.N))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_R (?X_U (HAVE.V ?X_S)))
			(?X_P (?X_U (CAN.AUX SEE.V)))
			(?X_N (?X_U ((CAN.AUX SEE.V) ?X_S)))
			(?X_L (?X_V (CAN.AUX SEE.V)))
			(?X_J (?X_S (CAN.AUX SEE.V)))
			(?X_H (?X_V ((CAN.AUX SEE.V) ?X_S)))
			(?X_F (?X_V ((ADV-A (FROM.P ?L1)) RUN.10.V) ?L2))
			(?X_F (?X_V ((ADV-A (FROM.P ?L1)) RUN.11.V) ?L2))
			(?X_D (?X_T RUN.V))
			(?X_B (?X_U ((CAN.AUX SEE.V) (SET-OF ?X_S ?X_V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_R (BEFORE ?X_P)))
			(!W2 (?X_R (BEFORE ?X_N)))
			(!W3 (?X_R (BEFORE ?X_L)))
			(!W4 (?X_R (BEFORE ?X_J)))
			(!W5 (?X_R (BEFORE ?X_H)))
			(!W6 (?X_R (BEFORE ?X_F)))
			(!W7 (?X_R (BEFORE ?X_D)))
			(!W8 (?X_R (BEFORE ?X_B)))
			(!W9 (?X_P (BEFORE ?X_N)))
			(!W10 (?X_P (BEFORE ?X_L)))
			(!W11 (?X_P (BEFORE ?X_J)))
			(!W12 (?X_P (BEFORE ?X_H)))
			(!W13 (?X_P (BEFORE ?X_F)))
			(!W14 (?X_P (BEFORE ?X_D)))
			(!W15 (?X_P (BEFORE ?X_B)))
			(!W16 (?X_N (BEFORE ?X_L)))
			(!W17 (?X_N (BEFORE ?X_J)))
			(!W18 (?X_N (BEFORE ?X_H)))
			(!W19 (?X_N (BEFORE ?X_F)))
			(!W20 (?X_N (BEFORE ?X_D)))
			(!W21 (?X_N (BEFORE ?X_B)))
			(!W22 (?X_L (BEFORE ?X_H)))
			(!W23 (?X_L (BEFORE ?X_F)))
			(!W24 (?X_L (BEFORE ?X_D)))
			(!W25 (?X_L (BEFORE ?X_B)))
			(!W26 (?X_J (BEFORE ?X_H)))
			(!W27 (?X_J (BEFORE ?X_F)))
			(!W28 (?X_J (BEFORE ?X_D)))
			(!W29 (?X_J (BEFORE ?X_B)))
			(!W30 (?X_H (BEFORE ?X_F)))
			(!W31 (?X_H (BEFORE ?X_D)))
			(!W32 (?X_H (BEFORE ?X_B)))
			(!W33 (?X_F (BEFORE ?X_D)))
			(!W34 (?X_F (BEFORE ?X_B)))
			(!W35 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"Every person turns a agent down."
			"A agent goes by a agent."
			"A agent has fun."
			"A agent invite.139s a of persons bunch to a lake."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.27.V) (K SWIMMING.N)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K SWIMMING.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K SWIMMING.N))))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A CHATTER.N))
			(!R7 (?X_A (PLUR TOOTH.N)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K SWIMMING.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K SWIMMING.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K SWIMMING.N))))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (K SWIMMING.N))) GO.27.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K SWIMMING.N))) GO.27.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K SWIMMING.N))) GO.27.V) (K SWIMMING.N)))
			(?X_C (?X_B GO.27.V))
			(?X_C ((ADV-E (DURING (K TODAY.N))) (?X_B (GO.27.V (K SWIMMING.N)))))
			(?X_C (?X_B (LOCATION_ADV.? GO.27.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.5.V ?A) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?A ACTION.N))
			(!R3 (?X_A (PERTAIN-TO ?X_B)))
			(!R4 (?X_A (PLUR TOOTH.N)))
			(!R5 (?X_A CHATTER.N))
		)
		(:PRECONDS
			(?I1 (?X_B (THINK.V (THAT (?A FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B (WANT.V ?A)))
			(?X_C (?X_B (LIKE.V ?A)))
			(?X_C (?X_B (((ADV-A (TO.P (KA SWIM.V))) LOVE.V) ?A)))
			(?X_C (?X_B (ENJOY.V ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_E)))
			(!W2 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (TO.P (KA SWIM.V))) LIKE.19.V) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?O ACTION.N)))
			(!R3 (NOT (?O AGENT.N)))
			(!R4 (?O OBJECT.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A (PLUR TOOTH.N)))
			(!R7 (?X_A CHATTER.N))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?O)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B WANT.V ?O))
			(?X_C (?X_B (WANT.V ?O)))
			(?X_C (?X_B (LIKE.19.V ?O)))
			(?X_C (?X_B (LOVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_E)))
			(!W2 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-166.PR (KA SWIM.V) ?X_J (K SWIMMING.N) ?A ?O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J (PLUR TOOTH.N)))
			(!R2 (?X_J CHATTER.N))
			(!R3 (?X_C (VERY.ADV COLD.A)))
			(!R4 (?X_C WATER.N))
			(!R5 (?X_J (PERTAIN-TO ?X_K)))
			(!R6 ((K SWIMMING.N) DESTINATION.N))
			(!R7 (?A ACTION.N))
			(!R8 (?X_K AGENT.N))
			(!R9 (NOT (?O ACTION.N)))
			(!R10 (NOT (?O AGENT.N)))
			(!R11 (?O OBJECT.N))
		)
		(:STEPS
			(?X_I (?X_K ((ADV-A (FROM.P ?L1)) GO.27.V) (K SWIMMING.N)))
			(?X_G (?X_K (TO.P (KA SWIM.V))))
			(?X_E (?X_K ENJOY_ACTION.5.V ?A))
			(?X_E (?X_K (((ADV-A (TO.P (KA SWIM.V))) LIKE.19.V) ?O)))
			(?X_B (?X_C (MAKE.V ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_B)))
			(!W5 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent has a cat of a agent has a black rat."
			"A agent sees can."
			"A agent sees a cat of a agent has a black rat can."
			"A black rat sees can."
			"A cat of a agent has a black rat sees can."
			"A black rat sees a cat of a agent has a black rat can."
			"A black rat run.153s a destination from L1."
			"A black rat run.155s a destination from L1."
			"A of a agent runs."
			"A agent sees a cat of a agent has a black rat and a black rat can."
		adding constraint (I$1$266.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C REQUEST_ACTION.12.V ?X_D (KA (AWAY.ADV STAY.V))) ** ?X_E)
		(:ROLES
			(!R1 (?X_C BROTHER.N))
			(!R2 (?X_D AGENT.N))
			(!R3 ((KA (AWAY.ADV STAY.V)) ACTION.N))
			(!R4 (NOT (?X_C = ?X_D)))
			(!R5 (?X_C (PERTAIN-TO ?X_D)))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_A HOUSE.N))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_B CANDY.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V ?X_D (KA (AWAY.ADV STAY.V)))))
			(?G2 (?X_C (WANT.V (THAT (?X_C (AWAY.ADV STAY.V))))))
		)
		(:STEPS
			(?E1 (?X_C (ASK.V ?X_D (KA (AWAY.ADV STAY.V)))))
			(?E2 (?X_D (AWAY.ADV STAY.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_C (ASK.V ?X_D (KA (AWAY.ADV STAY.V)))))
			(?X_E (?X_C (TELL.V ?X_D (KA (AWAY.ADV STAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-167.PR ?X_N ?X_O (K (UP.ADV (TO.P ?X_O))) ?X_P ?X_R
	               (KA (AWAY.ADV STAY.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_P CANDY.N))
			(!R2 (?X_O HOUSE.N))
			(!R3 (?X_K MAN.N))
			(!R4 (?X_N LITTLE.A))
			(!R5 (?X_N GIRL.N))
			(!R6 (?X_O (PERTAIN-TO ?X_R)))
			(!R7 (?X_P (PERTAIN-TO ?X_R)))
			(!R8 (?X_R AGENT.N))
			(!R9 ((KA (AWAY.ADV STAY.V)) ACTION.N))
			(!R10 (?X_Q BROTHER.N))
			(!R11 (?X_Q (PERTAIN-TO ?X_R)))
			(!R12 (NOT (?X_Q = ?X_R)))
		)
		(:STEPS
			(?X_M (?X_R (BE.V ?X_N)))
			(?X_J (?X_K ((UP.ADV TO.P) ?X_O)))
			(?X_A (?X_K (PULL.V (K (UP.ADV (TO.P ?X_O))))))
			(?X_B (?X_K (OFFER.V ?X_P)))
			(?X_H (?X_K (OFFER.V ?X_P)))
			(?X_F (?X_Q ((ADV-A (WITH.P ?X_R)) BE.V)))
			(?X_D (?X_Q REQUEST_ACTION.12.V ?X_R (KA (AWAY.ADV STAY.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_J)))
			(!W2 (?X_M (BEFORE ?X_A)))
			(!W3 (?X_M (BEFORE ?X_B)))
			(!W4 (?X_M (BEFORE ?X_H)))
			(!W5 (?X_M (BEFORE ?X_F)))
			(!W6 (?X_J (BEFORE ?X_A)))
			(!W7 (?X_J (BEFORE ?X_B)))
			(!W8 (?X_J (BEFORE ?X_H)))
			(!W9 (?X_J (BEFORE ?X_F)))
			(!W10 (?X_A (BEFORE ?X_B)))
			(!W11 (?X_A (BEFORE ?X_H)))
			(!W12 (?X_A (BEFORE ?X_F)))
			(!W13 (?X_B (BEFORE ?X_H)))
			(!W14 (?X_B (BEFORE ?X_F)))
			(!W15 (?X_H (BEFORE ?X_F)))
		)
	)
	(
			"A agent go.168s swimming from L1."
			"A agent is to."
			"A agent enjoy action.174s a action."
			"A agent like.177s a object to swimming."
			"A very cold water makes a tooths chatter of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.3.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C OBJECT.N))
			(!R5 (?X_C SONG.N))
			(!R6 (?X_C GREAT.A))
		)
		(:POSTCONDS
			(?X_F (?X_A (((ADV-A (ON.P ?X_B)) WANT.V) (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_A WANT.V ?X_C))
			(?X_D (?X_A (WANT.V ?X_C)))
			(?X_D (?X_A (LIKE.3.V ?X_C)))
			(?X_D (?X_A (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
			(!W2 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (ON.P YOUTUBE)) LIKE.20.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B ALBUM.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.20.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.6.V ?A) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?A ACTION.N))
		)
		(:PRECONDS
			(?I1 (?X_B (THINK.V (THAT (?A FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B (((ADV-A (ON.P ?X_A)) WANT.V) ?A)))
			(?X_C (?X_B (LIKE.V ?A)))
			(?X_C (?X_B (LOVE.V ?A)))
			(?X_C (?X_B (ENJOY.V ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.7.V (KA (BUY.V ?X_B))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (BUY.V ?X_B)) ACTION.N))
			(!R3 (?X_B ALBUM.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (BUY.V ?X_B)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A (WANT.V (KA (BUY.V ?X_B)))))
			(?X_C (?X_A (LIKE.V (KA (BUY.V ?X_B)))))
			(?X_C (?X_A (LOVE.V (KA (BUY.V ?X_B)))))
			(?X_C (?X_A (ENJOY.V (KA (BUY.V ?X_B)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.28.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B SONG.N))
			(!R4 (?X_B GREAT.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-168.PR ?X_N ?A (KA (BUY.V ?X_N)) ?X_L)) ** ?E)
		(:ROLES
			(!R1 (NOT (?X_N ACTION.N)))
			(!R2 (NOT (?X_N AGENT.N)))
			(!R3 (?A ACTION.N))
			(!R4 (?X_L OBJECT.N))
			(!R5 (?X_L SONG.N))
			(!R6 (?X_L GREAT.A))
			(!R7 (NOT (?X_L ACTION.N)))
			(!R8 (NOT (?X_L AGENT.N)))
			(!R9 ((KA (BUY.V ?X_N)) ACTION.N))
			(!R10 (?X_M AGENT.N))
			(!R11 (?X_N ALBUM.N))
		)
		(:STEPS
			(?X_K (?X_M (((ADV-A (ON.P ?X_A)) LIKE.20.V) ?X_N)))
			(?X_K (?X_M ENJOY_ACTION.6.V ?A))
			(?X_I (?X_M FIND.28.V ?X_L))
			(?X_G ((ADV-E (DURING (ALL.D DAY.N))) (?X_M ((ADV-A (TO.P ?X_L)) LISTEN.V))))
			(?X_E (?X_M LIKE.3.V ?X_L))
			(?X_C (?X_M ENJOY_ACTION.7.V (KA (BUY.V ?X_N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_E)))
			(!W3 (?X_K (BEFORE ?X_C)))
			(!W4 (?X_I (BEFORE ?X_E)))
			(!W5 (?X_I (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent is a little girl."
			"A man is up to."
			"A man pulls up to a house of a agent."
			"A man offers a candy of a agent."
			"A man offers a candy of a agent."
			"A brother of a agent is with a agent."
			"A brother of a agent request action.205s a agent away stay."
	)
)



(
	(EPI-SCHEMA ((?X_D REQUEST_ACTION.13.V ?X_C
	              (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C AGENT.N))
			(!R3 ((KA ((ADV-A (WITH.P ?X_D)) PLAY.V)) ACTION.N))
			(!R4 (NOT (?X_D = ?X_C)))
			(!R5 (?X_C (VERY.ADV SHY.A)))
			(!R6 (?X_B DAY.N))
			(!R7 (?X_C (IS.V ?X_A)))
			(!R8 (?X_A (K BEST.A) FRIEND.N))
			(!R9 (?X_A (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V ?X_C (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
			(?G2 (?X_D (WANT.V (THAT (?X_D ((ADV-A (WITH.P ?X_D)) PLAY.V))))))
		)
		(:STEPS
			(?E1
	   ((ADV-E (DURING ?X_B))
	    (?X_D (ASK.V ?X_C (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))))
			(?E2 (?X_C ((ADV-A (WITH.P ?X_D)) PLAY.V)))
		)
		(:PARAPHRASES
			(?X_E
	   ((ADV-E (DURING ?X_B))
	    (?X_D (ASK.V ?X_C (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))))
			(?X_E (?X_D (TELL.V ?X_C (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E
	              (COMPOSITE-SCHEMA-169.PR ?X_F (KA ((ADV-A (WITH.P ?X_E)) PLAY.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C DAY.N))
			(!R2 (?X_D (K BEST.A) FRIEND.N))
			(!R3 (?X_F (IS.V ?X_D)))
			(!R4 (?X_D (PERTAIN-TO ?X_E)))
			(!R5 (?X_F AGENT.N))
			(!R6 (?X_F (VERY.ADV SHY.A)))
			(!R7 (?X_E AGENT.N))
			(!R8 ((KA ((ADV-A (WITH.P ?X_E)) PLAY.V)) ACTION.N))
			(!R9 (NOT (?X_E = ?X_F)))
		)
		(:STEPS
			(?X_B (?X_E REQUEST_ACTION.13.V ?X_F (KA ((ADV-A (WITH.P ?X_E)) PLAY.V))))
		)
	)
	(
			"A agent like.212s a album on X_A."
			"A agent enjoy action.215s a action."
			"A agent find.214s a object song great."
			"A agent listens DURING all day to a object song great."
			"A agent like.211s a object song great."
			"A agent enjoy action.216s buying a album."
		adding constraint (I$14$327.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-170.PR ?X_N (KE ((K MONEY.N) (FOR.P ?X_N))) ?X_B
	               (K (PLUR CLOTHE.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_N BIRTHDAY.N))
			(!R2 (?X_O (PLUR FRIEND.N)))
			(!R3 (?X_P AGENT.N))
			(!R4 (?X_N (PERTAIN-TO ?X_P)))
			(!R5 (?X_O (PERTAIN-TO ?X_P)))
		)
		(:STEPS
			(?X_G ((K MONEY.N) (FOR.P ?X_N)))
			(?X_D (?X_A (GET.V (KE ((K MONEY.N) (FOR.P ?X_N))))))
			(?X_I (?X_P (HAVE.V ?X_B)))
			(?X_K (?X_P (OUT.ADV ((ADV-A (WITH.P ?X_O)) GO.V))))
			(?X_E (?X_P (OUT.ADV ((ADV-A (WITH.P ?X_O)) GO.V))))
			(?X_M (?X_C (BUY.V (K (PLUR CLOTHE.N)))))
			(?X_R (?X_P (HOME.ADV GO.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_I)))
			(!W3 (?X_G (BEFORE ?X_K)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_M)))
			(!W6 (?X_G (BEFORE ?X_R)))
			(!W7 (?X_D (BEFORE ?X_I)))
			(!W8 (?X_D (BEFORE ?X_K)))
			(!W9 (?X_D (BEFORE ?X_E)))
			(!W10 (?X_D (BEFORE ?X_M)))
			(!W11 (?X_D (BEFORE ?X_R)))
			(!W12 (?X_I (BEFORE ?X_K)))
			(!W13 (?X_I (BEFORE ?X_E)))
			(!W14 (?X_I (BEFORE ?X_M)))
			(!W15 (?X_I (BEFORE ?X_R)))
			(!W16 (?X_K (BEFORE ?X_E)))
			(!W17 (?X_K (BEFORE ?X_M)))
			(!W18 (?X_K (BEFORE ?X_R)))
			(!W19 (?X_E (BEFORE ?X_M)))
			(!W20 (?X_E (BEFORE ?X_R)))
			(!W21 (?X_M (BEFORE ?X_R)))
		)
	)
	(
			"A agent request action.223s a agent very shy is a of a agent with a agent playing."
		adding constraint (SHE$4$343.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C LIKE.21.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_D SNOW.N))
			(!R6 (?X_A MOM.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_B SLED.N))
			(!R9 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.21.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C LIKE.22.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D ACTION.N)))
			(!R3 (NOT (?X_D AGENT.N)))
			(!R4 (?X_D OBJECT.N))
			(!R5 (?X_D SNOW.N))
			(!R6 (?X_A SLED.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
			(!R9 (?X_B MOM.N))
		)
		(:POSTCONDS
			(?P1 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C WANT.V ?X_D))
			(?X_E (?X_C (WANT.V ?X_D)))
			(?X_E (?X_C (LIKE.22.V ?X_D)))
			(?X_E (?X_C (LOVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TAKE.10.V ?X_C) ** ?X_F)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C SLED.N))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
			(!R8 (?X_A MOM.N))
			(!R9 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?X_E (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?I2 PRECOND-OF ?X_F))
			(!W3 (?I3 PRECOND-OF ?X_F))
			(!W4 (?P1 POSTCOND-OF ?X_F))
			(!W5 (?X_F (BEFORE ?X_G)))
			(!W6 (?X_E (SAME-TIME ?X_G)))
			(!W7 (?X_E (RIGHT-AFTER ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TAKE.11.V ?X_C) ** ?X_F)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
			(!R7 (?X_C SLED.N))
			(!R8 (?X_A MOM.N))
			(!R9 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?X_D (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?I2 PRECOND-OF ?X_F))
			(!W3 (?I3 PRECOND-OF ?X_F))
			(!W4 (?P1 POSTCOND-OF ?X_F))
			(!W5 (?X_F (SAME-TIME ?X_E)))
			(!W6 (?X_F (RIGHT-AFTER ?X_G)))
			(!W7 (?X_D (BEFORE ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-171.PR ?X_G ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_F MOM.N))
			(!R2 (?X_F (PERTAIN-TO ?X_H)))
			(!R3 (?X_G OBJECT.N))
			(!R4 (?X_G SNOW.N))
			(!R5 (NOT (?X_G ACTION.N)))
			(!R6 (NOT (?X_G AGENT.N)))
			(!R7 (?X_I (PERTAIN-TO ?X_H)))
			(!R8 (?X_I SLED.N))
			(!R9 (?X_H AGENT.N))
			(!R10 (NOT (?X_I AGENT.N)))
			(!R11 (NOT (?X_I ACTION.N)))
			(!R12 (NOT (?X_H = ?X_I)))
		)
		(:STEPS
			(?X_E (?X_H LIKE.21.V ?X_G))
			(?X_E (?X_H LIKE.22.V ?X_G))
			(?X_C (?X_H TAKE.10.V ?X_I))
			(?X_A (?X_H TAKE.11.V ?X_I))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
			(!W2 (?X_C (BEFORE ?X_A)))
		)
	)
	(
			"Money is for."
			"X_A gets money for a birthday of a agent."
			"A agent has X_B."
			"A agent goes out with a friends of a agent."
			"A agent goes out with a friends of a agent."
			"X_C buys clothes."
			"A agent goes home."
	)
)



(
	(EPI-SCHEMA ((?X_B TAKE.12.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C SHOWER.V))
			(!R7 (?X_A HAIR.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-172.PR (K COLD.A) (KE ((K SOAP.N) (IN.P ?X_L)))
	               ?X_L ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_L HAIR.N))
			(!R2 (?X_I HOT.A))
			(!R3 (?X_I WATER.N))
			(!R4 (?X_L (PERTAIN-TO ?X_M)))
			(!R5 (?X_N SHOWER.V))
			(!R6 (?X_M MAN.N))
			(!R7 (NOT (?X_N AGENT.N)))
			(!R8 (NOT (?X_N ACTION.N)))
			(!R9 (NOT (?X_M = ?X_N)))
		)
		(:STEPS
			(?X_F (?X_M ((STILL.ADV HAVE.V) (KE ((K SOAP.N) (IN.P ?X_L))))))
			(?X_D (?X_M ((QUICKLY.ADV WASH.V) ?X_L)))
			(?X_K (?X_M TAKE.12.V ?X_N))
			(?X_H (?X_I (GO.V (K COLD.A))))
			(?X_A (?X_M ((STILL.ADV HAVE.V) (KE ((K SOAP.N) (IN.P ?X_L))))))
			(?X_B (?X_M ((QUICKLY.ADV WASH.V) ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_A)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
			(!W4 (?X_K (BEFORE ?X_H)))
			(!W5 (?X_K (BEFORE ?X_A)))
			(!W6 (?X_K (BEFORE ?X_B)))
			(!W7 (?X_H (BEFORE ?X_A)))
			(!W8 (?X_H (BEFORE ?X_B)))
			(!W9 (?X_A (BEFORE ?X_B)))
		)
	)
	(
			"A agent like.255s a object snow."
			"A agent like.257s a object snow."
			"A agent take.260s a sled of a agent."
			"A agent take.262s a sled of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.13.V ?X_C ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?X_C ENTITY.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?X_A FARM.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?X_A)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_D (?X_B (TAKE.V ?X_C)))
			(?X_D (?X_B CARRY.V ?X_C))
			(?X_D (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (IN.P OBJECT397.SK)) FIND.8.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A FARM.N))
			(!R3 (?X_C DAY.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (?X_C (AT.P ?X_A)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?X_A)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?X_A))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (IN.P OBJECT397.SK)) FIND.9.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A FARM.N))
			(!R3 (?X_C MAN.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (?X_C (AT.P ?X_A)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?X_A)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?X_A))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-173.PR ?X_J ?L2 ?X_I ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_H FARM.N))
			(!R2 (?X_I DAY.N))
			(!R3 (?X_J AGENT.N))
			(!R4 (?X_K MAN.N))
			(!R5 (?X_J SMALLER-THAN.N ?X_K))
			(!R6 (?L2 DESTINATION.N))
			(!R7 (?L2 HOME.N))
		)
		(:STEPS
			(?X_G (?X_J ((ADV-A (ON.P ?X_H)) LIVE.V)))
			(?X_E (?X_J (((ADV-A (IN.P ?X_A)) FIND.8.V) ?X_I)))
			(?X_E (?X_J (((ADV-A (IN.P ?X_A)) FIND.9.V) ?X_K)))
			(?X_C (?X_K TRANSPORT_OBJECT.13.V ?X_J ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_C)))
			(!W3 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man has soap in a hair of a man still."
			"A man washes a hair of a man quickly."
			"A man take.274s a shower."
			"A hot water goes cold."
			"A man has soap in a hair of a man still."
			"A man washes a hair of a man quickly."
	)
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-174.PR ?X_I ?X_J
	               (KE ((K (L X (AND (X BLANK.A) (X PAPER.N)))) (IN.P ?X_J)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I BOX.N))
			(!R2 (?X_E FATHER.N))
			(!R3 (?X_F AGENT.N))
			(!R4 (?X_E (PERTAIN-TO ?X_F)))
			(!R5 (?X_J GARAGE.N))
			(!R6 (?X_J BOX.N))
			(!R7 (?X_I (IN.P ?X_J)))
		)
		(:STEPS
			(?X_D (?X_A (BE.V ?X_I)))
			(?X_H (?X_E (((ADV-A (FOR.P ?X_F)) OPEN.V) ?X_J)))
			(?X_L
	   (?X_A (BE.V (KE ((K (L X (AND (X BLANK.A) (X PAPER.N)))) (IN.P ?X_J))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_H)))
			(!W2 (?X_D (BEFORE ?X_L)))
			(!W3 (?X_H (BEFORE ?X_L)))
		)
	)
	(
			"A agent lives on a farm."
			"A agent find.296s a day in X_A."
			"A agent find.297s a man in X_A."
			"A man transport object.288s a agent a destination home."
		adding constraint (I$8$419.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.15.V)
	              (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D))))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D))))))
			(!R5 (?X_B LATE.A))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
			(!R7 (?X_C FRIEND.N))
			(!R8 (?X_D PARK.N))
			(!R9 (?X_A CURFEW.N))
			(!R10 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V
	     (KA ((ADV-A (AT.P (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D))))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D)))))
	     GO.15.V)))
			(?X_E
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D)))))
	      GO.15.V))))
			(?X_E
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D)))))
	     GO.15.V)
	    (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D)))))
			(?X_E (?X_B GO.15.V))
			(?X_E (?X_B GO.15.V (K ((ADV-A (WITH.P ?X_C)) (TO.P ?X_D)))))
			(?X_E (?X_B (LOCATION_ADV.? GO.15.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D
	              (((ADV-A (IN.P (K (L X (AND (X HIGH.A) (X SCHOOL.N))))))
	                FIND.29.V)
	               ?O))
	             ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C PARK.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_D LATE.A))
			(!R5 (?X_A (PERTAIN-TO ?X_D)))
			(!R6 (?X_A CURFEW.N))
			(!R7 (?X_B (PERTAIN-TO ?X_D)))
			(!R8 (?X_B FRIEND.N))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (?O (AT.P ?X_C)))
			(?I3 (?X_D ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_D (KNOW.V (THAT (?O (AT.P ?X_C)))))))
			(?I5 (NOT (?X_D (HAVE.V ?O))))
		)
		(:POSTCONDS
			(?P1 (?X_D (KNOW.V (THAT (?O (AT.P ?X_C))))))
			(?P2 (?X_D (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (((ADV-A (IN.P (K TROUBLE.N))) GET.15.V) ?O)) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?X_C PARK.N))
			(!R5 (NOT (?X_D = ?O)))
			(!R6 (?X_D LATE.A))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_A FRIEND.N))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
			(!R10 (?X_B CURFEW.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (?X_D (HAVE.V ?O))))))
			(?G2 (?X_D (NEED.V ?O)))
			(?G3 (?X_D (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D HAVE.V ?O)))
			(?I2 (?X_D (AT.P ?X_C)))
			(?I3 (?O (AT.P ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_D HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-175.PR ?X_L ?X_K
	               (K ((ADV-A (WITH.P ?X_L)) (TO.P ?X_M))) ?O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K CURFEW.N))
			(!R2 (?X_K (PERTAIN-TO ?X_N)))
			(!R3 (?X_L (PERTAIN-TO ?X_N)))
			(!R4 (?X_L FRIEND.N))
			(!R5 (?X_M PARK.N))
			(!R6 ((K ((ADV-A (WITH.P ?X_L)) (TO.P ?X_M))) DESTINATION.N))
			(!R7 (?X_N AGENT.N))
			(!R8 (?X_N LATE.A))
			(!R9 (NOT (?O AGENT.N)))
			(!R10 (NOT (?O ACTION.N)))
			(!R11 (NOT (?X_N = ?O)))
		)
		(:STEPS
			(?X_J
	   (?X_N
	    (((ADV-A (IN.P (K (L X (AND (X HIGH.A) (X SCHOOL.N)))))) FIND.29.V) ?O)))
			(?X_H
	   (?X_N ((ADV-A (FROM.P ?L1)) GO.15.V)
	    (K ((ADV-A (WITH.P ?X_L)) (TO.P ?X_M)))))
			(?X_F (?X_N (LOSE.V ?X_L)))
			(?X_B (?X_N (FOR.P ?X_K)))
			(?X_D (?X_N (((ADV-A (IN.P (K TROUBLE.N))) GET.15.V) ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_J (BEFORE ?X_D)))
			(!W5 (?X_H (BEFORE ?X_F)))
			(!W6 (?X_H (BEFORE ?X_B)))
			(!W7 (?X_H (BEFORE ?X_D)))
			(!W8 (?X_F (BEFORE ?X_B)))
			(!W9 (?X_F (BEFORE ?X_D)))
			(!W10 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"X_A is a box in a garage box."
			"A father of a agent opens a garage box for a agent."
			"X_A is blank paper in a garage box."
		adding constraint (I$0$436.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A FEED.7.V ?X_B ?F) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MOTHER.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?F FOOD.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (NOT (?X_B = ?F)))
			(!R6 (NOT (?X_A = ?F)))
			(!R7 (?X_A BIRD.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
			(?G2 (?X_A (WANT.V (THAT (?X_B EAT.V ?F)))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?F))
			(?I2 (?X_B HUNGRY.A))
		)
		(:STEPS
			(?E1 (?X_B EAT.V ?F))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (HAVE.V ?F))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?E1 AFTER ?X_C))
			(!W2 (?X_C (AFTER ?X_D)))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (COMPOSITE-SCHEMA-176.PR ?X_C ?F)) ** ?E)
		(:ROLES
			(!R1 (?X_D BIRD.N))
			(!R2 (?X_D MOTHER.N))
			(!R3 (?X_C AGENT.N))
			(!R4 (NOT (?X_D = ?X_C)))
			(!R5 (NOT (?X_C = ?F)))
			(!R6 (NOT (?X_D = ?F)))
			(!R7 (?F FOOD.N))
		)
		(:STEPS
			(E451.SK (?X_D FEED.7.V ?X_C ?F))
		)
	)
	(
			"A agent late find.334s O in high school."
			"A agent late go.324s with a friend of a agent late to a park from L1."
			"A agent late loses a friend of a agent late."
			"A agent late is for."
			"A agent late get.339s O in trouble."
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.23.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B SON.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C OBJECT.N))
			(!R5 (?X_C (PLUR PEACH.N)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_A AGENT.N))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V ?X_C))
			(?X_D (?X_B (WANT.V ?X_C)))
			(?X_D (?X_B (LIKE.23.V ?X_C)))
			(?X_D (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X FEED.8.V ?X_C (K (PLUR FOOD.N))) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_C SON.N))
			(!R3 ((K (PLUR FOOD.N)) FOOD.N))
			(!R4 (NOT (?X = ?X_C)))
			(!R5 (NOT (?X_C = (K (PLUR FOOD.N)))))
			(!R6 (NOT (?X = (K (PLUR FOOD.N)))))
			(!R7 (?X_A AGENT.N))
			(!R8 (?X_C (PERTAIN-TO ?X_A)))
			(!R9 (?X_D (IMPINGES-ON ?X_B)))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
			(?G2
	   (?X
	    (WANT.V (THAT (MUST.AUX-S (?X_C ((JUST.ADV EAT.V) (K (PLUR FOOD.N)))))))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V (K (PLUR FOOD.N))))
			(?I2 (?X_C HUNGRY.A))
		)
		(:STEPS
			(?X_D (MUST.AUX-S (?X_C ((JUST.ADV EAT.V) (K (PLUR FOOD.N))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V (K (PLUR FOOD.N))))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D AFTER ?E))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((MUST.AUX-S (?X_C ((JUST.ADV EAT.7.V) (K (PLUR FOOD.N))))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_C SON.N))
			(!R2 ((K (PLUR FOOD.N)) FOOD.N))
			(!R3 (?X_D (IMPINGES-ON ?X_A)))
			(!R4 (?X_C (PERTAIN-TO ?X_B)))
			(!R5 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V (K (PLUR FOOD.N))))
			(?I2 (?X_C HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (HAVE.V (K (PLUR FOOD.N))))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_D))
			(!W2 (?I1 BEFORE ?X_D))
			(!W3 (?X_D CAUSE-OF ?P1))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-177.PR
	               (K
	                (L X
	                 (AND (X (MORE.ADV (ON.P ?X_L))) (X THAN.P) (X (IN.P ?X_L)))))
	               (KE
	                (?X_L
	                 (GET.V
	                  (L X
	                   (AND (X (MORE.ADV (ON.P ?X_L))) (X THAN.P)
	                        (X (IN.P ?X_L)))))))
	               ?X_K ?X_L (K (PLUR FOOD.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2 (?X_L (PERTAIN-TO ?X_G)))
			(!R3 (?X_H (IMPINGES-ON ?X_I)))
			(!R4 (?X_K (PLUR PEACH.N)))
			(!R5 (NOT (?X_K ACTION.N)))
			(!R6 (NOT (?X_K AGENT.N)))
			(!R7 (NOT (?X = ?X_L)))
			(!R8 (NOT (?X_L = (K (PLUR FOOD.N)))))
			(!R9 (NOT (?X = (K (PLUR FOOD.N)))))
			(!R10 (?X AGENT.N))
			(!R11 ((K (PLUR FOOD.N)) FOOD.N))
			(!R12 (?X_L SON.N))
		)
		(:STEPS
			(?X_C
	   (?X_L
	    (GET.V
	     (K (L X (AND (X (MORE.ADV (ON.P ?X_L))) (X THAN.P) (X (IN.P ?X_L))))))))
			(?X_E (?X_L LIKE.23.V ?X_K))
			(?X_J
	   (?X_G
	    (THINK.V
	     (KE
	      (?X_L
	       (GET.V
	        (L X (AND (X (MORE.ADV (ON.P ?X_L))) (X THAN.P) (X (IN.P ?X_L))))))))))
			(?E_1 (?X FEED.8.V ?X_L (K (PLUR FOOD.N))))
			(?X_H (MUST.AUX-S (?X_L ((JUST.ADV EAT.7.V) (K (PLUR FOOD.N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_J)))
			(!W2 (?E_1 (BEFORE ?X_H)))
		)
	)
	(
			"A bird mother feed.342s a agent a food."
		adding constraint (ME$0$466.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.28.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B PET.N))
			(!R6 (?X_B STORE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.28.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.28.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.28.V) ?X_B))
			(?X_C (?X_A GO.28.V))
			(?X_C (?X_A GO.28.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.28.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.30.V ?X_B) ** ?X_G)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B ENTITY.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_G))
			(!W2 (?X_G (AT-ABOUT ?X_C)))
			(!W3 (?X_F (AT-ABOUT ?X_C)))
			(!W4 (?X_D (DURING ?X_F)))
			(!W5 (?X_D (CONSEC ?X_E)))
			(!W6 (?X_E (DURING ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_G))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-178.PR ?X_K ?X_D ?X_N ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_D LIZARD.N))
			(!R2 (?X_K PET.N))
			(!R3 (?X_N DESTINATION.N))
			(!R4 (?X_N PET.N))
			(!R5 (?X_N STORE.N))
			(!R6 (?X_O AGENT.N))
			(!R7 (?X_P ENTITY.N))
		)
		(:STEPS
			(?X_J (?X_O (WANT.V ?X_K)))
			(?X_H (?X_O ((ADV-A (FROM.P ?L1)) GO.28.V) ?X_N))
			(?X_A (?X_P LIZARD.N))
			(?X_F (?X_O FIND.30.V ?X_P))
			(?X_C (?X_O (BUY.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_A)))
			(!W3 (?X_J (BEFORE ?X_F)))
			(!W4 (?X_J (BEFORE ?X_C)))
			(!W5 (?X_H (BEFORE ?X_A)))
			(!W6 (?X_H (BEFORE ?X_F)))
			(!W7 (?X_H (BEFORE ?X_C)))
			(!W8 (?X_A (BEFORE ?X_C)))
			(!W9 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A son of a agent gets on than in."
			"A son of a agent like.371s a peachs."
			"A agent thinks a son of a agent gets on than in."
			"A agent feed.366s a son of a agent foods."
			"A son of a agent eat.363s foods must just."
	)
)



(
	(EPI-SCHEMA ((?X_A GET.16.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_C (CONSEC ?X_D)))
			(!W6 (?X_C (AT-ABOUT ?X_E)))
			(!W7 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-179.PR ?X_B ?X_G ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_G TREE.N))
			(!R2 (NOT (?X_J AGENT.N)))
			(!R3 (NOT (?X_J ACTION.N)))
			(!R4 (NOT (?X_K = ?X_J)))
			(!R5 (?X_K AGENT.N))
		)
		(:STEPS
			(?X_I (?X_A (K (PLUR EGG.N)) (HAVE.V ?X_B)))
			(?X_F (?X_K ((UP.PRT GO.V) ?X_G)))
			(?X_D (?X_K GET.16.V ?X_J))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_F)))
			(!W2 (?X_I (BEFORE ?X_D)))
			(!W3 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent wants a pet."
			"A agent go.383s a destination pet store from L1."
			"A entity is lizard."
			"A agent find.386s a entity."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.12.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.12.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.12.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.12.V) ?L2))
			(?X_B (?X_A (AWAY.PRT RUN.12.V)))
			(?X_B (?X_A RUN.12.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? RUN.12.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-180.PR ?X_A ?X_D ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_D DOG.N))
			(!R2 (?X_D NEW.A))
			(!R3 (?X_I ((ACCIDENTALLY.ADV (OUT.PRT LET.V)) ?X_J)))
			(!R4 (?X_K FRIEND.N))
			(!R5 (?X_K DOG.N))
			(!R6 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_I ((ADV-A (FOR.P ?X_K)) DOGSIT.V)))
			(?X_F (?X_K ((ADV-A (FROM.P ?L1)) RUN.12.V) ?L2))
			(?X_C (MUST.AUX-S (?X_I (BUY.V ?X_A ?X_D))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"X_A has X_B."
			"A agent goes a tree up."
			"A agent get.6s X_J."
	)
)



(
	(EPI-SCHEMA ((?X_C PLAY.11.V) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_B TOY.N))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_A GAME.N))
			(!R5 (NOT (?X_A AGENT.N)))
			(!R6 (?X_A (PLUR GAME.N)))
			(!R7 (?X_B HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (WITH.P ?X_B)) PLAY.11.V)))
			(?X_D (?X_C PLAY.11.V ?X_A))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A PLAY.12.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B (PLUR GAME.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-181.PR ?X_J ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_E LONG.A))
			(!R2 (?X_E DAY.N))
			(!R3 (?X_J HOUSE.N))
			(!R4 (?X_M AGENT.N))
			(!R5 (?X_N (PLUR GAME.N)))
			(!R6 (NOT (?X_N AGENT.N)))
		)
		(:STEPS
			(?X_L ((ADV-E (DURING (RAIN.V (ALL.D DAY.N) (K YESTERDAY.N)))) (?X_A BE.V)))
			(?X_B (?X_M (IN.P ?X_J)))
			(?X_I (?X_M ((ADV-A (FOR.P (KA (GET.V (KJ (VERY.ADV BORED.A)))))) START.V)))
			(?X_D ((ADV-E (DURING ?X_E)) (?X_A BE.V)))
			(?X_G (?X_M PLAY.11.V))
			(?X_G (?X_M PLAY.12.V ?X_N))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_B)))
			(!W2 (?X_L (BEFORE ?X_I)))
			(!W3 (?X_L (BEFORE ?X_D)))
			(!W4 (?X_B (BEFORE ?X_I)))
			(!W5 (?X_B (BEFORE ?X_D)))
			(!W6 (?X_I (BEFORE ?X_D)))
		)
	)
	(
			"A accidentally out let X_J dogsits for a friend dog."
			"A friend dog run.21s a destination from L1."
			"A accidentally out let X_J buys X_A a dog new must."
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.24.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N)))))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) ACTION.N)))
			(!R3 (NOT ((K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) AGENT.N)))
			(!R4 ((K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) OBJECT.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A BOAT.N))
		)
		(:POSTCONDS
			(?P1
	   (?X_B (WANT.V (KA (HAVE.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))))))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N)))))))
			(?X_D (?X_B (WANT.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))))))
			(?X_D (?X_B (LIKE.24.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))))))
			(?X_D (?X_B (LOVE.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (INTO.P (KA RACE.V))) GET.17.V) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?O)))
			(!R6 (?X_A BOAT.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?O))))))
			(?G2 (?X_B (NEED.V ?O)))
			(?G3 (?X_B (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?O)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-182.PR ?X_H
	               (K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) ?O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H BOAT.N))
			(!R2 (?X_H (PERTAIN-TO ?X_J)))
			(!R3 ((K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) OBJECT.N))
			(!R4 (NOT ((K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) ACTION.N)))
			(!R5 (NOT ((K (L X (AND (X FAST.A) (X (PLUR BOAT.N))))) AGENT.N)))
			(!R6 (?X_J AGENT.N))
			(!R7 (NOT (?O AGENT.N)))
			(!R8 (NOT (?O ACTION.N)))
			(!R9 (NOT (?X_J = ?O)))
		)
		(:STEPS
			(?X_C (?X_J ((ONCE.ADV FLIP.V) ?X_H)))
			(?X_G (?X_J LIKE.24.V (K (L X (AND (X FAST.A) (X (PLUR BOAT.N)))))))
			(?X_E (?X_J (((ADV-A (INTO.P (KA RACE.V))) GET.17.V) ?O)))
			(?X_A (?X_J ((ONCE.ADV FLIP.V) ?X_H)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
			(!W2 (?X_G (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_A)))
			(!W4 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"X_A is DURING rains all day yesterday."
			"A agent is in."
			"A agent starts for getting KJ very bored."
			"X_A is DURING a long day."
			"A agent play.37s."
			"A agent play.44s a games."
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.14.V ?X_C ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C AGENT.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A (PLUR FRIEND.N)))
			(!R8 (?L2 THERE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_D (?X_B (TAKE.V ?X_C)))
			(?X_D (?X_B CARRY.V ?X_C))
			(?X_D (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_F (AFTER ?X_D)))
			(!W4 (?X_F (RIGHT-AFTER ?X_E)))
			(!W5 (?X_F (SAME-TIME ?X_G)))
			(!W6 (?X_H (BEFORE ?X_G)))
			(!W7 (?X_J (BEFORE ?X_G)))
			(!W8 (?X_H (AFTER ?X_I)))
			(!W9 (?X_J (AFTER ?X_K)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.15.V ?X_C ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C FAIR.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A (PLUR FRIEND.N)))
			(!R8 (?L2 THERE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_D (?X_B (TAKE.V ?X_C)))
			(?X_D (?X_B CARRY.V ?X_C))
			(?X_D (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_E (AFTER ?X_D)))
			(!W4 (?X_E (SAME-TIME ?X_G)))
			(!W5 (?X_E (RIGHT-AFTER ?X_F)))
			(!W6 (?X_J (BEFORE ?X_G)))
			(!W7 (?X_H (BEFORE ?X_G)))
			(!W8 (?X_H (AFTER ?X_I)))
			(!W9 (?X_J (AFTER ?X_K)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_K)) GET.18.V) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?O)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A (PLUR FRIEND.N)))
			(!R8 (?X_K THERE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?O))))))
			(?G2 (?X_B (NEED.V ?O)))
			(?G3 (?X_B (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?O)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (BEFORE ?X_E)))
			(!W7 (?X_G (SAME-TIME ?X_E)))
			(!W8 (?X_I (BEFORE ?X_E)))
			(!W9 (?X_G (AFTER ?X_F)))
			(!W10 (?X_G (RIGHT-AFTER ?X_H)))
			(!W11 (?X_I (AFTER ?X_J)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_K)) GET.19.V) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?O)))
			(!R6 (?X_A (PLUR FRIEND.N)))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_K THERE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?O))))))
			(?G2 (?X_B (NEED.V ?O)))
			(?G3 (?X_B (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?O)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (SAME-TIME ?X_F)))
			(!W7 (?X_D (RIGHT-AFTER ?X_E)))
			(!W8 (?X_G (BEFORE ?X_F)))
			(!W9 (?X_I (BEFORE ?X_F)))
			(!W10 (?X_G (AFTER ?X_H)))
			(!W11 (?X_I (AFTER ?X_J)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FOR.P (THREE.D (PLUR HOUR.N)))) SEARCH.3.V)) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 ((THREE.D (PLUR HOUR.N)) ENTITY.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (FIND.V (THREE.D (PLUR HOUR.N)))))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V (THREE.D (PLUR HOUR.N)))))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?LX)))
			(?I2 ((THREE.D (PLUR HOUR.N)) (AT.P ?LO)))
			(?I3 (NOT (?X_A (KNOW.V (THAT ((THREE.D (PLUR HOUR.N)) (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_A (FIND.V (THREE.D (PLUR HOUR.N)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (FOR.P (THREE.D (PLUR HOUR.N)))) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (FOR.P (THREE.D (PLUR HOUR.N)))) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_C))
			(!W2 (?X_C (AT-ABOUT ?X_B)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_C))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R
	              (COMPOSITE-SCHEMA-183.PR (KA ((ADV-A (TO.P ?X_Q)) GO.V)) ?X_P
	               (K FUN.N) ?X_S ?X_Q ?L2 ?O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_P (PLUR FRIEND.N)))
			(!R2 (?X_P (PERTAIN-TO ?X_R)))
			(!R3 (?X_S SMALLER-THAN.N ?X_R))
			(!R4 (?X_Q FAIR.N))
			(!R5 (?X_Q SMALLER-THAN.N ?X_R))
			(!R6 (?L2 DESTINATION.N))
			(!R7 (?L2 THERE.N))
			(!R8 (?X_R AGENT.N))
			(!R9 (NOT (?O AGENT.N)))
			(!R10 (NOT (?O ACTION.N)))
			(!R11 (NOT (?X_R = ?O)))
			(!R12 (?X_S AGENT.N))
			(!R13 ((THREE.D (PLUR HOUR.N)) ENTITY.N))
		)
		(:STEPS
			(?X_O (?X_R (WANT.V (KA ((ADV-A (TO.P ?X_Q)) GO.V)))))
			(?X_A (?X_R (THERE.ADV GET.V)))
			(?X_M (?X_R (MEET.V ?X_P)))
			(?X_B (?X_R TRANSPORT_OBJECT.14.V ?X_S ?L2))
			(?X_B (?X_R TRANSPORT_OBJECT.15.V ?X_Q ?L2))
			(?X_B (?X_R (((ADV-A (AT.P ?X_K)) GET.19.V) ?O)))
			(?X_C (?X_R (((ADV-A (AT.P ?X_K)) GET.18.V) ?O)))
			(?X_J (?X_R (MEET.V ?X_P)))
			(?X_D (?X_R (MEET.V ?X_P)))
			(?X_H (?X_S (HAVE.V (K FUN.N))))
			(?X_F (?X_S ((ADV-A (FOR.P (THREE.D (PLUR HOUR.N)))) SEARCH.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_D)))
			(!W2 (?X_O (BEFORE ?X_H)))
			(!W3 (?X_O (BEFORE ?X_F)))
			(!W4 (?X_A (BEFORE ?X_M)))
			(!W5 (?X_A (BEFORE ?X_D)))
			(!W6 (?X_A (BEFORE ?X_H)))
			(!W7 (?X_A (BEFORE ?X_F)))
			(!W8 (?X_M (BEFORE ?X_D)))
			(!W9 (?X_M (BEFORE ?X_H)))
			(!W10 (?X_M (BEFORE ?X_F)))
			(!W11 (?X_B (BEFORE ?X_D)))
			(!W12 (?X_B (BEFORE ?X_H)))
			(!W13 (?X_B (BEFORE ?X_F)))
			(!W14 (?X_C (BEFORE ?X_J)))
			(!W15 (?X_C (BEFORE ?X_D)))
			(!W16 (?X_C (BEFORE ?X_H)))
			(!W17 (?X_C (BEFORE ?X_F)))
			(!W18 (?X_J (BEFORE ?X_D)))
			(!W19 (?X_J (BEFORE ?X_H)))
			(!W20 (?X_J (BEFORE ?X_F)))
			(!W21 (?X_D (BEFORE ?X_H)))
			(!W22 (?X_D (BEFORE ?X_F)))
			(!W23 (?X_H (BEFORE ?X_F)))
		)
	)
	(
			"A agent flips a boat of a agent once."
			"A agent like.50s fast boat."
			"A agent get.53s O into racing."
			"A agent flips a boat of a agent once."
		adding constraint (THEY$22$132.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.29.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 ((K (L X (AND (X FATHER.N) (X |'S|)))) (PERTAIN-TO ?X_B)))
			(!R6 (?X_C STORE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) GO.29.V))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.29.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.29.V) ?X_C))
			(?X_D (?X_B GO.29.V))
			(?X_D (?X_B GO.29.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.29.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.8.V
	              (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)) ACTION.N))
			(!R3 ((K (L X (AND (X FATHER.N) (X |'S|)))) (PERTAIN-TO ?X_A)))
			(!R4 (?X_C GRILL.N))
			(!R5 (?X_C NICE.A))
			(!R6 (?X_C NEW.A))
		)
		(:PRECONDS
			(?I1
	   (?X_A
	    (THINK.V
	     (THAT ((KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D (?X_A (WANT.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
			(?X_D (?X_A (LIKE.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
			(?X_D (?X_A (LOVE.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
			(?X_D
	   (?X_A (ENJOY.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (SAME-TIME ?X_G)))
			(!W2 (?X_D (RIGHT-AFTER ?X_E)))
			(!W3 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.9.V
	              (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)) ACTION.N))
			(!R3 (?X_C NEW.A))
			(!R4 (?X_C NICE.A))
			(!R5 (?X_C GRILL.N))
			(!R6 ((K (L X (AND (X FATHER.N) (X |'S|)))) (PERTAIN-TO ?X_A)))
		)
		(:PRECONDS
			(?I1
	   (?X_A
	    (THINK.V
	     (THAT ((KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D (?X_A (WANT.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
			(?X_D (?X_A (LIKE.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
			(?X_D (?X_A (LOVE.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
			(?X_D
	   (?X_A (ENJOY.V (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_C)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_E)))
			(!W2 (?X_F (SAME-TIME ?X_E)))
			(!W3 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (L X (AND (X FATHER.N) (X |'S|)))) LIKE.25.V
	              (KE (?X_B NEW.A GRILL.N)))
	             ** ?X_C)
		(:ROLES
			(!R1 ((K (L X (AND (X FATHER.N) (X |'S|)))) AGENT.N))
			(!R2 (NOT ((KE (?X_B NEW.A GRILL.N)) ACTION.N)))
			(!R3 (NOT ((KE (?X_B NEW.A GRILL.N)) AGENT.N)))
			(!R4 ((KE (?X_B NEW.A GRILL.N)) OBJECT.N))
			(!R5 ((K (L X (AND (X FATHER.N) (X |'S|)))) (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1
	   ((K (L X (AND (X FATHER.N) (X |'S|))))
	    (WANT.V (KA (HAVE.V (KE (?X_B NEW.A GRILL.N)))))))
		)
		(:PARAPHRASES
			(?X_C
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) WANT.V (KE (?X_B NEW.A GRILL.N))))
			(?X_C
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) (WANT.V (KE (?X_B NEW.A GRILL.N)))))
			(?X_C
	   ((K (L X (AND (X FATHER.N) (X |'S|))))
	    (LIKE.25.V (KE (?X_B NEW.A GRILL.N)))))
			(?X_C
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) (LOVE.V (KE (?X_B NEW.A GRILL.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (L X (AND (X FATHER.N) (X |'S|)))) LIKE.26.V
	              (KE (?X_B NEW.A GRILL.N)))
	             ** ?X_D)
		(:ROLES
			(!R1 ((K (L X (AND (X FATHER.N) (X |'S|)))) AGENT.N))
			(!R2 (NOT ((KE (?X_B NEW.A GRILL.N)) ACTION.N)))
			(!R3 (NOT ((KE (?X_B NEW.A GRILL.N)) AGENT.N)))
			(!R4 ((KE (?X_B NEW.A GRILL.N)) OBJECT.N))
			(!R5 ((K (L X (AND (X FATHER.N) (X |'S|)))) (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1
	   ((K (L X (AND (X FATHER.N) (X |'S|))))
	    (WANT.V (KA (HAVE.V (KE (?X_B NEW.A GRILL.N)))))))
		)
		(:PARAPHRASES
			(?X_D
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) WANT.V (KE (?X_B NEW.A GRILL.N))))
			(?X_D
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) (WANT.V (KE (?X_B NEW.A GRILL.N)))))
			(?X_D
	   ((K (L X (AND (X FATHER.N) (X |'S|))))
	    (LIKE.26.V (KE (?X_B NEW.A GRILL.N)))))
			(?X_D
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) (LOVE.V (KE (?X_B NEW.A GRILL.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (RIGHT-AFTER ?X_C)))
			(!W2 (?X_D (SAME-TIME ?X_F)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-184.PR
	               (KE ((K (L X (AND (X FATHER.N) (X |'S|)))) DAY.N)) ?X_L
	               (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_K))
	               (KE (?X_N NEW.A GRILL.N))))
	             ** ?E)
		(:ROLES
			(!R1 ((KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_K)) ACTION.N))
			(!R2 (?X_K GRILL.N))
			(!R3 (?X_K NICE.A))
			(!R4 (?X_K NEW.A))
			(!R5 (?X_L DESTINATION.N))
			(!R6 (?X_L STORE.N))
			(!R7 (?X_N AGENT.N))
			(!R8 ((K (L X (AND (X FATHER.N) (X |'S|)))) AGENT.N))
			(!R9 ((K (L X (AND (X FATHER.N) (X |'S|)))) (PERTAIN-TO ?X_N)))
			(!R10 ((KE (?X_N NEW.A GRILL.N)) OBJECT.N))
			(!R11 (NOT ((KE (?X_N NEW.A GRILL.N)) ACTION.N)))
			(!R12 (NOT ((KE (?X_N NEW.A GRILL.N)) AGENT.N)))
		)
		(:STEPS
			(?X_J
	   ((K TOMORROW.N) (BE.V (KE ((K (L X (AND (X FATHER.N) (X |'S|)))) DAY.N)))))
			(?X_D (?X_N ?X_K GRILL.N))
			(?X_H
	   (?X_N ENJOY_ACTION.9.V
	    (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_K))))
			(?X_A
	   (?X_N ENJOY_ACTION.8.V
	    (KA (GET.V (K (L X (AND (X FATHER.N) (X |'S|)))) ?X_K))))
			(?X_F (?X_N ((ADV-A (FROM.P ?L1)) GO.29.V) ?X_L))
			(?X_B
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) LIKE.25.V (KE (?X_N NEW.A GRILL.N))))
			(?X_B
	   ((K (L X (AND (X FATHER.N) (X |'S|)))) LIKE.26.V (KE (?X_N NEW.A GRILL.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_D (BEFORE ?X_B)))
			(!W5 (?X_H (BEFORE ?X_A)))
			(!W6 (?X_H (BEFORE ?X_F)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_A (BEFORE ?X_F)))
			(!W9 (?X_A (BEFORE ?X_B)))
			(!W10 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A agent wants to a fair going."
			"A agent gets there."
			"A agent meets a friends of a agent."
			"A agent transport object.58s a agent a destination there."
			"A agent transport object.59s a fair a destination there."
			"A agent get.63s O at X_K."
			"A agent get.62s O at X_K."
			"A agent meets a friends of a agent."
			"A agent meets a friends of a agent."
			"A agent has fun."
			"A agent search.61s for three hours."
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (FROM.P (K SCHOOL.N))) GO.30.V) ?L2)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((K SCHOOL.N) LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT ((K SCHOOL.N) = ?L2)))
			(!R5 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P (K SCHOOL.N))))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P (K SCHOOL.N)))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.30.V)))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P (K SCHOOL.N))) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.30.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.30.V) ?L2))
			(?X_B (?X_A GO.30.V))
			(?X_B (?X_A GO.30.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? GO.30.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.31.V) (K SCHOOL.N)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K SCHOOL.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K SCHOOL.N))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K SCHOOL.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K SCHOOL.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K SCHOOL.N))))
		)
		(:PARAPHRASES
			(?X_B
	   ((ADV-E (DURING (K TODAY.N)))
	    (?X_A
	     ((ADV-A (DESTINATION_PREP.? (K SCHOOL.N)))
	      ((ADV-A (TO.P (K SCHOOL.N))) GO.31.V)))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (K SCHOOL.N))) GO.31.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (K SCHOOL.N))) GO.31.V) (K SCHOOL.N)))
			(?X_B (?X_A GO.31.V))
			(?X_B (?X_A GO.31.V (K SCHOOL.N)))
			(?X_B (?X_A (LOCATION_ADV.? GO.31.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-185.PR ?X_J
	               (ALL.D (L X (AND (X {REF}.N) (X (OF.P ?X_F))))) ?L2
	               (K SCHOOL.N)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F HOMEWORK.N))
			(!R2 (?X_F (PERTAIN-TO ?X_G)))
			(!R3 (?X_J (K FIRST.A) DAY.N))
			(!R4 (?X_J (OF.P (K SCHOOL.N))))
			(!R5 ((K SCHOOL.N) DESTINATION.N))
			(!R6 (?X_M AGENT.N))
			(!R7 (?X_N AGENT.N))
			(!R8 (NOT ((K SCHOOL.N) = ?L2)))
			(!R9 (?L2 DESTINATION.N))
			(!R10 (?L2 HOME.N))
		)
		(:STEPS
			(?X_L (?X_M ((ADV-A (FROM.P ?L1)) GO.31.V) (K SCHOOL.N)))
			(?X_I ((K TODAY.N) (BE.V ?X_J)))
			(?X_E (?X_M (GET.V (ALL.D (L X (AND (X {REF}.N) (X (OF.P ?X_F))))))))
			(?X_C (?X_N (((ADV-A (FROM.P (K SCHOOL.N))) GO.30.V) ?L2)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_I)))
			(!W2 (?X_L (BEFORE ?X_E)))
			(!W3 (?X_L (BEFORE ?X_C)))
			(!W4 (?X_I (BEFORE ?X_E)))
			(!W5 (?X_I (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.86s school from L1."
			"Today is a of school."
			"A agent gets all of."
			"A agent go.85s a destination home from school."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) WALK.7.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MOTHER.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B BABY.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? ?X_B))
	     (OVER.PRT ((ADV-A (TO.P ?X_B)) WALK.7.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) WALK.7.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) WALK.7.V) ?X_B))
			(?X_C (?X_A WALK.7.V))
			(?X_C (?X_A WALK.7.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? WALK.7.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.32.V) (KA SLEEP.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A BABY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA SLEEP.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA SLEEP.V))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KA SLEEP.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA SLEEP.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA SLEEP.V))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA SLEEP.V)))
	     (BACK.ADV ((ADV-A (FOR.P (KA SLEEP.V))) GO.32.V)))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (KA SLEEP.V))) GO.32.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (KA SLEEP.V))) GO.32.V) (KA SLEEP.V)))
			(?X_B (?X_A GO.32.V))
			(?X_B (?X_A GO.32.V (KA SLEEP.V)))
			(?X_B (?X_A (LOCATION_ADV.? GO.32.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-186.PR (THAT (?X_N HUNGRY.A)) (KE (?X_N HUNGRY.A))
	               ?X_N (KA SLEEP.V)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_N DESTINATION.N))
			(!R2 (?X_M MOTHER.N))
			(!R3 (?X_N BABY.N))
			(!R4 ((KA SLEEP.V) DESTINATION.N))
		)
		(:STEPS
			(?X_L (?X_N ((ADV-A (FOR.P (KA CRY.V))) START.V)))
			(?X_J (?X_M ((ADV-A (FROM.P ?L1)) WALK.7.V) ?X_N))
			(?X_H (?X_M (SEE.V (THAT (?X_N HUNGRY.A)))))
			(?X_F (?X_M (THAT.P (KE (?X_N HUNGRY.A)))))
			(?X_D (?X_M (BREASTF.V ?X_N)))
			(?X_B (?X_N ((ADV-A (FROM.P ?L1)) GO.32.V) (KA SLEEP.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_J)))
			(!W2 (?X_L (BEFORE ?X_H)))
			(!W3 (?X_L (BEFORE ?X_F)))
			(!W4 (?X_L (BEFORE ?X_D)))
			(!W5 (?X_L (BEFORE ?X_B)))
			(!W6 (?X_J (BEFORE ?X_H)))
			(!W7 (?X_J (BEFORE ?X_F)))
			(!W8 (?X_J (BEFORE ?X_D)))
			(!W9 (?X_J (BEFORE ?X_B)))
			(!W10 (?X_H (BEFORE ?X_D)))
			(!W11 (?X_H (BEFORE ?X_B)))
			(!W12 (?X_F (BEFORE ?X_D)))
			(!W13 (?X_F (BEFORE ?X_B)))
			(!W14 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A destination baby starts for crying."
			"A mother walk.92s a destination baby from L1."
			"A mother sees that a destination baby hungry."
			"A mother is that."
			"A mother breastfs a destination baby."
			"A destination baby go.93s sleeping from L1."
	)
)



(
	(EPI-SCHEMA ((?X_E
	              (COMPOSITE-SCHEMA-187.PR
	               (K (L X (AND (X GOLD.A) (X (PLUR EARRING.N)))))
	               (KE (?X_B EVERYDAY.A))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E AGENT.N))
		)
		(:STEPS
			(?X_D (?X_E (HAVE.V (K (L X (AND (X GOLD.A) (X (PLUR EARRING.N))))))))
			(?X_G (?X_E (WEAR.V (KE (?X_B EVERYDAY.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_G)))
		)
	)
	(
			"A agent has gold earring."
			"A agent wears X_B everyday."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-188.PR ?X_E)) ** ?E)
		(:ROLES
			(!R1 (?X_A SUN.N))
			(!R2 (?X_D MAN.N))
			(!R3 (?X_D (STILL.ADV LOST.A)))
			(!R4 (?X_E PANIC.N))
		)
		(:STEPS
			(?X_C (?X_A SET.V))
			(?X_G (?X_D (CONTROL.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_G)))
		)
	)
	(
			"A sun sets."
			"A man still lost controls a panic."
		adding constraint (I$0$224.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P CHICAGO)) FIND.31.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B MAN.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P CHICAGO)) FIND.32.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B ENTITY.N))
			(!R4 (?X_B (PLUR PERSON.N)))
			(!R5 (?X_B FEW.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-189.PR (K (TO.P (?X_B SING.V))) ?X_B
	               (K (PLUR TIP.N)) ?X_K ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K MAN.N))
			(!R2 (?X_L AGENT.N))
			(!R3 (?X_M (PLUR PERSON.N)))
			(!R4 (?X_M FEW.A))
		)
		(:STEPS
			(?X_J (?X_L (((ADV-A (IN.P ?X_A)) FIND.31.V) ?X_K)))
			(?X_J (?X_L (((ADV-A (IN.P ?X_A)) FIND.32.V) ?X_M)))
			(?X_H (?X_L ((ADV-A (WITH.P ?X_M)) SING.V)))
			(?X_F (?X_K (LISTEN.V (K (TO.P (?X_B SING.V))))))
			(?X_D (?X_K (GIVE.V ?X_B (K (PLUR TIP.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent find.134s a man in X_A."
			"A agent find.133s a persons few in X_A."
			"A agent sings with a persons few."
			"A man listens to X_B sings."
			"A man gives X_B tips."
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.10.V (KA (ASK.V ?X_B (KA (COURT.V ?X_B))))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (ASK.V ?X_B (KA (COURT.V ?X_B)))) ACTION.N))
			(!R3 (?X_A (SO.ADV EXCITED.A)))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (ASK.V ?X_B (KA (COURT.V ?X_B)))) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A (WANT.V (KA (ASK.V ?X_B (KA (COURT.V ?X_B)))))))
			(?X_C (?X_A (LIKE.V (KA (ASK.V ?X_B (KA (COURT.V ?X_B)))))))
			(?X_C (?X_A (LOVE.V (KA (ASK.V ?X_B (KA (COURT.V ?X_B)))))))
			(?X_C (?X_A (ENJOY.V (KA (ASK.V ?X_B (KA (COURT.V ?X_B)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X REQUEST_ACTION.14.V ?X_A
	              (KA (MAKE.V (KE (?X_B OFFICIAL.A)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_A AGENT.N))
			(!R3 ((KA (MAKE.V (KE (?X_B OFFICIAL.A)))) ACTION.N))
			(!R4 (NOT (?X = ?X_A)))
		)
		(:GOALS
			(?G1 (?X (WANT.V ?X_A (KA (MAKE.V (KE (?X_B OFFICIAL.A)))))))
			(?G2 (?X (WANT.V (THAT (?X (MAKE.V (KE (?X_B OFFICIAL.A))))))))
		)
		(:STEPS
			(?E1 (?X (ASK.V ?X_A (KA (MAKE.V (KE (?X_B OFFICIAL.A)))))))
			(?X_C (?X_A (MAKE.V (KE (?X_B OFFICIAL.A)))))
		)
		(:PARAPHRASES
			(?E (?X (ASK.V ?X_A (KA (MAKE.V (KE (?X_B OFFICIAL.A)))))))
			(?E (?X (TELL.V ?X_A (KA (MAKE.V (KE (?X_B OFFICIAL.A)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A MAKE.8.V (KE (?X_B OFFICIAL.A))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((KE (?X_B OFFICIAL.A)) AGENT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT ((KE (?X_B OFFICIAL.A)) EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V (KE (?X_B OFFICIAL.A)))))))
		)
		(:PRECONDS
			(?I1 (NOT ((KE (?X_B OFFICIAL.A)) EXIST.V)))
		)
		(:POSTCONDS
			(?P1 ((KE (?X_B OFFICIAL.A)) EXIST.V))
			(?P2 (?X_A (HAVE.V (KE (?X_B OFFICIAL.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-190.PR ?X_J ?X_A
	               (KA (ASK.V ?X_J (KA (COURT.V ?X_J)))) ?X_L
	               (KA (MAKE.V (KE (?X_M OFFICIAL.A)))) (KE (?X_M OFFICIAL.A))))
	             ** ?E)
		(:ROLES
			(!R1 ((KA (ASK.V ?X_J (KA (COURT.V ?X_J)))) ACTION.N))
			(!R2 (?X_K AGENT.N))
			(!R3 (?X_K (SO.ADV EXCITED.A)))
			(!R4 ((KA (MAKE.V (KE (?X_M OFFICIAL.A)))) ACTION.N))
			(!R5 (NOT (?X = ?X_L)))
			(!R6 (?X AGENT.N))
			(!R7 (?X_L AGENT.N))
			(!R8 (NOT ((KE (?X_M OFFICIAL.A)) AGENT.N)))
		)
		(:STEPS
			(?X_I (?X_K (LIKE.V ?X_J)))
			(?X_G (?X_K ENJOY_ACTION.10.V (KA (ASK.V ?X_J (KA (COURT.V ?X_J))))))
			(?X_E (?X_J (SAY.V ?X_A)))
			(?E_1 (?X REQUEST_ACTION.14.V ?X_L (KA (MAKE.V (KE (?X_M OFFICIAL.A))))))
			(?X_C (?X_L MAKE.8.V (KE (?X_M OFFICIAL.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent so excited likes X_J."
			"A agent so excited enjoy action.141s asking X_J courting X_J."
			"X_J says X_A."
			"A agent request action.139s a agent making X_M official."
			"A agent make.143s X_M official."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FALL.5.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.5.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.5.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.5.V) ?L2))
			(?X_B (?X_A (DOWN.ADV FALL.5.V)))
			(?X_B (?X_A FALL.5.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? FALL.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_D)))
			(!W7 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.15.V ?X_B (KA (IN.PRT JUMP.V))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 ((KA (IN.PRT JUMP.V)) ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B (KA (IN.PRT JUMP.V)))))
			(?G2 (?X_A (WANT.V (THAT (?X_A (IN.PRT JUMP.V))))))
		)
		(:STEPS
			(?E1 (?X_A (ASK.V ?X_B (KA (IN.PRT JUMP.V)))))
			(?E2 (?X_B (IN.PRT JUMP.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A (ASK.V ?X_B (KA (IN.PRT JUMP.V)))))
			(?X_C (?X_A (TELL.V ?X_B (KA (IN.PRT JUMP.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-191.PR (K ROPE.N) ?L2 ?X_L (KA (IN.PRT JUMP.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I {REF}.N))
			(!R2 (?X_I (OF.P ?X_J)))
			(!R3 (?X_K AGENT.N))
			(!R4 ((KA (IN.PRT JUMP.V)) ACTION.N))
			(!R5 (NOT (?X_K = ?X_L)))
			(!R6 (?X_L AGENT.N))
			(!R7 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_I (JUMP.V (K ROPE.N))))
			(?X_F (?X_K REQUEST_ACTION.15.V ?X_L (KA (IN.PRT JUMP.V))))
			(?X_D (?X_L TRY.V))
			(?X_B (?X_L ((ADV-A (FROM.P ?L1)) FALL.5.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A of X_J jumps rope."
			"A agent request action.145s a agent in jumping."
			"A agent tries."
			"A agent fall.147s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FALL.3.V) (K (RIGHT.ADV ASLEEP.A)))
	             ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (RIGHT.ADV ASLEEP.A)) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (RIGHT.ADV ASLEEP.A)))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K (RIGHT.ADV ASLEEP.A)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K (RIGHT.ADV ASLEEP.A))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K (RIGHT.ADV ASLEEP.A)))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K (RIGHT.ADV ASLEEP.A)))) FALL.3.V)))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (RIGHT.ADV ASLEEP.A)))) FALL.3.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K (RIGHT.ADV ASLEEP.A)))) FALL.3.V)
	    (K (RIGHT.ADV ASLEEP.A))))
			(?X_B (?X_A FALL.3.V))
			(?X_B (?X_A FALL.3.V (K (RIGHT.ADV ASLEEP.A))))
			(?X_B (?X_A (LOCATION_ADV.? FALL.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-192.PR (KA (WATCH.V (K TV.N)))
	               (KA (DOWN.PRT LAY.V)) (K (RIGHT.ADV ASLEEP.A))))
	             ** ?E)
		(:ROLES
			(!R1 ((K (RIGHT.ADV ASLEEP.A)) DESTINATION.N))
			(!R2 (?X_G AGENT.N))
		)
		(:STEPS
			(?X_F (?X_G (TRY.V (KA (WATCH.V (K TV.N))))))
			(?X_D (?X_G ((THEN.ADV DECIDE.V) (KA (DOWN.PRT LAY.V)))))
			(?X_B (?X_G ((ADV-A (FROM.P ?L1)) FALL.3.V) (K (RIGHT.ADV ASLEEP.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent tries watching tv."
			"A agent decides down laying then."
			"A agent fall.150s right asleep from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B FEED.9.V ?X_D ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_D AGENT.N))
			(!R3 (?X_C FOOD.N))
			(!R4 (NOT (?X_B = ?X_D)))
			(!R5 (NOT (?X_D = ?X_C)))
			(!R6 (NOT (?X_B = ?X_C)))
			(!R7 (?X_D (PLUR CAT.N)))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
			(!R9 (?X_A WIFE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (NOT (?X_D HUNGRY.A))))))
			(?G2 (?X_B (WANT.V (THAT (?X_D EAT.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?X_C))
			(?I2 (?X_D HUNGRY.A))
		)
		(:STEPS
			(?E1 (?X_D EAT.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (HAVE.V ?X_C))))
			(?P2 (NOT (?X_D HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?E1 AFTER ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (FROM.P (K WORK.N))) GET.20.V) (K HOME.N))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K HOME.N) AGENT.N)))
			(!R3 (NOT ((K HOME.N) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (K HOME.N))))
			(!R6 (?X_A WIFE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (K HOME.N)))))))
			(?G2 (?X_B (NEED.V (K HOME.N))))
			(?G3 (?X_B (WANT.V (K HOME.N))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K HOME.N))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K HOME.N) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K HOME.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((BACK.ADV TAKE.13.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C FOOD.N))
			(!R7 (?X_A WIFE.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-193.PR (K (QUITE.ADV HUNGRY.A)) ?X_J (K HOME.N)
	               ?X_L))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I WIFE.N))
			(!R2 (?X_I (PERTAIN-TO ?X_K)))
			(!R3 (NOT ((K HOME.N) AGENT.N)))
			(!R4 (NOT ((K HOME.N) ACTION.N)))
			(!R5 (NOT (?X_K = (K HOME.N))))
			(!R6 (?X_J (PLUR CAT.N)))
			(!R7 (NOT (?X_K = ?X_J)))
			(!R8 (NOT (?X_J = ?X_L)))
			(!R9 (?X_K AGENT.N))
			(!R10 (?X_L FOOD.N))
			(!R11 (NOT (?X_L AGENT.N)))
			(!R12 (NOT (?X_L ACTION.N)))
			(!R13 (NOT (?X_K = ?X_L)))
		)
		(:STEPS
			(?X_H (?X_K (((ADV-A (FROM.P (K WORK.N))) GET.20.V) (K HOME.N))))
			(?X_F (?X_J (SEEM.V (K (QUITE.ADV HUNGRY.A)))))
			(?X_D (?X_K FEED.9.V ?X_J ?X_L))
			(?X_B (?X_K ((BACK.ADV TAKE.13.V) ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent get.158s home from work."
			"A cats seem quite hungry."
			"A agent feed.156s a cats a food."
			"A agent take.159s a food back."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) CHASE.1.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A HUNGRY.A))
			(!R6 (?X_B RABBIT.N))
			(!R7 (?X_B (OUTRAN.V ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) CHASE.1.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) CHASE.1.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) CHASE.1.V) ?X_B))
			(?X_C (?X_A CHASE.1.V))
			(?X_C (?X_A CHASE.1.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? CHASE.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-194.PR ?X_G)) ** ?E)
		(:ROLES
			(!R1 (?X_H MAN.N))
			(!R2 (?X_H HUNGRY.A))
			(!R3 (?X_G DESTINATION.N))
			(!R4 (?X_G RABBIT.N))
			(!R5 (?X_G (OUTRAN.V ?X_H)))
		)
		(:STEPS
			(?X_F (?X_H (SEE.V ?X_G)))
			(?X_D (?X_H ((ADV-A (FROM.P ?L1)) CHASE.1.V) ?X_G))
			(?X_B (?X_H (DOWN.ADV ((ADV-A (IN.P (K DEFEAT.N))) SIT.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man hungry sees a destination rabbit outran a man hungry."
			"A man hungry chase.164s a destination rabbit outran a man hungry from L1."
			"A man hungry sits down in defeat."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.13.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MOUSE.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A LIVING.N))
			(!R6 (?X_A ROOM.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.13.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.13.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.13.V) ?L2))
			(?X_C (?X_B ((ADV-A (ACROSS.P ?X_A)) RUN.13.V)))
			(?X_C (?X_B RUN.13.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.13.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.21.V (K (PASV STARTLE.V))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MOUSE.N))
			(!R2 (NOT ((K (PASV STARTLE.V)) AGENT.N)))
			(!R3 (NOT ((K (PASV STARTLE.V)) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K (PASV STARTLE.V)))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (K (PASV STARTLE.V))))))))
			(?G2 (?X_A (NEED.V (K (PASV STARTLE.V)))))
			(?G3 (?X_A (WANT.V (K (PASV STARTLE.V)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K (PASV STARTLE.V)))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K (PASV STARTLE.V)) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K (PASV STARTLE.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B GET.22.V (K (PASV STARTLE.V))) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (NOT ((K (PASV STARTLE.V)) AGENT.N)))
			(!R3 (NOT ((K (PASV STARTLE.V)) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (K (PASV STARTLE.V)))))
			(!R6 (?X_A ROOM.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (K (PASV STARTLE.V))))))))
			(?G2 (?X_B (NEED.V (K (PASV STARTLE.V)))))
			(?G3 (?X_B (WANT.V (K (PASV STARTLE.V)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K (PASV STARTLE.V)))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K (PASV STARTLE.V)) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K (PASV STARTLE.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P (COMPOSITE-SCHEMA-195.PR ?X_N ?L2 (K (PASV STARTLE.V)))) ** ?E)
		(:ROLES
			(!R1 (?X_N ROOM.N))
			(!R2 (?X_H LIVING.N))
			(!R3 (?X_H ROOM.N))
			(!R4 (?X_M LIGHT.N))
			(!R5 (?X_N (PERTAIN-TO ?X_P)))
			(!R6 (NOT (?X_O = (K (PASV STARTLE.V)))))
			(!R7 (?X_O MOUSE.N))
			(!R8 (?L2 DESTINATION.N))
			(!R9 (?X_P MAN.N))
			(!R10 (NOT ((K (PASV STARTLE.V)) AGENT.N)))
			(!R11 (NOT ((K (PASV STARTLE.V)) ACTION.N)))
			(!R12 (NOT (?X_P = (K (PASV STARTLE.V)))))
		)
		(:STEPS
			(?X_L (?X_P ((ADV-A (ON.P ?X_M)) TURN.V)))
			(?X_C (?X_P (IN.P ?X_N)))
			(?X_J (?X_O GET.21.V (K (PASV STARTLE.V))))
			(?X_G (?X_O ((ADV-A (FROM.P ?L1)) RUN.13.V) ?L2))
			(?X_E (?X_P GET.22.V (K (PASV STARTLE.V))))
			(?X_A (?X_P ((ADV-A (IN.P ?X_N)) HIDE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_J)))
			(!W2 (?X_L (BEFORE ?X_G)))
			(!W3 (?X_L (BEFORE ?X_E)))
			(!W4 (?X_L (BEFORE ?X_A)))
			(!W5 (?X_C (BEFORE ?X_A)))
			(!W6 (?X_J (BEFORE ?X_G)))
			(!W7 (?X_J (BEFORE ?X_E)))
			(!W8 (?X_J (BEFORE ?X_A)))
			(!W9 (?X_G (BEFORE ?X_E)))
			(!W10 (?X_G (BEFORE ?X_A)))
			(!W11 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A man turns on a light."
			"A man is in."
			"A mouse get.187s PASV startles."
			"A mouse run.189s a destination from L1."
			"A man get.188s PASV startles."
			"A man hides in a room of a man."
	)
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-196.PR ?X_K ?X_H)) ** ?E)
		(:ROLES
			(!R1 (?X_K FAVORITE.A))
			(!R2 (?X_H DOLL.N))
			(!R3 (?X_K (PERTAIN-TO ?X_L)))
		)
		(:STEPS
			(?X_E (?X_A (HAVE.V ?X_H)))
			(?X_C (?X_H (BE.V ?X_K)))
			(?X_G (?X_H (BE.V ?X_K)))
			(?X_J (?X_B (BREAK.V ?X_H)))
			(?X_N (?X_L CRY.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_C)))
			(!W2 (?X_E (BEFORE ?X_G)))
			(!W3 (?X_E (BEFORE ?X_J)))
			(!W4 (?X_E (BEFORE ?X_N)))
			(!W5 (?X_C (BEFORE ?X_G)))
			(!W6 (?X_C (BEFORE ?X_J)))
			(!W7 (?X_C (BEFORE ?X_N)))
			(!W8 (?X_G (BEFORE ?X_J)))
			(!W9 (?X_G (BEFORE ?X_N)))
			(!W10 (?X_J (BEFORE ?X_N)))
		)
	)
	(
			"X_A has a doll."
			"A doll is a favorite of X_L."
			"A doll is a favorite of X_L."
			"X_B breaks a doll."
			"X_L cries."
		adding constraint (I$10$400.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (FROM.P (K HOME.N))) TAKE.14.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PLUR BOOK.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-197.PR (K SCHOOL.N) ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_D (MOST.ADV RELAXING.A)))
			(!R2 (?X_D DAY.N))
			(!R3 (?X_G BEAN.N))
			(!R4 (?X_G BAG.N))
			(!R5 ((ADV-E (DURING ?X_L)) (?X_M IN.P)))
			(!R6 (?X_M READ.N))
			(!R7 (?X_N AGENT.N))
			(!R8 (?X_P (PLUR BOOK.N)))
			(!R9 (?X_O AGENT.N))
			(!R10 (NOT (?X_P AGENT.N)))
			(!R11 (NOT (?X_P ACTION.N)))
			(!R12 (NOT (?X_O = ?X_P)))
		)
		(:STEPS
			(?X_K (?X_N ?X_M (HAVE.V (K SCHOOL.N))))
			(?X_I (?X_O (((ADV-A (FROM.P (K HOME.N))) TAKE.14.V) ?X_P)))
			(?X_F (?X_O ((ADV-A (IN.P ?X_G)) SIT.V)))
			(?X_C ((ADV-E (DURING ?X_D)) (?X_A (EVER.ADV BE.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_C)))
			(!W4 (?X_I (BEFORE ?X_F)))
			(!W5 (?X_I (BEFORE ?X_C)))
			(!W6 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent has school."
			"A agent take.225s a books from home."
			"A agent sits in a bean bag."
			"X_A is DURING a most relaxing day ever."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.14.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.14.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.14.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.14.V) ?L2))
			(?X_B (?X_A (QUICKLY.ADV (AWAY.PRT RUN.14.V))))
			(?X_B (?X_A RUN.14.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? RUN.14.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-198.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_E FENCE.N))
			(!R2 (?X_F (PERTAIN-TO ?X_G)))
			(!R3 (?X_H AGENT.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_D (?X_G ((ADV-A (BEHIND.P ?X_E)) BE.V)))
			(?X_B (?X_H ((ADV-A (FROM.P ?L1)) RUN.14.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_C ENJOY_ACTION.11.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))) **
	             ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 ((KA ((ADV-A (WITH.P ?X_D)) PLAY.V)) ACTION.N))
			(!R3 (?X_D (K PET.A) (PLUR KITTEN.N)))
			(!R4 (?X_D (PERTAIN-TO ?X_C)))
			(!R5 (?X_A (PERTAIN-TO ?X_C)))
			(!R6 (?X_A (K PET.A) (PLUR KITTEN.N)))
			(!R7 (?X_B MOTHER.N))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:PRECONDS
			(?I1 (?X_C (THINK.V (THAT ((KA ((ADV-A (WITH.P ?X_D)) PLAY.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C (WANT.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
			(?X_E (?X_C (LIKE.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
			(?X_E (?X_C (LOVE.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
			(?X_E (?X_C (ENJOY.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C INFORM.3.V ?X_D ?I) ** ?X_E)
		(:ROLES
			(!R1 (?X_C MOTHER.N))
			(!R2 (?X_D AGENT.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_C (PERTAIN-TO ?X_D)))
			(!R6 (?X_A (K PET.A) (PLUR KITTEN.N)))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_B (K PET.A) (PLUR KITTEN.N)))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_D (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_E (?X_C TELL.V ?X_D ?I))
			(?X_E (?X_C LET.V ?X_D (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_H (AT-ABOUT ?X_F)))
			(!W3 (?X_G (AFTER ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D INFORM.4.V (K PET.A) ?I) ** ?X_E)
		(:ROLES
			(!R1 (?X_D MOTHER.N))
			(!R2 ((K PET.A) AGENT.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_C AGENT.N))
			(!R6 (?X_D (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_A (K PET.A) (PLUR KITTEN.N)))
			(!R9 (?X_B (K PET.A) (PLUR KITTEN.N)))
			(!R10 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT ((K PET.A) (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 ((K PET.A) (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_E (?X_D TELL.V (K PET.A) ?I))
			(?X_E (?X_D LET.V (K PET.A) (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_H (AT-ABOUT ?X_F)))
			(!W3 (?X_G (AFTER ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D TAKE.15.V
	              (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))))
	             ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2
	   (NOT
	    ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))) AGENT.N)))
			(!R3
	   (NOT
	    ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5
	   (NOT (?X_D = (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))))))
			(!R6 (?X_A (K PET.A) (PLUR KITTEN.N)))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_B (K PET.A) (PLUR KITTEN.N)))
			(!R10 (?X_C (PERTAIN-TO ?X_D)))
			(!R11 (?X_C MOTHER.N))
		)
		(:GOALS
			(?G1
	   (?X_D
	    (WANT.V
	     (THAT
	      (?X_D
	       (HAVE.V
	        (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A))))))))))
			(?G2
	   (?X_D
	    (NEED.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))))))
			(?G3
	   (?X_D
	    (WANT.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))))))
		)
		(:PRECONDS
			(?I1
	   (NOT
	    (?X_D HAVE.V
	     (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))))))
			(?I2 (?X_D (AT.P ?L)))
			(?I3
	   ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1
	   (?X_D HAVE.V (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?I2 PRECOND-OF ?X_F))
			(!W3 (?I3 PRECOND-OF ?X_F))
			(!W4 (?P1 POSTCOND-OF ?X_F))
			(!W5 (?X_F (AFTER ?X_G)))
			(!W6 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-199.PR ?X_H (KE (?X_O SAY.V))
	               (KA ((ADV-A (WITH.P ?X_N)) PLAY.V)) ?X_P (K PET.A) ?I
	               (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H NEW.A))
			(!R2 (?X_H BOOK.N))
			(!R3 (?X_K (K PET.A) (PLUR KITTEN.N)))
			(!R4 (?X_K (PERTAIN-TO ?X_P)))
			(!R5 (?X_N (K PET.A) (PLUR KITTEN.N)))
			(!R6 (?X_N (PERTAIN-TO ?X_P)))
			(!R7 ((KA ((ADV-A (WITH.P ?X_N)) PLAY.V)) ACTION.N))
			(!R8 (?X_O (PERTAIN-TO ?X_P)))
			(!R9 (?X_O MOTHER.N))
			(!R10 ((K PET.A) AGENT.N))
			(!R11 (NOT (?I ACTION.N)))
			(!R12 (?I INFORMATION.N))
			(!R13 (?X_P AGENT.N))
			(!R14
	   (NOT
	    ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))) AGENT.N)))
			(!R15
	   (NOT
	    ((KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))) ACTION.N)))
			(!R16
	   (NOT (?X_P = (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A)))))))
		)
		(:STEPS
			(?X_G (?X_O (GIVE.V ?X_P ?X_H)))
			(?X_B (?X_P ENJOY_ACTION.11.V (KA ((ADV-A (WITH.P ?X_N)) PLAY.V))))
			(?X_A (?X_P (AS.P (KE (?X_O SAY.V)))))
			(?X_E (?X_O INFORM.3.V ?X_P ?I))
			(?X_E (?X_O INFORM.4.V (K PET.A) ?I))
			(?X_C
	   (?X_P TAKE.15.V
	    (KE ((K (L X (AND (X GOOD.A) (X CARE.N)))) (OF.P (K PET.A))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_B)))
			(!W2 (?X_G (BEFORE ?X_A)))
			(!W3 (?X_G (BEFORE ?X_E)))
			(!W4 (?X_G (BEFORE ?X_C)))
			(!W5 (?X_B (BEFORE ?X_A)))
			(!W6 (?X_B (BEFORE ?X_E)))
			(!W7 (?X_B (BEFORE ?X_C)))
			(!W8 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"X_G is behind a fence."
			"A agent run.1s a destination from L1."
		adding constraint (ME$0$38.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.15.V)
	              (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))))))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A PHONE.N))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V
	     (KA
	      ((ADV-A (AT.P (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.? (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))
	     RUN.15.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.? (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))
	      RUN.15.V))))
			(?X_D
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.? (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))
	     RUN.15.V)
	    (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))
			(?X_D (?X_B RUN.15.V))
			(?X_D (?X_B RUN.15.V (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))
			(?X_D (?X_B (LOCATION_ADV.? RUN.15.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) WALK.8.V) (TEN.D (PLUR MILE.N))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((TEN.D (PLUR MILE.N)) DESTINATION.N))
			(!R4 (NOT (?L1 = (TEN.D (PLUR MILE.N)))))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A PHONE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (TEN.D (PLUR MILE.N)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (TEN.D (PLUR MILE.N))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (TEN.D (PLUR MILE.N)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (TEN.D (PLUR MILE.N)))) WALK.8.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (TEN.D (PLUR MILE.N)))) WALK.8.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (TEN.D (PLUR MILE.N)))) WALK.8.V)
	    (TEN.D (PLUR MILE.N))))
			(?X_C (?X_B WALK.8.V))
			(?X_C (?X_B WALK.8.V (TEN.D (PLUR MILE.N))))
			(?X_C (?X_B (LOCATION_ADV.? WALK.8.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FIND.33.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C GAS.N))
			(!R4 (?X_C STATION.N))
			(!R5 (?X_A PHONE.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-200.PR (KA ((ADV-A (FOR.P (K HELP.N))) CALL.V))
	               (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))
	               (TEN.D (PLUR MILE.N)) ?X_L))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I PHONE.N))
			(!R2 (?X_I (PERTAIN-TO ?X_K)))
			(!R3 ((K (L X (AND (X OUT.P) (X (OF.P (K GAS.N)))))) DESTINATION.N))
			(!R4 ((TEN.D (PLUR MILE.N)) DESTINATION.N))
			(!R5 (?X_K MAN.N))
			(!R6 (?X_L STATION.N))
			(!R7 (?X_L GAS.N))
		)
		(:STEPS
			(?X_H
	   (?X_K ((ADV-A (FROM.P ?L1)) RUN.15.V)
	    (K (L X (AND (X OUT.P) (X (OF.P (K GAS.N))))))))
			(?X_F (?X_K (TRY.V (KA ((ADV-A (FOR.P (K HELP.N))) CALL.V)))))
			(?X_D (?X_K ((ADV-A (FROM.P ?L1)) WALK.8.V) (TEN.D (PLUR MILE.N))))
			(?X_B (?X_K FIND.33.V ?X_L))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A mother of a agent gives a agent a new book."
			"A agent enjoy action.27s with a of a agent playing."
			"A agent is as."
			"A mother of a agent inform.22s a agent a information."
			"A mother of a agent inform.24s pet a information."
			"A agent take.19s good care of pet."
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_D)) PUT.5.V) (K HAY.N))) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT ((K HAY.N) AGENT.N)))
			(!R3 (?X_D CONTAINER.N))
			(!R4 (NOT (?X_D AGENT.N)))
			(!R5 ((K HAY.N) SMALLER-THAN ?X_D))
			(!R6 (?X_C (HAS.V (SET-OF (TWO.D (PLUR FOX.N)) (TWO.D (PLUR BOX.N))))))
			(!R7
	   (?X_D
	    (ARE.V (KE ((K (L X (AND (X GOOD.A) (X (PLUR HOUSE.N))))) (FOR.P ?X_B))))))
			(!R8 (?X_D (PLUR BOX.N)))
			(!R9 (?X_B (PLUR FOX.N)))
			(!R10 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT ((K HAY.N) (IN.P ?X_D))))))
		)
		(:PRECONDS
			(?I1 (NOT ((K HAY.N) (IN.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 ((K HAY.N) (IN.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E (?X_C ((ADV-A (INTO.P ?X_D)) PUT.5.V) (K HAY.N)))
			(?X_E (?X_C ((ADV-A (INSIDE.P ?X_D)) PUT.5.V) (K HAY.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-201.PR (SET-OF ?X_K ?X_J) (EACH.D FOX.N) ?X_A
	               (K HAY.N)))
	             ** ?E)
		(:ROLES
			(!R1
	   (?X_P
	    (ARE.V (KE ((K (L X (AND (X GOOD.A) (X (PLUR HOUSE.N))))) (FOR.P ?X_N))))))
			(!R2 (?X_J (IN.P (K (L X (AND (X FRONT.N) (X (OF.P ?X_I))))))))
			(!R3 (?X_J FOX.N))
			(!R4 (?X_K FOX.N))
			(!R5 (?X_K (ON.P ?X_L)))
			(!R6 (?X_M AGENT.N))
			(!R7 (?X_N (PLUR FOX.N)))
			(!R8 (?X_N (PERTAIN-TO ?X_O)))
			(!R9 ((K HAY.N) SMALLER-THAN ?X_P))
			(!R10 (?X_P (PLUR BOX.N)))
			(!R11 (?X_O AGENT.N))
			(!R12 (?X_O (HAS.V (SET-OF (TWO.D (PLUR FOX.N)) (TWO.D (PLUR BOX.N))))))
			(!R13 (NOT ((K HAY.N) AGENT.N)))
			(!R14 (NOT (?X_P AGENT.N)))
		)
		(:STEPS
			(?X_G (?X_M (SEE.V (SET-OF ?X_K ?X_J))))
			(?X_E (?X_O (GIVE.V (EACH.D FOX.N) ?X_A)))
			(?X_C (?X_O (((ADV-A (IN.P ?X_P)) PUT.5.V) (K HAY.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
		)
	)
	(
			"A man run.33s out of from L1."
			"A man tries for help calling."
			"A man walk.35s ten miles from L1."
			"A man find.36s a station gas."
	)
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?X_D)) RUN.1.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_D PARK.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_D = ?L2)))
			(!R5 (?X_C (K OTHER.A) FRIEND.N))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_A AGENT.N))
			(!R8 (?X_B RUN.N))
			(!R9 (?X_B (AT.P ?X_D)))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?X_D)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?X_D))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.1.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?X_D)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.1.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.1.V) ?L2))
			(?X_F (?X_E ((ADV-A (WITH.P ?X_C)) RUN.1.V)))
			(?X_F (?X_E RUN.1.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? RUN.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) GO.33.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_D RUN.N))
			(!R6 (?X_C DAY.N))
			(!R7 (?X_A PARK.N))
			(!R8 (?X_D (AT.P ?X_A)))
			(!R9 (?X_B (PERTAIN-TO ?X_E)))
			(!R10 (?X_B (K OTHER.A) FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) GO.33.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.33.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) GO.33.V) ?L2))
			(?X_F ((ADV-E (DURING ?X_C)) (?X_E ((ADV-A (ON.P ?X_D)) GO.33.V))))
			(?X_F (?X_E GO.33.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? GO.33.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-202.PR (K (L X (AND (X EARLY.A) (X MORNING.N))))
	               ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I (K OTHER.A) FRIEND.N))
			(!R2 (?X_K RUN.N))
			(!R3 (?X_I (PERTAIN-TO ?X_L)))
			(!R4 (?X_J DAY.N))
			(!R5 (?X_K (AT.P ?X_N)))
			(!R6 (?X_L AGENT.N))
			(!R7 (?X_M AGENT.N))
			(!R8 (?X_N PARK.N))
			(!R9 (NOT (?X_N = ?L2)))
			(!R10 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_L ((ADV-A (FROM.P ?L1)) GO.33.V) ?L2))
			(?X_F (?X_A (BE.V (K (L X (AND (X EARLY.A) (X MORNING.N)))))))
			(?X_D (?X_M ((ADV-A (FROM.P ?X_N)) RUN.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent sees a fox on X_L and a in front of fox."
			"A agent has two foxs and two boxs gives each fox X_A."
			"A agent has two foxs and two boxs put.56s hay in a are good house for a foxs of a agent has two foxs and two boxs boxs."
		adding constraint (I$0$93.SK AGENT.N)
		adding constraint (SHE$23$94.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) CHASE.2.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A CAT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) CHASE.2.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) CHASE.2.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) CHASE.2.V) ?L2))
			(?X_C (?X_B ((ADV-A (AFTER.P ?X_A)) CHASE.2.V)))
			(?X_C (?X_B CHASE.2.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? CHASE.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.16.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A CAT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.16.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.16.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.16.V) ?L2))
			(?X_C (?X_B (AWAY.PRT ((ADV-A (AFTER.P ?X_A)) RUN.16.V))))
			(?X_C (?X_B RUN.16.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.16.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-203.PR ?X_M ?X_I (KA ((ADV-A (OF.P ?X_M)) GO.V))
	               ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I CAT.N))
			(!R2 (?X_L BOY.N))
			(!R3 (?X_M DOG.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_K (?X_L (WALK.V ?X_M)))
			(?X_H (?X_M (SEE.V ?X_I)))
			(?X_F (?X_M ((ADV-A (FROM.P ?L1)) CHASE.2.V) ?L2))
			(?X_D (MUST.AUX-S (?X_L (LET.V (KA ((ADV-A (OF.P ?X_M)) GO.V))))))
			(?X_B (?X_M ((ADV-A (FROM.P ?L1)) RUN.16.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_H (BEFORE ?X_F)))
			(!W6 (?X_H (BEFORE ?X_D)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.70s a destination from L1."
			"X_A is early morning."
			"A agent run.73s a destination from a park."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.27.V (K (L X (AND (X LITTLE.A) (X LUCY.N))))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K (L X (AND (X LITTLE.A) (X LUCY.N)))) ACTION.N)))
			(!R3 (NOT ((K (L X (AND (X LITTLE.A) (X LUCY.N)))) AGENT.N)))
			(!R4 ((K (L X (AND (X LITTLE.A) (X LUCY.N)))) OBJECT.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V (K (L X (AND (X LITTLE.A) (X LUCY.N)))))))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V (K (L X (AND (X LITTLE.A) (X LUCY.N))))))
			(?X_C (?X_A (WANT.V (K (L X (AND (X LITTLE.A) (X LUCY.N)))))))
			(?X_C (?X_A (LIKE.27.V (K (L X (AND (X LITTLE.A) (X LUCY.N)))))))
			(?X_C (?X_A (LOVE.V (K (L X (AND (X LITTLE.A) (X LUCY.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C
	              (COMPOSITE-SCHEMA-204.PR (K (L X (AND (X LITTLE.A) (X LUCY.N))))))
	             ** ?E)
		(:ROLES
			(!R1 ((K (L X (AND (X LITTLE.A) (X LUCY.N)))) OBJECT.N))
			(!R2 (?X_C AGENT.N))
			(!R3 (NOT ((K (L X (AND (X LITTLE.A) (X LUCY.N)))) ACTION.N)))
			(!R4 (NOT ((K (L X (AND (X LITTLE.A) (X LUCY.N)))) AGENT.N)))
		)
		(:STEPS
			(?X_B (?X_C LIKE.27.V (K (L X (AND (X LITTLE.A) (X LUCY.N))))))
		)
	)
	(
			"A boy walks a dog."
			"A dog sees a cat."
			"A dog chase.91s a destination from L1."
			"A boy lets of a dog going must."
			"A dog run.92s a destination from L1."
		adding constraint (SHE$7$117.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.16.V ?X_B ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A BIRD.N))
			(!R2 (?X_B WORM.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_C DESTINATION.N))
			(!R6 (?X_C NEST.N))
			(!R7 (?X_C (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?X_C)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?X_C)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_C)) TAKE.V) ?X_B)))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) CARRY.V) ?X_B))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) BRING.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (SAME-TIME ?X_G)))
			(!W4 (?X_D (RIGHT-AFTER ?X_E)))
			(!W5 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-205.PR (ANOTHER.D WORM.N) ?X_L ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_F (STILL.ADV HUNGRY.A)))
			(!R2 (?X_F BABY.N))
			(!R3 (?X_F BIRD.N))
			(!R4 (?X_K DESTINATION.N))
			(!R5 (?X_K NEST.N))
			(!R6 (?X_K (PERTAIN-TO ?X_M)))
			(!R7 (?X_L SMALLER-THAN.N ?X_M))
			(!R8 (?X_L WORM.N))
			(!R9 (?X_M BIRD.N))
		)
		(:STEPS
			(?X_J (?X_M (CATCH.V ?X_L)))
			(?X_H (?X_M ?X_L (TO.P ?X_K)))
			(?X_A (?X_M TRANSPORT_OBJECT.16.V ?X_L ?X_K))
			(?X_E (?X_M (((ADV-A (TO.P ?X_F)) FED.V) ?X_L)))
			(?X_C (?X_M (CATCH.V (ANOTHER.D WORM.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_C)))
			(!W4 (?X_H (BEFORE ?X_A)))
			(!W5 (?X_H (BEFORE ?X_E)))
			(!W6 (?X_H (BEFORE ?X_C)))
			(!W7 (?X_A (BEFORE ?X_E)))
			(!W8 (?X_A (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent like.106s little lucy."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) COME.8.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?X_A PARK.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?X_A = ?X_C)))
			(!R5 (?X_B LITTLE.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) COME.8.V))))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?X_C)) COME.8.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) COME.8.V) ?X_C))
			(?X_D (?X_B COME.8.V))
			(?X_D (?X_B COME.8.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? COME.8.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (FROM.P LUCY.NAME)) TAKE.16.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?X_A PARK.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_B LITTLE.A))
			(!R7 (?X_C BALL.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 (?X_C (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-206.PR ?X_K ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_K DESTINATION.N))
			(!R2 (?X_J PARK.N))
			(!R3 (NOT (?X_J = ?X_K)))
			(!R4 (?X_M BALL.N))
			(!R5 (?X_L LITTLE.A))
			(!R6 (?X_L BOY.N))
			(!R7 (NOT (?X_M AGENT.N)))
			(!R8 (NOT (?X_M ACTION.N)))
			(!R9 (NOT (?X_L = ?X_M)))
		)
		(:STEPS
			(?X_I (?X_L ((ADV-A (FROM.P ?X_J)) COME.8.V) ?X_K))
			(?X_G (?X_L (((ADV-A (FROM.P ?X_A)) TAKE.16.V) ?X_M)))
			(?X_E (?X_L (KA KICK.V) ?X_M (((ADV (FAR.ADV AWAY.A)) FROM.P) ?X_K)))
			(?X_C (?X_A ((ADV-A (FOR.P (KA CRY.V))) START.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A bird catches a worm."
			"A bird is to."
			"A bird transport object.111s a worm a destination nest of a bird."
			"A bird fed a worm to a still hungry baby bird."
			"A bird catches another worm."
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.12.V (KA HELP.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 ((KA HELP.V) ACTION.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA HELP.V) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_B (?X_A (WANT.V (KA HELP.V))))
			(?X_B (?X_A (LIKE.V (KA HELP.V))))
			(?X_B (?X_A (LOVE.V (KA HELP.V))))
			(?X_B (?X_A (ENJOY.V (KA HELP.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-207.PR ?X_F ?X_L
	               (KA (STAY.V (L X (AND (X OUT.P) (X (OF.P (THE.D WAY.N)))))))
	               (KA HELP.V)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F (PLUR COP.N)))
			(!R2 (?X_K TRAGEDY.N))
			(!R3 (?X_L MAN.N))
			(!R4 ((KA HELP.V) ACTION.N))
		)
		(:STEPS
			(?X_J (?X_L ((ADV-A (ABOUT.P ?X_K)) HEAR.V)))
			(?X_E (?X_L (CALL.V ?X_F)))
			(?X_C
	   (?X_F
	    (TELL.V ?X_L (KA (STAY.V (L X (AND (X OUT.P) (X (OF.P (THE.D WAY.N))))))))))
			(?X_H (?X_L ENJOY_ACTION.12.V (KA HELP.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_E)))
			(!W2 (?X_J (BEFORE ?X_C)))
			(!W3 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A little boy come.143s a destination from a park."
			"A little boy take.141s a ball from X_A."
			"A little boy is ADV far away from."
			"X_A starts for crying."
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.17.V ?X_B ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?X_B CAT.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_C DESTINATION.N))
			(!R6 (?X_C VET.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?X_C)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?X_C)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_C)) TAKE.V) ?X_B)))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) CARRY.V) ?X_B))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) BRING.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.23.V (K BETTER.A)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A CAT.N))
			(!R2 (NOT ((K BETTER.A) AGENT.N)))
			(!R3 (NOT ((K BETTER.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K BETTER.A))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (K BETTER.A)))))))
			(?G2 (?X_A (NEED.V (K BETTER.A))))
			(?G3 (?X_A (WANT.V (K BETTER.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K BETTER.A))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K BETTER.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K BETTER.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-208.PR (KE (?X_N SICK.A)) ?X_G ?X_N ?X_L
	               (K BETTER.A)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G MEDICINE.N))
			(!R2 (?X_L DESTINATION.N))
			(!R3 (?X_L VET.N))
			(!R4 (?X_N SMALLER-THAN.N ?X_M))
			(!R5 (?X_M MAN.N))
			(!R6 (?X_N CAT.N))
			(!R7 (NOT ((K BETTER.A) AGENT.N)))
			(!R8 (NOT ((K BETTER.A) ACTION.N)))
			(!R9 (NOT (?X_N = (K BETTER.A))))
		)
		(:STEPS
			(?X_K (?X_M TRANSPORT_OBJECT.17.V ?X_N ?X_L))
			(?X_I (?X_L (CALL.V (KE (?X_N SICK.A)))))
			(?X_F (?X_M (GET.V ?X_G)))
			(?X_D (?X_N (TAKE.V ?X_G)))
			(?X_B (?X_N GET.23.V (K BETTER.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_F)))
			(!W6 (?X_I (BEFORE ?X_D)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man hears about a tragedy."
			"A man calls a cops."
			"A cops tell a man staying out of."
			"A man enjoy action.157s helping."
	)
)



(
	(EPI-SCHEMA ((?X_A (GIVE.8.V ?X_B ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_B WOMAN.N))
			(!R4 (?X_A MALE.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?X_C))
			(?I2 (NOT (?X_B HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A HAVE.V ?X_C)))
			(?P2 (?X_B HAVE.V ?X_C))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_B)) GIVE.8.V) ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.24.V (K MAD.A)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A WOMAN.N))
			(!R2 (NOT ((K MAD.A) AGENT.N)))
			(!R3 (NOT ((K MAD.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K MAD.A))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (K MAD.A)))))))
			(?G2 (?X_A (NEED.V (K MAD.A))))
			(?G3 (?X_A (WANT.V (K MAD.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K MAD.A))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K MAD.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K MAD.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-209.PR ?X_L ?X_S ?X_R (K MAD.A))) ** ?E)
		(:ROLES
			(!R1 (?X_E FEMALE.A))
			(!R2 (?X_E AGENT.N))
			(!R3 (?X_D (PERTAIN-TO ?X_E)))
			(!R4 (?X_L ROSE.N))
			(!R5 (?X_M MAN.N))
			(!R6 (?X_P ROSEBUSH.N))
			(!R7 (?X_Q AGENT.N))
			(!R8 (?X_Q MALE.A))
			(!R9 (NOT (?X_R AGENT.N)))
			(!R10 (?X_S WOMAN.N))
			(!R11 (NOT ((K MAD.A) AGENT.N)))
			(!R12 (NOT ((K MAD.A) ACTION.N)))
			(!R13 (NOT (?X_S = (K MAD.A))))
		)
		(:STEPS
			(?X_O (?X_P BLOOM.V))
			(?X_K (?X_M (CUT.V ?X_L)))
			(?X_C (NOT (?X_E (LIKE.V ?X_S))))
			(?X_I (?X_Q (GIVE.8.V ?X_S ?X_R)))
			(?X_G (?X_S GET.24.V (K MAD.A)))
			(?X_A (NOT (?X_E (LIKE.V ?X_S))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_K)))
			(!W2 (?X_O (BEFORE ?X_I)))
			(!W3 (?X_O (BEFORE ?X_G)))
			(!W4 (?X_O (BEFORE ?X_A)))
			(!W5 (?X_K (BEFORE ?X_I)))
			(!W6 (?X_K (BEFORE ?X_G)))
			(!W7 (?X_K (BEFORE ?X_A)))
			(!W8 (?X_C (BEFORE ?X_A)))
			(!W9 (?X_I (BEFORE ?X_G)))
			(!W10 (?X_I (BEFORE ?X_A)))
			(!W11 (?X_G (BEFORE ?X_A)))
		)
	)
	(
			"A man transport object.161s a cat a destination vet."
			"A destination vet calls a cat sick."
			"A man gets a medicine."
			"A cat takes a medicine."
			"A cat get.160s better."
	)
)



(
	(EPI-SCHEMA ((?X_F (((ADV-A (UNDER.P ?X_A)) FIND.34.V) ?X_G)) ** ?X_I)
		(:ROLES
			(!R1 (?X_F DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_G SHADE.N))
			(!R4 (?X_A CART.N))
			(!R5 (?X_F (PERTAIN-TO ?X_C)))
			(!R6 (?X_C AGENT.N))
			(!R7 (?X_B (PERTAIN-TO ?X_C)))
			(!R8 (?X_B KITE.N))
			(!R9 (?X_D (PERTAIN-TO ?X_C)))
			(!R10 (?X_D (PLUR EYE.N)))
			(!R11 (?X_E HIGH.A))
			(!R12 (?X_E FENCE.N))
			(!R13 (?X_G (OF.P ?X_E)))
		)
		(:PRECONDS
			(?I1 (?X_F (AT.P ?L)))
			(?I2 (?X_G (AT.P ?L)))
			(?I3 (?X_F ((ADV-A (FOR.P ?X_G)) SEARCH.V)))
			(?I4 (NOT (?X_F (KNOW.V (THAT (?X_G (AT.P ?L)))))))
			(?I5 (NOT (?X_F (HAVE.V ?X_G))))
		)
		(:POSTCONDS
			(?P1 (?X_F (KNOW.V (THAT (?X_G (AT.P ?L))))))
			(?P2 (?X_F (HAVE.V ?X_G)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_I))
			(!W2 (?X_I (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (((ADV-A (UNDER.P ?X_A)) FIND.35.V) ?X_F)) ** ?X_H)
		(:ROLES
			(!R1 (?X_E DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_F DAY.N))
			(!R4 (?X_A CART.N))
			(!R5 (?X_E (PERTAIN-TO ?X_D)))
			(!R6 (?X_D AGENT.N))
			(!R7 (?X_B (PERTAIN-TO ?X_D)))
			(!R8 (?X_B KITE.N))
			(!R9 (?X_C (PLUR EYE.N)))
			(!R10 (?X_C (PERTAIN-TO ?X_D)))
			(!R11 (?X_F FINE.A))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 (?X_E ((ADV-A (FOR.P ?X_F)) SEARCH.V)))
			(?I4 (NOT (?X_E (KNOW.V (THAT (?X_F (AT.P ?L)))))))
			(?I5 (NOT (?X_E (HAVE.V ?X_F))))
		)
		(:POSTCONDS
			(?P1 (?X_E (KNOW.V (THAT (?X_F (AT.P ?L))))))
			(?P2 (?X_E (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_Q (COMPOSITE-SCHEMA-210.PR (K BRIGHT.A) ?X_G ?X_N ?X_O)) ** ?E)
		(:ROLES
			(!R1 (?X_M AGENT.N))
			(!R2 (?X_Q (PERTAIN-TO ?X_M)))
			(!R3 (?X_G KITE.N))
			(!R4 (?X_G (PERTAIN-TO ?X_M)))
			(!R5 (?X_J SUN.N))
			(!R6 (?X_K FENCE.N))
			(!R7 (?X_K HIGH.A))
			(!R8 (?X_N (OF.P ?X_K)))
			(!R9 (?X_L (PLUR EYE.N)))
			(!R10 (?X_L (PERTAIN-TO ?X_M)))
			(!R11 (?X_N SHADE.N))
			(!R12 (?X_O FINE.A))
			(!R13 (?X_O DAY.N))
			(!R14 (?X_P CART.N))
			(!R15 (?X_Q DOG.N))
		)
		(:STEPS
			(?X_I (?X_J (SHINE.V (K BRIGHT.A))))
			(?X_F (?X_G (HIGH.ADV FLY.V)))
			(?X_D (?X_M ((CAN.AUX (JUST.ADV SEE.V)) ?X_G)))
			(?X_B (?X_Q (((ADV-A (UNDER.P ?X_P)) FIND.34.V) ?X_N)))
			(?X_B (?X_Q (((ADV-A (UNDER.P ?X_P)) FIND.35.V) ?X_O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_F)))
			(!W2 (?X_I (BEFORE ?X_D)))
			(!W3 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A rosebush blooms."
			"A man cuts a rose."
			"A female agent likes a woman not."
			"A agent male give.181s a woman X_R."
			"A woman get.185s mad."
			"A female agent likes a woman not."
		adding constraint (ME$18$250.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D (MAY.AUX ((ADV-A (NEAR.P ?X_A)) PLAY.13.V))) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C TOY.N))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A WHILE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_B FEMALE.A))
			(!R9 (?X_B AGENT.N))
			(!R10 (?X_C SOFT.A))
			(!R11 (?X_C MAT.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (?X_D EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (WITH.P ?X_C)) PLAY.13.V)))
			(?X_E (?X_D PLAY.13.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_G (SAME-TIME ?X_F)))
			(!W3 (?X_G (RIGHT-AFTER ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (MAY.AUX ((ADV-A (NEAR.P ?X_A)) PLAY.14.V))) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C TOY.N))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A WHILE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_B FEMALE.A))
			(!R9 (?X_B AGENT.N))
			(!R10 (?X_C SOFT.A))
			(!R11 (?X_C MAT.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (?X_D EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (WITH.P ?X_C)) PLAY.14.V)))
			(?X_E (?X_D PLAY.14.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (SAME-TIME ?X_H)))
			(!W2 (?X_E (RIGHT-AFTER ?X_F)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K BABY.N) ((ADV-A (ON.P ?X_A)) SIT.1.V)) ** ?X_B)
		(:ROLES
			(!R1 ((K BABY.N) AGENT.N))
			(!R2 (NOT (?X_A AGENT.N)))
			(!R3 (?X_A FURNITURE.N))
			(!R4 (?L LOCATION.N))
			(!R5 (?X_A SOFT.A))
			(!R6 (?X_A MAT.N))
		)
		(:GOALS
			(?G1 ((K BABY.N) (WANT.V (KA REST.V))))
		)
		(:PRECONDS
			(?I1 ((K BABY.N) (AT.P ?L)))
			(?I2 (?X_A (AT.P ?L)))
		)
		(:PARAPHRASES
			(?X_B ((K BABY.N) ((ADV-A (IN.P ?X_A)) SIT.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H COMPOSITE-SCHEMA-211.PR) ** ?E)
		(:ROLES
			(!R1 (?X_F FEMALE.A))
			(!R2 (?X_F AGENT.N))
			(!R3 (?X_I (PERTAIN-TO ?X_F)))
			(!R4 (?X_G FURNITURE.N))
			(!R5 (?X_G SOFT.A))
			(!R6 (?X_G MAT.N))
			(!R7 ((K BABY.N) AGENT.N))
			(!R8 (NOT (?X_G AGENT.N)))
			(!R9 (?X_H AGENT.N))
			(!R10 (?X_I WHILE.N))
		)
		(:STEPS
			(?X_E ((K BABY.N) ((ADV-A (ON.P ?X_G)) SIT.1.V)))
			(?X_C (?X_H (MAY.AUX ((ADV-A (NEAR.P ?X_I)) PLAY.13.V))))
			(?X_A (?X_H (MAY.AUX ((ADV-A (NEAR.P ?X_I)) PLAY.14.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_C)))
			(!W2 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A sun shines bright."
			"A kite of a agent flies high."
			"A agent sees a kite of a agent can just."
			"A dog of a agent find.211s a shade of a fence high under a cart."
			"A dog of a agent find.212s a fine day under a cart."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.34.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C PET.N))
			(!R6 (?X_C STORE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_A NICE.A))
			(!R9 (?X_A CAT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) GO.34.V))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.34.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.34.V) ?X_C))
			(?X_D (?X_B GO.34.V))
			(?X_D (?X_B GO.34.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.34.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.36.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B CAT.N))
			(!R4 (?X_B (PERTAIN-TO ?X_A)))
			(!R5 (?X_B NICE.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P (COMPOSITE-SCHEMA-212.PR ?X_M ?X_F ?X_N ?X_O)) ** ?E)
		(:ROLES
			(!R1 (?X_F CAT.N))
			(!R2 (?X_F (PLUR THING.N)))
			(!R3 (?X_M NEW.A))
			(!R4 (?X_M CAT.N))
			(!R5 (?X_N DESTINATION.N))
			(!R6 (?X_N PET.N))
			(!R7 (?X_N STORE.N))
			(!R8 (?X_O (PERTAIN-TO ?X_P)))
			(!R9 (?X_O CAT.N))
			(!R10 (?X_O NICE.A))
			(!R11 (?X_P AGENT.N))
		)
		(:STEPS
			(?X_L (?X_P (WANT.V ?X_M)))
			(?X_C (?X_P (LOVE.V ?X_O)))
			(?X_J (?X_P ((ADV-A (FROM.P ?L1)) GO.34.V) ?X_N))
			(?X_H (?X_P FIND.36.V ?X_O))
			(?X_E (?X_P (((ADV-A (FOR.P ?X_O)) BUY.V) ?X_F)))
			(?X_A (?X_P (LOVE.V ?X_O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_J)))
			(!W2 (?X_L (BEFORE ?X_H)))
			(!W3 (?X_L (BEFORE ?X_E)))
			(!W4 (?X_L (BEFORE ?X_A)))
			(!W5 (?X_C (BEFORE ?X_A)))
			(!W6 (?X_J (BEFORE ?X_H)))
			(!W7 (?X_J (BEFORE ?X_E)))
			(!W8 (?X_J (BEFORE ?X_A)))
			(!W9 (?X_H (BEFORE ?X_E)))
			(!W10 (?X_H (BEFORE ?X_A)))
			(!W11 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"Baby sit.219s on a furniture soft mat."
			"A agent play.216s may near a while of a female agent."
			"A agent play.218s may near a while of a female agent."
	)
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-213.PR ?X_P (KE (?X_A DRUM.V)) ?X_G
	               (SET-OF ?X_K ?X_L) ?X_Q))
	             ** ?E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_G (K LITTLE.A) GIRL.N))
			(!R3 (?X_G (WITH.P ?X_H)))
			(!R4 (?X_K GOOD.A))
			(!R5 (?X_K BABY.N))
			(!R6 (?X_L PRETTY.A))
			(!R7 (?X_L DOLL.N))
			(!R8 (?X_P ((ADV-A (IN.P ?X_O)) HIGH.A)))
			(!R9 (?X_P RED.A))
			(!R10 (?X_P BIRD.N))
			(!R11 (?X_Q MAN.N))
			(!R12 (?X_Q (IN.P ?X_R)))
		)
		(:STEPS
			(?X_D (NOT (?X_B ((CAN.AUX CATCH.V) ?X_P))))
			(?X_F (?X_P ((CAN.AUX SEE.V) (KE (?X_A DRUM.V)))))
			(?X_J (?X_P ((CAN.AUX SEE.V) ?X_G)))
			(?X_N (?X_P ((CAN.AUX SEE.V) (SET-OF ?X_K ?X_L))))
			(?X_T (?X_P ((CAN.AUX SEE.V) ?X_Q)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_F)))
			(!W2 (?X_D (BEFORE ?X_J)))
			(!W3 (?X_D (BEFORE ?X_N)))
			(!W4 (?X_D (BEFORE ?X_T)))
			(!W5 (?X_F (BEFORE ?X_J)))
			(!W6 (?X_F (BEFORE ?X_N)))
			(!W7 (?X_F (BEFORE ?X_T)))
			(!W8 (?X_J (BEFORE ?X_N)))
			(!W9 (?X_J (BEFORE ?X_T)))
			(!W10 (?X_N (BEFORE ?X_T)))
		)
	)
	(
			"A agent wants a new cat."
			"A agent loves a cat nice of a agent."
			"A agent go.240s a destination pet store from L1."
			"A agent find.245s a cat nice of a agent."
			"A agent buys a cat things for a cat nice of a agent."
			"A agent loves a cat nice of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-214.PR (KA (HUNT.N (K (PLUR BUG.N)))) ?X_H))
	             ** ?E)
		(:ROLES
			(!R1 (?X_B (IS.V ?X_C)))
			(!R2 (?X_H (ON.P (K (L X (AND (X TOP.N) (X (OF.P ?X_G))))))))
			(!R3 (?X_H FLY.N))
		)
		(:STEPS
			(?X_E (?X_B (LIKE.V (KA (HUNT.N (K (PLUR BUG.N)))))))
			(?X_J ((ADV-E (DURING (K YESTERDAY.N))) (?X_A (BE.V ?X_H))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_J)))
		)
	)
	(
			"A agent catches a in X_O high red bird not can."
			"A in X_O high red bird sees X_A drums can."
			"A in X_O high red bird sees a with X_H can."
			"A in X_O high red bird sees a good baby and a pretty doll can."
			"A in X_O high red bird sees a man in X_R can."
	)
)



(
	(EPI-SCHEMA ((?X_C COMPOSITE-SCHEMA-215.PR) ** ?E)
		(:ROLES
			(!R1 (?X_C (PLUR SLED.N)))
			(!R2 (?X_C (PERTAIN-TO ?X_D)))
		)
		(:STEPS
			(?X_A (?X_C (WELL.ADV RUN.V)))
			(?X_B (?X_C (WELL.ADV RUN.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_B)))
		)
	)
	(
			"A is X_C likes hunt bugs."
			"X_A is a on top of fly DURING yesterday."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?X_B)) WALK.9.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_B FIELD.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_B = ?L2)))
			(!R5 (?X_A DAY.N))
			(!R6 (?X_B (OF.P (K (PLUR FLOWER.N)))))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?X_B)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?X_B))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.9.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?X_B)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.9.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.9.V) ?L2))
			(?X_D ((ADV-E (DURING ?X_A)) (?X_C WALK.9.V)))
			(?X_D (?X_C WALK.9.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? WALK.9.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A LIKE.28.V (K (PLUR FLOWER.N))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K (PLUR FLOWER.N)) ACTION.N)))
			(!R3 (NOT ((K (PLUR FLOWER.N)) AGENT.N)))
			(!R4 ((K (PLUR FLOWER.N)) OBJECT.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V (K (PLUR FLOWER.N)))))))
		)
		(:PARAPHRASES
			(?X_B (?X_A WANT.V (K (PLUR FLOWER.N))))
			(?X_B (?X_A (WANT.V (K (PLUR FLOWER.N)))))
			(?X_B (?X_A (LIKE.28.V (K (PLUR FLOWER.N)))))
			(?X_B (?X_A (LOVE.V (K (PLUR FLOWER.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-216.PR (KE ((K (PLUR FLOWER.N)) (SO.ADV PRETTY.A)))
	               ?X_M (KE ((K FUN.N) (PLAY.V (K (PLUR FLOWER.N))))) ?L2
	               (K (PLUR FLOWER.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G DAY.N))
			(!R2 ((K (PLUR FLOWER.N)) OBJECT.N))
			(!R3 (NOT ((K (PLUR FLOWER.N)) ACTION.N)))
			(!R4 (NOT ((K (PLUR FLOWER.N)) AGENT.N)))
			(!R5 (?X_M (OF.P (K (PLUR FLOWER.N)))))
			(!R6 (?X_M FIELD.N))
			(!R7 (?X_L AGENT.N))
			(!R8 (NOT (?X_M = ?L2)))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_K (?X_L LIKE.28.V (K (PLUR FLOWER.N))))
			(?X_I (?X_L (THINK.V (KE ((K (PLUR FLOWER.N)) (SO.ADV PRETTY.A))))))
			(?X_F (?X_L ((ADV-A (FROM.P ?X_M)) WALK.9.V) ?L2))
			(?X_D (?X_L (SEE.V ?X_M)))
			(?X_B (?X_L (HAVE.V (KE ((K FUN.N) (PLAY.V (K (PLUR FLOWER.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_F)))
			(!W6 (?X_I (BEFORE ?X_D)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A sleds of X_D run well."
			"A sleds of X_D run well."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?X_C)) RUN.17.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C END.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_C = ?L2)))
			(!R5 (?X_B PARK.N))
			(!R6 (?X_A DOG.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?X_C))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.17.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?X_C)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.17.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.17.V) ?L2))
			(?X_E (?X_D ((ADV-A (THROUGH.P ?X_B)) RUN.17.V)))
			(?X_E (?X_D RUN.17.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RUN.17.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?X_C)) SWIM.1.V) ?X_E) ** ?X_G)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C END.N))
			(!R3 (?X_E PARK.N))
			(!R4 (NOT (?X_C = ?X_E)))
			(!R5 (?X_E DESTINATION.N))
			(!R6 (?X_B LAKE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_A DOG.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?X_E)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (NOT (?X_D (AT.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?X_C))))
			(?P2 (?X_D (AT.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_G (?X_D ((ADV-A (DESTINATION_PREP.? ?X_E)) SWIM.1.V)))
			(?X_G
	   (?X_D
	    ((ADV-A (FROM.P ?X_C)) ((ADV-A (DESTINATION_PREP.? ?X_E)) SWIM.1.V))))
			(?X_G (?X_D ((ADV-A (DESTINATION_PREP.? ?X_E)) SWIM.1.V) ?X_E))
			(?X_G (?X_D ((ADV-A (IN.P ?X_B)) SWIM.1.V)))
			(?X_G (?X_D SWIM.1.V ?X_E))
			(?X_G (?X_D (LOCATION_ADV.? SWIM.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_G))
			(!W2 (?I2 BEFORE ?X_G))
			(!W3 (?P1 AFTER ?X_G))
			(!W4 (?P2 AFTER ?X_G))
			(!W5 (?G1 CAUSE-OF ?X_G))
			(!W6 (?X_G (DURING ?X_H)))
			(!W7 (?X_F (DURING ?X_H)))
			(!W8 (?X_F (CONSEC ?X_G)))
			(!W9 (?X_H (AT-ABOUT ?X_J)))
			(!W10 (?X_I (BEFORE ?X_J)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.29.V
	              (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2
	   (NOT ((K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))) ACTION.N)))
			(!R3
	   (NOT ((K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))) AGENT.N)))
			(!R4 ((K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))) OBJECT.N))
			(!R5 (?X_D LAKE.N))
			(!R6 (?X_A DOG.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1
	   (?X_B
	    (WANT.V
	     (KA (HAVE.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))))
		)
		(:PARAPHRASES
			(?X_E (?X_B WANT.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V)))))))
			(?X_E
	   (?X_B (WANT.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))
			(?X_E
	   (?X_B
	    (LIKE.29.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))
			(?X_E
	   (?X_B (LOVE.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_F)))
			(!W2 (?X_G (AT-ABOUT ?X_F)))
			(!W3 (?X_I (DURING ?X_G)))
			(!W4 (?X_H (DURING ?X_G)))
			(!W5 (?X_H (CONSEC ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.30.V
	              (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2
	   (NOT ((K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))) ACTION.N)))
			(!R3
	   (NOT ((K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))) AGENT.N)))
			(!R4 ((K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))) OBJECT.N))
			(!R5 (?X_D LAKE.N))
			(!R6 (?X_A DOG.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1
	   (?X_B
	    (WANT.V
	     (KA (HAVE.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))))
		)
		(:PARAPHRASES
			(?X_E (?X_B WANT.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V)))))))
			(?X_E
	   (?X_B (WANT.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))
			(?X_E
	   (?X_B
	    (LIKE.30.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))
			(?X_E
	   (?X_B (LOVE.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_D)) SWIM.V))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_F)))
			(!W2 (?X_I (AT-ABOUT ?X_F)))
			(!W3 (?X_G (DURING ?X_I)))
			(!W4 (?X_H (CONSEC ?X_G)))
			(!W5 (?X_H (DURING ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R
	              (COMPOSITE-SCHEMA-217.PR (KA ((ADV-A (WITH.P ?X_O)) PLAY.V))
	               (K CATCH.N) ?L2 ?X_T
	               (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_H)) SWIM.V)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H LAKE.N))
			(!R2 (?X_O DOG.N))
			(!R3 (?X_O (PERTAIN-TO ?X_R)))
			(!R4 (NOT (?X_S = ?L2)))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_S END.N))
			(!R7 (?X_T DESTINATION.N))
			(!R8 (?X_T PARK.N))
			(!R9 (?X_R AGENT.N))
			(!R10 (NOT (?X_S = ?X_T)))
		)
		(:STEPS
			(?X_L (?X_R ((ADV-A (WITH.P ?X_O)) PLAY.V)))
			(?X_N (?X_R ((ADV-A (FROM.P ?X_S)) RUN.17.V) ?L2))
			(?X_C (?X_R (LOVE.V (KA ((ADV-A (WITH.P ?X_O)) PLAY.V)))))
			(?X_J (?X_A (PLAY.V (K CATCH.N))))
			(?X_G
	   (?X_R LIKE.29.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_H)) SWIM.V)))))))
			(?X_G
	   (?X_R LIKE.30.V (K (L X (AND (X TO.P) (X ((ADV-A (IN.P ?X_H)) SWIM.V)))))))
			(?X_D (?X_R TO.P))
			(?X_E (?X_R ((ADV-A (FROM.P ?X_S)) SWIM.1.V) ?X_T))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_C)))
			(!W2 (?X_L (BEFORE ?X_J)))
			(!W3 (?X_L (BEFORE ?X_D)))
			(!W4 (?X_L (BEFORE ?X_E)))
			(!W5 (?X_N (BEFORE ?X_C)))
			(!W6 (?X_N (BEFORE ?X_J)))
			(!W7 (?X_N (BEFORE ?X_D)))
			(!W8 (?X_N (BEFORE ?X_E)))
			(!W9 (?X_C (BEFORE ?X_J)))
			(!W10 (?X_C (BEFORE ?X_D)))
			(!W11 (?X_C (BEFORE ?X_E)))
			(!W12 (?X_J (BEFORE ?X_D)))
			(!W13 (?X_J (BEFORE ?X_E)))
			(!W14 (?X_D (BEFORE ?X_E)))
		)
	)
	(
			"A agent like.311s flowers."
			"A agent thinks flowers so pretty."
			"A agent walk.308s a destination from a of flowers field."
			"A agent sees a of flowers field."
			"A agent has fun plays flowers."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) GO.35.V) (K (VERY.ADV HIGH.A))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A END.N))
			(!R3 ((K (VERY.ADV HIGH.A)) DESTINATION.N))
			(!R4 (NOT (?X_A = (K (VERY.ADV HIGH.A)))))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K (VERY.ADV HIGH.A)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P (K (VERY.ADV HIGH.A))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P (K (VERY.ADV HIGH.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (K (VERY.ADV HIGH.A)))) GO.35.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?X_A))
	     ((ADV-A (DESTINATION_PREP.? (K (VERY.ADV HIGH.A)))) GO.35.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K (VERY.ADV HIGH.A)))) GO.35.V)
	    (K (VERY.ADV HIGH.A))))
			(?X_C (?X_B GO.35.V))
			(?X_C (?X_B GO.35.V (K (VERY.ADV HIGH.A))))
			(?X_C (?X_B (LOCATION_ADV.? GO.35.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-218.PR ?X_H (K (L X (AND (X MUCH.A) (X FUN.N))))
	               (K (VERY.ADV HIGH.A))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H (PLUR SWING.N)))
			(!R2 ((K (VERY.ADV HIGH.A)) DESTINATION.N))
			(!R3 (?X_I AGENT.N))
			(!R4 (?X_J END.N))
			(!R5 (NOT (?X_J = (K (VERY.ADV HIGH.A)))))
		)
		(:STEPS
			(?X_G (?X_I (LOVE.V ?X_H)))
			(?X_E (?X_I ((ADV-A (FROM.P ?X_J)) GO.35.V) (K (VERY.ADV HIGH.A))))
			(?X_C (?X_I (HAVE.V (K (L X (AND (X MUCH.A) (X FUN.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_C)))
			(!W3 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent plays with a dog of a agent."
			"A agent run.314s a destination from a end."
			"A agent loves with a dog of a agent playing."
			"X_A plays catch."
			"A agent like.319s to swimming."
			"A agent like.320s to swimming."
			"A agent is to."
			"A agent swim.313s a destination park from a end."
	)
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-219.PR ?X_E ?X_H)) ** ?E)
		(:ROLES
			(!R1 (?X_B DAY.N))
			(!R2 (?X_E SLATE.N))
			(!R3 (?X_F (HAS.V (TWO.D (L X (AND (X PET.A) (X (PLUR RABBIT.N))))))))
			(!R4 (?X_E (PERTAIN-TO ?X_F)))
			(!R5
	   (?X_H
	    (HAVE.V
	     (SET-OF (K (L X (AND (X BIG.A) (X LONG.A) (X (PLUR EAR.N)))))
	      (K (L X (AND (X LITTLE.A) (X SHORT.A) (X (PLUR TAIL.N)))))))))
			(!R6 (?X_H (PLUR RABBIT.N)))
		)
		(:STEPS
			(?X_A ((ADV-E (DURING ?X_B)) (?X_F (((ADV-A (ON.P ?X_E)) DRAW.V) ?X_H))))
			(?X_D (?X_F ?X_H (ON.P ?X_E)))
			(?X_J
	   (?X_F
	    (((ADV-A (ON.P (K (L X (AND (X PAPER.N) (X TOO.ADV)))))) DRAW.V) ?X_H)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_D)))
			(!W2 (?X_A (BEFORE ?X_J)))
			(!W3 (?X_D (BEFORE ?X_J)))
		)
	)
	(
			"A agent loves a swings."
			"A agent go.333s very high from a end."
			"A agent has much fun."
	)
)



(
	(EPI-SCHEMA ((?X_A GET.25.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PLUR SCISSOR.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((THEN.ADV FIND.37.V) (K GREAT.A))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K GREAT.A) ENTITY.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((K GREAT.A) (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P (K GREAT.A))) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT ((K GREAT.A) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (K GREAT.A)))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT ((K GREAT.A) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (K GREAT.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_C))
			(!W2 (?X_C (AT-ABOUT ?X_B)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_C))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-220.PR ?X_I ?X_K (K GREAT.A))) ** ?E)
		(:ROLES
			(!R1 (?X_I LOT.N))
			(!R2 (?X_I (OF.P (K (L X (AND (X SPLIT.A) (X (PLUR END.N))))))))
			(!R3 (?X_K (PLUR SCISSOR.N)))
			(!R4 (NOT (?X_K AGENT.N)))
			(!R5 (NOT (?X_K ACTION.N)))
			(!R6 (NOT (?X_L = ?X_K)))
			(!R7 ((K GREAT.A) ENTITY.N))
			(!R8 (?X_L AGENT.N))
		)
		(:STEPS
			(?X_H (?X_L (HAVE.V ?X_I)))
			(?X_F (?X_L GET.25.V ?X_K))
			(?X_D (?X_L ((THEN.ADV (OFF.ADV CUT.V)) ?X_I)))
			(?X_B (?X_L ((THEN.ADV FIND.37.V) (K GREAT.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent has a lot of split end."
			"A agent get.363s a scissors."
			"A agent cuts a lot of split end then off."
			"A agent find.359s great then."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.31.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_B ROW-BOAT.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.31.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-221.PR ?X_I ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_E SAIL-BOAT.N))
			(!R2 (?X_E BOAT.N))
			(!R3 (?X_E (ON.P ?X_F)))
			(!R4 (?X_I SAIL.N))
			(!R5 (?X_J MAN.N))
			(!R6 (?X_K AGENT.N))
			(!R7 (?X_L OBJECT.N))
			(!R8 (?X_L ROW-BOAT.N))
			(!R9 (NOT (?X_L ACTION.N)))
			(!R10 (NOT (?X_L AGENT.N)))
		)
		(:STEPS
			(?X_H (?X_J (HOLD.V ?X_I)))
			(?X_D (?X_E (FAST.ADV MOVE.V)))
			(?X_B (?X_K LIKE.31.V ?X_L))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_D)))
		)
	)
	(
			"A man holds a sail."
			"A sail boat boat on X_F moves fast."
			"A agent like.364s a object row boat."
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.32.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C BOOK.N))
			(!R5 (?X_C GREAT.A))
			(!R6 (?X_C KINDLE.A))
			(!R7 (?X_C IMPRESSIVE.A))
			(!R8 (?X_A LOT.N))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V ?X_C))
			(?X_D (?X_B (WANT.V ?X_C)))
			(?X_D (?X_B (LIKE.32.V ?X_C)))
			(?X_D (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-222.PR ?X_H)) ** ?E)
		(:ROLES
			(!R1 (?X_E LOT.N))
			(!R2 (?X_H GREAT.A))
			(!R3 (?X_H KINDLE.A))
			(!R4 (?X_H IMPRESSIVE.A))
			(!R5 (?X_H BOOK.N))
			(!R6 (NOT (?X_H ACTION.N)))
			(!R7 (NOT (?X_H AGENT.N)))
			(!R8 (?X_I AGENT.N))
		)
		(:STEPS
			(?X_G ((ADV-E (DURING (K YESTERDAY.N))) (?X_I (GET.V ?X_H))))
			(?X_B (?X_I (((ADV-A (IN.P (TWO.D (PLUR DAY.N)))) READ.V) ?X_H)))
			(?X_D (?X_I LIKE.32.V ?X_H))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_B)))
		)
	)
	(
			"A agent gets a great kindle impressive book DURING yesterday."
			"A agent reads a great kindle impressive book in two days."
			"A agent like.393s a great kindle impressive book."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.36.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B STORE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.36.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.36.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.36.V) ?X_B))
			(?X_C (?X_A GO.36.V))
			(?X_C (?X_A GO.36.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.36.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-223.PR (K CANDY.N) (K GREAT.A)
	               (K (L X (AND (X SOUR.A) (X CANDY.N)))) (FIVE.D (PLUR BAG.N))
	               ?X_L))
	             ** ?E)
		(:ROLES
			(!R1 (?X_L DESTINATION.N))
			(!R2 (?X_L STORE.N))
			(!R3 (?X_M AGENT.N))
		)
		(:STEPS
			(?X_K (?X_M ((ADV-A (FROM.P ?L1)) GO.36.V) ?X_L))
			(?X_I (?X_M (((ADV-A (ON.P (K SALE.N))) SEE.V) (K CANDY.N))))
			(?X_G ((K CANDY.N) (LOOK.V (K GREAT.A))))
			(?X_E (?X_M (GET.V (K (L X (AND (X SOUR.A) (X CANDY.N)))))))
			(?X_C (?X_M (GET.V (FIVE.D (PLUR BAG.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_C)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_E)))
			(!W7 (?X_I (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.410s a destination store from L1."
			"A agent sees candy on sale."
			"Candy looks great."
			"A agent gets sour candy."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) GO.37.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A CORNER.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_A = ?L2)))
			(!R5 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.37.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.37.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.37.V) ?L2))
			(?X_C (?X_B GO.37.V))
			(?X_C (?X_B GO.37.V ?L2))
			(?X_C (?X_B (INSTEAD.ADV GO.37.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-224.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_G LINE.N))
			(!R2 (?X_I CORNER.N))
			(!R3 (?X_H AGENT.N))
			(!R4 (NOT (?X_I = ?L2)))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 HOME.N))
		)
		(:STEPS
			(?X_F (?X_G (LONG.ADV (TOO.ADV (FAR.ADV BE.V)))))
			(?X_D (?X_G ((ADV-A (AROUND.P ?X_I)) BE.V)))
			(?X_B (?X_H ((ADV-A (FROM.P ?X_I)) GO.37.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A line is long too far."
			"A line is around a corner."
			"A agent go.1s a destination home from a corner."
		adding constraint (THEY$8$42.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) FALL.6.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A HEAD.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.6.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.6.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.6.V) ?L2))
			(?X_C (?X_B (DOWN.ADV FALL.6.V)))
			(?X_C (?X_B FALL.6.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? FALL.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-225.PR (KA (SEE.V ?X_L)) ?X_I ?X_N ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_I HEAD.N))
			(!R2 (?X_I (PERTAIN-TO ?X_N)))
			(!R3 (?X_L VIEW.N))
			(!R4 (?X_M AGENT.N))
			(!R5 (?X_N AGENT.N))
			(!R6 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_K (?X_M (WANT.V (KA (SEE.V ?X_L)))))
			(?X_F (?X_N (((ADV (REALLY.ADV HARD.A)) HIT.V) ?X_I)))
			(?X_H (?X_N ((ADV-A (FROM.P ?L1)) FALL.6.V) ?L2))
			(?X_B (?X_N (((ADV (REALLY.ADV HARD.A)) HIT.V) ?X_I)))
			(?X_D (?X_A (((ADV (BACK.ADV DOWN.A)) CARRY.V) ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_B)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_F (BEFORE ?X_B)))
			(!W5 (?X_F (BEFORE ?X_D)))
			(!W6 (?X_H (BEFORE ?X_B)))
			(!W7 (?X_H (BEFORE ?X_D)))
			(!W8 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"A agent wants seeing a view."
			"A agent hits a head of a agent ADV really hard."
			"A agent fall.11s a destination from L1."
			"A agent hits a head of a agent ADV really hard."
			"X_A carries a agent ADV back down."
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P ?X_C)) PUT.6.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_C CONTAINER.N))
			(!R4 (NOT (?X_C AGENT.N)))
			(!R5 (?X_B SMALLER-THAN ?X_C))
			(!R6 (?X_B EGG.N))
			(!R7 (?X_C PAN.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (IN.P ?X_C))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B (IN.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (IN.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (INTO.P ?X_C)) PUT.6.V) ?X_B))
			(?X_D (?X_A ((ADV-A (INSIDE.P ?X_C)) PUT.6.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-226.PR (ANOTHER.D EGG.N) ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_I MAN.N))
			(!R2 (?X_J SMALLER-THAN ?X_K))
			(!R3 (?X_J EGG.N))
			(!R4 (?X_K CONTAINER.N))
			(!R5 (?X_K PAN.N))
			(!R6 (NOT (?X_J AGENT.N)))
			(!R7 (NOT (?X_K AGENT.N)))
		)
		(:STEPS
			(?X_H (?X_I (CRACK.V ?X_J)))
			(?X_D (?X_I ((OUT.PRT THROW.V) ?X_J)))
			(?X_B (?X_I (CRACK.V (ANOTHER.D EGG.N))))
			(?X_F (?X_I (((ADV-A (IN.P ?X_K)) PUT.6.V) ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_D)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man cracks a egg."
			"A man throws a egg out."
			"A man cracks another egg."
			"A man put.19s a egg in a container pan."
		adding constraint (I$0$67.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (FROM.P ?X_A)) RUN.18.V) ?L2)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B RAT.N))
			(!R2 (?X_A LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_A = ?L2)))
			(!R5 (?X_A BOX.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.18.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.18.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.18.V) ?L2))
			(?X_C (?X_B RUN.18.V))
			(?X_C (?X_B RUN.18.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.18.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-227.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C RAT.N))
			(!R2 (?X_D LOCATION.N))
			(!R3 (?X_D BOX.N))
			(!R4 (NOT (?X_D = ?L2)))
			(!R5 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_B (?X_C (((ADV-A (FROM.P ?X_D)) RUN.18.V) ?L2)))
		)
	)
	(
			"A rat run.34s a destination from a location box."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-228.PR (K (SO.ADV SAD.A)) ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_H THING.N))
			(!R2 (?X_H (FOR.P ?X_I)))
			(!R3 (?X_J NEW.A))
			(!R4 (?X_J PUPPY.N))
		)
		(:STEPS
			(?X_E (?X_B ((ADV-A (FOR.P (KA (HAVE.V ?X_A)))) SUE.V)))
			(?X_C (?X_A PUPPY.N))
			(?X_G (?X_B (SUE.V (K (SO.ADV SAD.A)))))
			(?X_L (?X_H (BE.V ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_C)))
			(!W2 (?X_E (BEFORE ?X_G)))
			(!W3 (?X_E (BEFORE ?X_L)))
			(!W4 (?X_C (BEFORE ?X_G)))
			(!W5 (?X_C (BEFORE ?X_L)))
			(!W6 (?X_G (BEFORE ?X_L)))
		)
	)
	(
			"X_B sues for having X_A."
			"X_A is puppy."
			"X_B sues so sad."
			"A thing for X_I is a new puppy."
		adding constraint (I$0$104.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (AT.P ?X_A)) FIND.38.V) ?O)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_A WHOLE.A))
			(!R5 (?X_A PARTY.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_B PHONE.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?O (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?O (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?O))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?O (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (PLUR PERSON.N)) FIND.39.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 ((K (PLUR PERSON.N)) AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B PHONE.N))
			(!R4 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:PRECONDS
			(?I1 ((K (PLUR PERSON.N)) (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K (PLUR PERSON.N)) ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT ((K (PLUR PERSON.N)) (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT ((K (PLUR PERSON.N)) (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 ((K (PLUR PERSON.N)) (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 ((K (PLUR PERSON.N)) (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-229.PR ?O ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_L (PERTAIN-TO ?X_J)))
			(!R2 (?X_J AGENT.N))
			(!R3 (?X_K WHOLE.A))
			(!R4 (?X_K PARTY.N))
			(!R5 (?O ENTITY.N))
			(!R6 ((K (PLUR PERSON.N)) AGENT.N))
			(!R7 (?X_L PHONE.N))
		)
		(:STEPS
			(?X_G (?X_J ((THEN.ADV LOSE.V) ?X_L)))
			(?X_I (?X_J (((ADV-A (AT.P ?X_K)) FIND.38.V) ?O)))
			(?X_A (?X_J ((THEN.ADV LOSE.V) ?X_L)))
			(?X_E (?X_K STOP.V))
			(?X_C ((K (PLUR PERSON.N)) FIND.39.V ?X_L))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_A)))
			(!W2 (?X_G (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_C)))
			(!W4 (?X_I (BEFORE ?X_A)))
			(!W5 (?X_I (BEFORE ?X_E)))
			(!W6 (?X_I (BEFORE ?X_C)))
			(!W7 (?X_A (BEFORE ?X_E)))
			(!W8 (?X_A (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent loses a phone of a agent then."
			"A agent find.67s a entity at a whole party."
			"A agent loses a phone of a agent then."
			"A whole party stops."
			"Persons find.68 a phone of a agent."
		adding constraint (I$0$154.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.19.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C (PERTAIN-TO ?X_B)))
			(!R6 (?X_C FRIEND.N))
			(!R7 (?X_A WAY.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) RUN.19.V)))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) RUN.19.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) RUN.19.V) ?X_C))
			(?X_D (?X_B RUN.19.V))
			(?X_D (?X_B ((ALMOST.ADV (OVER.PRT RUN.19.V)) ?X_C)))
			(?X_D (?X_B (LOCATION_ADV.? RUN.19.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (AT.P (K WORK.N))) FIND.40.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D STACKER.N))
			(!R4 (?X_A (PERTAIN-TO ?X_C)))
			(!R5 (?X_A WAY.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_B FRIEND.N))
			(!R8 (?X_D WALKING.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-230.PR ?X_K ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_I WAY.N))
			(!R2 (?X_I (PERTAIN-TO ?X_L)))
			(!R3 (?X_J WALKING.N))
			(!R4 (?X_J STACKER.N))
			(!R5 (?X_K DESTINATION.N))
			(!R6 (?X_K (PERTAIN-TO ?X_L)))
			(!R7 (?X_K FRIEND.N))
			(!R8 (?X_L AGENT.N))
		)
		(:STEPS
			(?X_H (?X_L (((ADV-A (AT.P (K WORK.N))) FIND.40.V) ?X_J)))
			(?X_F (?X_L (USE.V ?X_J)))
			(?X_D (?X_K ((ADV-A (IN.P ?X_I)) STAND.V)))
			(?X_B (?X_L ((ADV-A (FROM.P ?L1)) RUN.19.V) ?X_K))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent find.88s a walking stacker at work."
			"A agent uses a walking stacker."
			"A destination friend of a agent stands in a way of a agent."
			"A agent run.76s a destination friend of a agent from L1."
		adding constraint (ME$0$173.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C TAKE.2.V ?X_D) ** ?X_G)
		(:ROLES
			(!R1 (?X_C BROTHER.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_D HAT.N))
			(!R7 (?X_B HEAD.N))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
			(!R9 (?X_A AGENT.N))
			(!R10 (?X_C (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?X_E (?X_C (((ADV-A (OFF.P ?X_B)) NEED.V) ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_D (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_G))
			(!W2 (?I2 PRECOND-OF ?X_G))
			(!W3 (?I3 PRECOND-OF ?X_G))
			(!W4 (?P1 POSTCOND-OF ?X_G))
			(!W5 (?X_G (BEFORE ?X_H)))
			(!W6 (?X_E (SAME-TIME ?X_H)))
			(!W7 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (OFF.P ?X_A)) TAKE.17.V) ?X_D)) ** ?X_G)
		(:ROLES
			(!R1 (?X_C BROTHER.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_D HAT.N))
			(!R7 (?X_A HEAD.N))
			(!R8 (?X_A (PERTAIN-TO ?X_C)))
			(!R9 (?X_C (PERTAIN-TO ?X_B)))
			(!R10 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?X_E (?X_C (NEED.V ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_D (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_G))
			(!W2 (?I2 PRECOND-OF ?X_G))
			(!W3 (?I3 PRECOND-OF ?X_G))
			(!W4 (?P1 POSTCOND-OF ?X_G))
			(!W5 (?X_G (SAME-TIME ?X_F)))
			(!W6 (?X_G (RIGHT-AFTER ?X_H)))
			(!W7 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R (COMPOSITE-SCHEMA-231.PR ?X_E ?X_S)) ** ?E)
		(:ROLES
			(!R1 (?X_E (K HAT.N) RACK.N))
			(!R2 (?X_E (PERTAIN-TO ?X_F)))
			(!R3 (?X_P AGENT.N))
			(!R4 (?X_K FLOOR.N))
			(!R5 (?X_R (PERTAIN-TO ?X_P)))
			(!R6 (?X_S HAT.N))
			(!R7 (?X_Q HEAD.N))
			(!R8 (?X_Q (PERTAIN-TO ?X_R)))
			(!R9 (?X_R BROTHER.N))
			(!R10 (NOT (?X_S AGENT.N)))
			(!R11 (NOT (?X_S ACTION.N)))
			(!R12 (NOT (?X_R = ?X_S)))
		)
		(:STEPS
			(?X_O (?X_R (WEAR.V ?X_S)))
			(?X_D (?X_P (PUT.V ?X_S ?X_E)))
			(?X_M (?X_R TAKE.2.V ?X_S))
			(?X_A (?X_R (((ADV-A (OFF.P ?X_Q)) TAKE.17.V) ?X_S)))
			(?X_J (?X_R (((ADV-A (ON.P ?X_K)) THROW.V) ?X_S)))
			(?X_H (?X_P ((UP.PRT PICK.V) ?X_S)))
			(?X_B (?X_P (((ADV-A (ON.P ?X_E)) PUT.V) ?X_S)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_A)))
			(!W2 (?X_O (BEFORE ?X_J)))
			(!W3 (?X_O (BEFORE ?X_H)))
			(!W4 (?X_O (BEFORE ?X_B)))
			(!W5 (?X_D (BEFORE ?X_B)))
			(!W6 (?X_M (BEFORE ?X_A)))
			(!W7 (?X_M (BEFORE ?X_J)))
			(!W8 (?X_M (BEFORE ?X_H)))
			(!W9 (?X_M (BEFORE ?X_B)))
			(!W10 (?X_A (BEFORE ?X_J)))
			(!W11 (?X_A (BEFORE ?X_H)))
			(!W12 (?X_A (BEFORE ?X_B)))
			(!W13 (?X_J (BEFORE ?X_H)))
			(!W14 (?X_J (BEFORE ?X_B)))
			(!W15 (?X_H (BEFORE ?X_B)))
		)
	)
	(
			"A brother of a agent wears a hat."
			"A agent puts a hat a of X_F."
			"A brother of a agent take.100s a hat."
			"A brother of a agent take.101s a hat off a head of a brother of a agent."
			"A brother of a agent throws a hat on a floor."
			"A agent picks a hat up."
			"A agent puts a hat on a of X_F."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.4.V)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 (?X_C JOB.N))
			(!R5 (?X_C NEW.A))
			(!R6 (?X_A JOB.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (FIND.V ?X_C)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?LX)))
			(?I2 (?X_C (AT.P ?LO)))
			(?I3 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (FIND.V ?X_C)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (FOR.P ?X_C)) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (FOR.P ?X_C)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (FOR.P ?X_A)) FIND.41.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D INTERVIEW.N))
			(!R4 (?X_A NEW.A))
			(!R5 (?X_A JOB.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_B JOB.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (FOR.P ?X_A)) FIND.42.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D JOB.N))
			(!R4 (?X_A NEW.A))
			(!R5 (?X_A JOB.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_B JOB.N))
			(!R8 (?X_D NEW.A))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B GET.26.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_C INTERVIEW.N))
			(!R7 (?X_A JOB.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-232.PR ?X_K (K SAD.A)
	               (K (L X (AND (X AT.P) (X FIRST.A)))) ?X_M ?X_O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K JOB.N))
			(!R2 (?X_K (PERTAIN-TO ?X_N)))
			(!R3 (?X_L NEW.A))
			(!R4 (?X_L JOB.N))
			(!R5 (?X_M JOB.N))
			(!R6 (?X_M NEW.A))
			(!R7 (?X_O INTERVIEW.N))
			(!R8 (?X_N AGENT.N))
			(!R9 (NOT (?X_O AGENT.N)))
			(!R10 (NOT (?X_O ACTION.N)))
			(!R11 (NOT (?X_N = ?X_O)))
		)
		(:STEPS
			(?X_B (?X_N (LOSE.V ?X_K)))
			(?X_J (?X_N (LOSE.V ?X_K)))
			(?X_H (?X_N (BE.V (K SAD.A) (K (L X (AND (X AT.P) (X FIRST.A)))))))
			(?X_F (?X_N ((ADV-A (FOR.P ?X_L)) SEARCH.4.V)))
			(?X_F (?X_N (((ADV-A (FOR.P ?X_L)) FIND.41.V) ?X_O)))
			(?X_F (?X_N (((ADV-A (FOR.P ?X_L)) FIND.42.V) ?X_M)))
			(?X_D (?X_N GET.26.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_J)))
			(!W2 (?X_B (BEFORE ?X_H)))
			(!W3 (?X_J (BEFORE ?X_H)))
			(!W4 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent loses a job of a agent."
			"A agent loses a job of a agent."
			"A agent is sad at first."
			"A agent search.119s for a new job."
			"A agent find.126s a interview for a new job."
			"A agent find.128s a job new for a new job."
			"A agent get.129s a interview."
	)
)



(
	(EPI-SCHEMA ((?X_B MAKE.9.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_C (PERTAIN-TO ?X_B)))
			(!R4 (?X_C (K OWN.A) FOOD.N))
			(!R5 (?X_A MOM.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C EXIST.V)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_C EXIST.V))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (SAME-TIME ?X_G)))
			(!W2 (?X_D (RIGHT-AFTER ?X_E)))
			(!W3 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-233.PR (K FOOD.N) ?X_L ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_K MOM.N))
			(!R2 (?X_J TABLE.N))
			(!R3 (?X_K (PERTAIN-TO ?X_L)))
			(!R4 (?X_L BOY.N))
			(!R5 (?X_M (PERTAIN-TO ?X_L)))
			(!R6 (?X_M (K OWN.A) FOOD.N))
			(!R7 (NOT (?X_M AGENT.N)))
		)
		(:STEPS
			(?X_I (?X_L ((ADV-A (AT.P ?X_J)) SIT.V)))
			(?X_G (?X_L (EXPECT.V (K FOOD.N))))
			(?X_E (?X_K (IGNORE.V ?X_L)))
			(?X_C (?X_L (MAKE.V ?X_M)))
			(?X_A (?X_L MAKE.9.V ?X_M))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_E)))
			(!W4 (?X_C (BEFORE ?X_A)))
		)
	)
	(
			"A boy sits at a table."
			"A boy expects food."
			"A mom of a boy ignores a boy."
			"A boy makes a of a boy."
			"A boy make.147s a of a boy."
	)
)



(
	(EPI-SCHEMA ((?X_A PLAY.15.V) ** ?X_B)
		(:ROLES
			(!R1 (?X_A GIRL.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_A EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (WITH.P ?T)) PLAY.15.V)))
			(?X_B (?X_A PLAY.15.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
			(!W2 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K SUSIE.N)
	              (COMPOSITE-SCHEMA-234.PR (KE (?X_R (PLAY.V (K BALL.N))))
	               (KA ((ADV-A (WITH.P ?X_M)) PLAY.V)) ?X_A))
	             ** ?E)
		(:ROLES
			(!R1 (?X_M (PERTAIN-TO (K SUSIE.N))))
			(!R2 (?X_R GIRL.N))
		)
		(:STEPS
			(?X_B ((K SUSIE.N) (WANT.V (KA ((ADV-A (WITH.P ?X_M)) PLAY.V)))))
			(?X_L ((K SUSIE.N) (WANT.V (KA ((ADV-A (WITH.P ?X_M)) PLAY.V)))))
			(?X_J ((K SUSIE.N) (AHEAD.ADV GO.V)))
			(?X_H ((K SUSIE.N) ((ADV-A (FOR.P (K PERMISSION.N))) ASK.V)))
			(?X_F (?X_R (SAY.V ?X_A)))
			(?X_D ((K SUSIE.N) (THEN.ADV ((ADV-A (FOR.P (KA CRY.V))) START.V))))
			(?X_Q (?X_R PLAY.15.V))
			(?X_O ((K SUSIE.N) (SAY.V (KE (?X_R (PLAY.V (K BALL.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_L)))
			(!W2 (?X_B (BEFORE ?X_J)))
			(!W3 (?X_B (BEFORE ?X_H)))
			(!W4 (?X_B (BEFORE ?X_F)))
			(!W5 (?X_B (BEFORE ?X_D)))
			(!W6 (?X_L (BEFORE ?X_J)))
			(!W7 (?X_L (BEFORE ?X_H)))
			(!W8 (?X_L (BEFORE ?X_F)))
			(!W9 (?X_L (BEFORE ?X_D)))
			(!W10 (?X_J (BEFORE ?X_H)))
			(!W11 (?X_J (BEFORE ?X_F)))
			(!W12 (?X_J (BEFORE ?X_D)))
			(!W13 (?X_H (BEFORE ?X_F)))
			(!W14 (?X_H (BEFORE ?X_D)))
			(!W15 (?X_F (BEFORE ?X_D)))
			(!W16 (?X_Q BEFORE ?X_O))
		)
	)
	(
			"Susie wants with a of susie playing."
			"Susie wants with a of susie playing."
			"Susie goes ahead."
			"Susie asks for permission."
			"A girl says X_A."
			"Susie starts then for crying."
			"A girl play.161s."
			"Susie says a girl plays ball."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.20.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B KITTEN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.20.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.20.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.20.V) ?L2))
			(?X_C (?X_B (AWAY.PRT ((ADV-A (WITHIN.P (K (PLUR DAY.N)))) RUN.20.V))))
			(?X_C (?X_B RUN.20.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.20.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((NEVER.ADV FIND.43.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B KITTEN.N))
			(!R4 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B GET.27.V (ANOTHER.D CAT.N)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((ANOTHER.D CAT.N) AGENT.N)))
			(!R3 (NOT ((ANOTHER.D CAT.N) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (ANOTHER.D CAT.N))))
			(!R6 (?X_A KITTEN.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (ANOTHER.D CAT.N)))))))
			(?G2 (?X_B (NEED.V (ANOTHER.D CAT.N))))
			(?G3 (?X_B (WANT.V (ANOTHER.D CAT.N))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (ANOTHER.D CAT.N))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((ANOTHER.D CAT.N) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (ANOTHER.D CAT.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-235.PR ?L2 ?X_I (ANOTHER.D CAT.N))) ** ?E)
		(:ROLES
			(!R1 (?L2 DESTINATION.N))
			(!R2 (?X_I (PERTAIN-TO ?X_J)))
			(!R3 (?X_I KITTEN.N))
			(!R4 (?X_J AGENT.N))
			(!R5 (NOT ((ANOTHER.D CAT.N) AGENT.N)))
			(!R6 (NOT ((ANOTHER.D CAT.N) ACTION.N)))
			(!R7 (NOT (?X_J = (ANOTHER.D CAT.N))))
		)
		(:STEPS
			(?X_H (?X_J (GET.V ?X_I)))
			(?X_F (?X_I ((ADV-A (FROM.P ?L1)) RUN.20.V) ?L2))
			(?X_D (?X_J ((NEVER.ADV FIND.43.V) ?X_I)))
			(?X_B (?X_J GET.27.V (ANOTHER.D CAT.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent gets a kitten of a agent."
			"A kitten of a agent run.168s a destination from L1."
			"A agent find.166s a kitten of a agent never."
			"A agent get.169s another cat."
		adding constraint (ME$4$277.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.18.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B ENTITY.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A (((ADV-A (WITH.P ?X_A)) TAKE.V) ?X_B)))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A BRING.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AFTER ?X_D)))
			(!W4 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A LIKE.33.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_A FEMALE.A))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.33.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AFTER ?X_D)))
			(!W2 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (GIVE.9.V ?X_B (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N)))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A FATHER.N))
			(!R2 (NOT ((TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N))))) AGENT.N)))
			(!R3 (?X_B AGENT.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT (?X_B (HAVE.V (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N)))))))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N)))))))
			(?I2 (NOT (?X_B HAVE.V (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A HAVE.V (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N))))))))
			(?P2 (?X_B HAVE.V (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N)))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_A
	    ((ADV-A (TO.P ?X_B))
	     (GIVE.9.V (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N)))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (((ADV-A (AT.P ?X_F)) ((ADV-A (WITH.P ?X_A)) TAKE.18.V)) ?X_B))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_F HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AFTER ?X_D)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_S
	              (COMPOSITE-SCHEMA-236.PR ?X_B ?X_G ?L2 ?X_P
	               (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N))))) ?X_U))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G FLOWER.N))
			(!R2 (?X_G RED.A))
			(!R3 (?X_P AGENT.N))
			(!R4 (?X_Q (PERTAIN-TO ?X_P)))
			(!R5 (?X_Q FATHER.N))
			(!R6 (NOT ((TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N))))) AGENT.N)))
			(!R7 (?X_U SMALLER-THAN.N ?X_S))
			(!R8 (?L2 DESTINATION.N))
			(!R9 (?L2 HOME.N))
			(!R10 (?X_S AGENT.N))
			(!R11 (NOT (?X_S = ?X_U)))
			(!R12 (?X_U OBJECT.N))
			(!R13 (?X_T AGENT.N))
			(!R14 (?X_T FEMALE.A))
			(!R15 (NOT (?X_U ACTION.N)))
			(!R16 (NOT (?X_U AGENT.N)))
		)
		(:STEPS
			(?X_K (?X_A (((ADV-A (TO.P ?X_P)) GIVE.V) ?X_B)))
			(?X_I (?X_Q (GIVE.9.V ?X_P (TWO.D (L X (AND (X RED.A) (X (PLUR ONE.N))))))))
			(?X_C (?X_P (KEEP.V ?X_G)))
			(?X_D (?X_S TRANSPORT_OBJECT.18.V ?X_U ?L2))
			(?X_D (?X_S (((ADV-A (AT.P ?X_F)) ((ADV-A (WITH.P ?X_S)) TAKE.18.V)) ?X_U)))
			(?X_E (?X_T LIKE.33.V ?X_U))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_C)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_K (BEFORE ?X_E)))
			(!W5 (?X_I (BEFORE ?X_C)))
			(!W6 (?X_I (BEFORE ?X_D)))
			(!W7 (?X_I (BEFORE ?X_E)))
		)
	)
	(
			"X_A gives X_B to a agent."
			"A father of a agent give.177s a agent two red one."
			"A agent keeps a flower red."
			"A agent transport object.173s a object a destination home."
			"A agent take.174s a object at X_F with a agent."
			"A agent female like.176s a object."
		adding constraint (I$0$299.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_I)) FIND.44.V) ?X_C)) ** ?X_H)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C DAY.N))
			(!R4 (?X_A HAIR.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_C BAD.A))
			(!R7 (?X_I THERE.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_D (AFTER ?X_H)))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
			(!W4 (?X_F (AT-ABOUT ?X_E)))
			(!W5 (?X_F (AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_I)) FIND.45.V) ?X_C)) ** ?X_H)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C MESS.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
			(!R5 (?X_A HAIR.N))
			(!R6 (?X_I THERE.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_D (AFTER ?X_H)))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
			(!W4 (?X_F (AT-ABOUT ?X_E)))
			(!W5 (?X_F (AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-237.PR (K (L X (AND (X HAIR.N) (X STUFF.N)))) ?X_L
	               ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K HAIR.N))
			(!R2 (?X_K (PERTAIN-TO ?X_M)))
			(!R3 (?X_L DAY.N))
			(!R4 (?X_L BAD.A))
			(!R5 (?X_M AGENT.N))
			(!R6 (?X_N MESS.N))
		)
		(:STEPS
			(?X_J (?X_K (BE.V ?X_N)))
			(?X_B (?X_M (THERE.ADV BE.V)))
			(?X_G (?X_M (GET.V (K (L X (AND (X HAIR.N) (X STUFF.N)))))))
			(?X_C (?X_M (((ADV-A (AT.P ?X_I)) FIND.44.V) ?X_L)))
			(?X_C (?X_M (((ADV-A (AT.P ?X_I)) FIND.45.V) ?X_N)))
			(?X_E (?X_M (GET.V (K (L X (AND (X HAIR.N) (X STUFF.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_B (BEFORE ?X_G)))
			(!W4 (?X_C (BEFORE ?X_E)))
		)
	)
	(
			"A hair of a agent is a mess."
			"A agent is there."
			"A agent gets hair stuff."
			"A agent find.192s a day bad at X_I."
			"A agent find.194s a mess at X_I."
			"A agent gets hair stuff."
	)
)



(
	(EPI-SCHEMA ((?X_C
	              (COMPOSITE-SCHEMA-238.PR
	               (K (L X (AND (X MANY.A) (X (PLUR STAR.N)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
		)
		(:STEPS
			(?X_E (?X_C (SEE.V (K (L X (AND (X MANY.A) (X (PLUR STAR.N))))))))
			(?X_B ((K NIGHT.N) COME.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent sees many star."
			"Night comes."
	)
)



(
	(EPI-SCHEMA ((?X_A GET.28.V
	              (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT ((K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))) AGENT.N)))
			(!R3 (NOT ((K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))))))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT
	      (?X_A (HAVE.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N))))))))))))
			(?G2 (?X_A (NEED.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))))))
			(?G3 (?X_A (WANT.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-239.PR ?X_J ?X_C
	               (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C HEATER.N))
			(!R2 (?X_C (FOR.P (K WATER.N))))
			(!R3 (?X_J POOL.N))
			(!R4 (?X_K MAN.N))
			(!R5 (NOT ((K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))) AGENT.N)))
			(!R6 (NOT ((K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))) ACTION.N)))
			(!R7 (NOT (?X_K = (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N)))))))))
		)
		(:STEPS
			(?X_I (?X_K (((ADV-A (WITH.P (K WATER.N))) FILL.V) ?X_J)))
			(?X_G (?X_K ((ADV-A (IN.P ?X_J)) JUMP.V)))
			(?X_E (?X_K GET.28.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D POOL.N))))))))
			(?X_B (?X_K (BUY.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A man fills a pool with water."
			"A man jumps in a pool."
			"A man get.249s out of."
			"A man buys a heater for water."
		adding constraint (I$0$377.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (ON.P ?X_B)) SIT.2.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B CHAIR.N))
			(!R4 (?L LOCATION.N))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA REST.V))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (IN.P ?X_B)) SIT.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((DOWN.ADV ((ADV-A (AT.P ?X_A)) FIND.46.V)) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C CRACK.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
			(!R5 (?X_A CHAIR.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((DOWN.ADV ((ADV-A (AT.P ?X_A)) FIND.47.V)) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C CRACK.N))
			(!R4 (?X_A CHAIR.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_C TINY.A))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-240.PR ?X_G ?X_J ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_G LITTLE.A))
			(!R2 (NOT (?X_L AGENT.N)))
			(!R3 (?X_J CRACK.N))
			(!R4 (?X_K TINY.A))
			(!R5 (?X_K CRACK.N))
			(!R6 (?X_L CHAIR.N))
			(!R7 (?X_L (PERTAIN-TO ?X_M)))
			(!R8 (?X_M AGENT.N))
		)
		(:STEPS
			(?X_I (?X_M ((ADV-A (ON.P ?X_L)) SIT.2.V)))
			(?X_F (?X_M (((ADV (TOO.ADV FAR.A)) (BACK.PRT LEAN.V)) ?X_G)))
			(?X_D (?X_M (HEAR.V ?X_K)))
			(?X_B (?X_M ((DOWN.ADV ((ADV-A (AT.P ?X_L)) FIND.46.V)) ?X_J)))
			(?X_B (?X_M ((DOWN.ADV ((ADV-A (AT.P ?X_L)) FIND.47.V)) ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_B)))
			(!W2 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent sit.262s on a chair of a agent."
			"A agent leans a little ADV too far back."
			"A agent hears a tiny crack."
			"A agent find.265s a crack down at a chair of a agent."
			"A agent find.266s a tiny crack down at a chair of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-241.PR (KE (?X_J (HAVE.V ?X_F))) ?X_J ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_A STREET.N))
			(!R2 (?X_F WATCH.N))
			(!R3 (?X_I AGENT.N))
			(!R4 (?X_J GUY.N))
			(!R5 (?X_K TIME.N))
		)
		(:STEPS
			(?X_C (?X_I ((ADV-A (DOWN.P ?X_A)) WALK.V)))
			(?X_E (?X_I (NOTICE.V (KE (?X_J (HAVE.V ?X_F))))))
			(?X_H (?X_I (NOTICE.V (KE (?X_J (HAVE.V ?X_F))))))
			(?X_M (?X_I (ASK.V ?X_J ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_M)))
			(!W4 (?X_E (BEFORE ?X_H)))
			(!W5 (?X_E (BEFORE ?X_M)))
			(!W6 (?X_H (BEFORE ?X_M)))
		)
	)
	(
			"A agent walks down a street."
			"A agent notices a guy has a watch."
			"A agent notices a guy has a watch."
			"A agent asks a guy a time."
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (FROM.P ?X_A)) RUN.21.V) ?L2)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B HARE.N))
			(!R2 (?X_A LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_A = ?L2)))
			(!R5 (?X_A DOG.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.21.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.21.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.21.V) ?L2))
			(?X_C (?X_B RUN.21.V))
			(?X_C (?X_B RUN.21.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.21.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-242.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C HARE.N))
			(!R2 (?X_D LOCATION.N))
			(!R3 (?X_D DOG.N))
			(!R4 (NOT (?X_D = ?L2)))
			(!R5 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_B (?X_C (((ADV-A (FROM.P ?X_D)) RUN.21.V) ?L2)))
		)
	)
	(
			"A hare run.294s a destination from a location dog."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) RUN.22.V) (KA (GET.V (K HELP.N)))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_C FRIEND.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (GET.V (K HELP.N))) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (GET.V (K HELP.N))))))
			(!R5 (?X_C (PERTAIN-TO ?X_A)))
			(!R6 (?X_A GIRL.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_B HEAD.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P (KA (GET.V (K HELP.N))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KA (GET.V (K HELP.N)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KA (GET.V (K HELP.N))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA (GET.V (K HELP.N)))))
	     ((ADV-A (FOR.P (KA (GET.V (K HELP.N))))) RUN.22.V))))
			(?X_D
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (GET.V (K HELP.N))))) RUN.22.V))))
			(?X_D
	   (?X_C ((ADV-A (DESTINATION_PREP.? (KA (GET.V (K HELP.N))))) RUN.22.V)
	    (KA (GET.V (K HELP.N)))))
			(?X_D (?X_C RUN.22.V))
			(?X_D (?X_C RUN.22.V (KA (GET.V (K HELP.N)))))
			(?X_D (?X_C (LOCATION_ADV.? RUN.22.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (SAME-TIME ?X_G)))
			(!W7 (?X_D (RIGHT-AFTER ?X_E)))
			(!W8 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) RUN.23.V) (KA (GET.V (K HELP.N)))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_C FRIEND.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (GET.V (K HELP.N))) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (GET.V (K HELP.N))))))
			(!R5 (?X_C (PERTAIN-TO ?X_B)))
			(!R6 (?X_B GIRL.N))
			(!R7 (?X_A HEAD.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P (KA (GET.V (K HELP.N))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KA (GET.V (K HELP.N)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KA (GET.V (K HELP.N))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA (GET.V (K HELP.N)))))
	     ((ADV-A (FOR.P (KA (GET.V (K HELP.N))))) RUN.23.V))))
			(?X_D
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (GET.V (K HELP.N))))) RUN.23.V))))
			(?X_D
	   (?X_C ((ADV-A (DESTINATION_PREP.? (KA (GET.V (K HELP.N))))) RUN.23.V)
	    (KA (GET.V (K HELP.N)))))
			(?X_D (?X_C RUN.23.V))
			(?X_D (?X_C RUN.23.V (KA (GET.V (K HELP.N)))))
			(?X_D (?X_C (LOCATION_ADV.? RUN.23.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (BEFORE ?X_E)))
			(!W7 (?X_F (SAME-TIME ?X_E)))
			(!W8 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((UP.PRT FIND.48.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C GIRL.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D THING.N))
			(!R4 (?X_A (PERTAIN-TO ?X_C)))
			(!R5 (?X_A FRIEND.N))
			(!R6 (?X_B HEAD.N))
			(!R7 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (ON.P ?X_A)) BUMP.1.V) ?X_D)) ** ?X_H)
		(:ROLES
			(!R1 (?X_C GIRL.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D HEAD.N))
			(!R4 (?X_A THING.N))
			(!R5 (?X_D (PERTAIN-TO ?X_C)))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_B FRIEND.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (SAME-TIME ?X_G)))
			(!W3 (?X_H (RIGHT-AFTER ?X_E)))
			(!W4 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P (COMPOSITE-SCHEMA-243.PR (KA (GET.V (K HELP.N))) ?X_N ?X_O)) **
	             ?E)
		(:ROLES
			(!R1 (?X_Q (PERTAIN-TO ?X_P)))
			(!R2 (?X_N THING.N))
			(!R3 (?X_P GIRL.N))
			(!R4 (?X_O HEAD.N))
			(!R5 (?X_O (PERTAIN-TO ?X_P)))
			(!R6 ((KA (GET.V (K HELP.N))) DESTINATION.N))
			(!R7 (?X_Q FRIEND.N))
		)
		(:STEPS
			(?X_K (?X_P (BUMP.V ?X_O ?X_N)))
			(?X_G (?X_O BLEED.V))
			(?X_E (?X_Q ((ADV-A (FROM.P ?L1)) RUN.23.V) (KA (GET.V (K HELP.N)))))
			(?X_M (?X_P ((UP.PRT FIND.48.V) ?X_N)))
			(?X_A (?X_P (((ADV-A (ON.P ?X_N)) BUMP.1.V) ?X_O)))
			(?X_I (?X_P (DOWN.ADV (BACK.PRT SIT.V))))
			(?X_B (?X_O BLEED.V))
			(?X_C (?X_Q ((ADV-A (FROM.P ?L1)) RUN.22.V) (KA (GET.V (K HELP.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_A)))
			(!W2 (?X_K (BEFORE ?X_I)))
			(!W3 (?X_K (BEFORE ?X_B)))
			(!W4 (?X_K (BEFORE ?X_C)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_G (BEFORE ?X_C)))
			(!W7 (?X_E (BEFORE ?X_C)))
			(!W8 (?X_M (BEFORE ?X_A)))
			(!W9 (?X_M (BEFORE ?X_I)))
			(!W10 (?X_M (BEFORE ?X_B)))
			(!W11 (?X_M (BEFORE ?X_C)))
			(!W12 (?X_A (BEFORE ?X_I)))
			(!W13 (?X_A (BEFORE ?X_B)))
			(!W14 (?X_A (BEFORE ?X_C)))
			(!W15 (?X_I (BEFORE ?X_B)))
			(!W16 (?X_I (BEFORE ?X_C)))
			(!W17 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"A girl bumps a head of a girl a thing."
			"A head of a girl bleeds."
			"A friend of a girl run.320s getting help from L1."
			"A girl find.314s a thing up."
			"A girl bump.315s a head of a girl on a thing."
			"A girl sits down back."
			"A head of a girl bleeds."
			"A friend of a girl run.319s getting help from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.38.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C STUDIO.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C DESTINATION.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A WALL.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) GO.38.V))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.38.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.38.V) ?X_C))
			(?X_D (?X_B GO.38.V))
			(?X_D (?X_B GO.38.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.38.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TAKE.19.V (TWO.D (PLUR PICTURE.N))) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((TWO.D (PLUR PICTURE.N)) AGENT.N)))
			(!R3 (NOT ((TWO.D (PLUR PICTURE.N)) ACTION.N)))
			(!R4 (?X_A STUDIO.N))
			(!R5 (NOT (?X_B = (TWO.D (PLUR PICTURE.N)))))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (TWO.D (PLUR PICTURE.N))))))))
			(?G2 (?X_B (NEED.V (TWO.D (PLUR PICTURE.N)))))
			(?G3 (?X_B (WANT.V (TWO.D (PLUR PICTURE.N)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (TWO.D (PLUR PICTURE.N)))))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 ((TWO.D (PLUR PICTURE.N)) (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (TWO.D (PLUR PICTURE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((MUST.AUX-S
	              (?X_C
	               (TAKE.20.V
	                (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))))))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT ((K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))) AGENT.N)))
			(!R3 (NOT ((K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))) ACTION.N)))
			(!R4 (?X_B STUDIO.N))
			(!R5 (NOT (?X_C = (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))))))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A WALL.N))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V
	     (THAT
	      (?X_C (HAVE.V (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N)))))))))))
			(?G2 (?X_C (NEED.V (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))))))
			(?G3 (?X_C (WANT.V (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))))))
		)
		(:PRECONDS
			(?I1
	   (NOT (?X_C HAVE.V (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))))))
			(?I2 (?X_C (AT.P ?X_B)))
			(?I3 ((K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))) (AT.P ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-244.PR ?X_L ?X_E ?X_M (TWO.D (PLUR PICTURE.N))
	               (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E JACKET.N))
			(!R2 (?X_J WALL.N))
			(!R3 (?X_J (PERTAIN-TO ?X_L)))
			(!R4 (NOT ((K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))) AGENT.N)))
			(!R5 (NOT ((K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))) ACTION.N)))
			(!R6 (NOT (?X_L = (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N))))))))
			(!R7 (?X_L AGENT.N))
			(!R8 (?X_M DESTINATION.N))
			(!R9 (?X_M STUDIO.N))
			(!R10 (?X_N AGENT.N))
			(!R11 (NOT ((TWO.D (PLUR PICTURE.N)) AGENT.N)))
			(!R12 (NOT ((TWO.D (PLUR PICTURE.N)) ACTION.N)))
			(!R13 (NOT (?X_N = (TWO.D (PLUR PICTURE.N)))))
		)
		(:STEPS
			(?X_I
	   (MUST.AUX-S
	    (?X_L (TAKE.20.V (K (L X (AND (X GRADUATION.N) (X (PLUR PICTURE.N)))))))))
			(?X_G (?X_L ((ADV-A (FROM.P ?L1)) GO.38.V) ?X_M))
			(?X_D (?X_N (GIVE.V ?X_L ?X_E)))
			(?X_B (?X_N TAKE.19.V (TWO.D (PLUR PICTURE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_D)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_D)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent take.335s graduation picture must."
			"A agent go.337s a destination studio from L1."
			"A agent gives a agent a jacket."
	)
)



(
	(EPI-SCHEMA ((?X_C GET.16.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C WIFE.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_A (HAS.V ?X_B)))
			(!R8 (?X_B MOUSE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?G2 (?X_C (NEED.V ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_D (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (SAME-TIME ?X_H)))
			(!W6 (?X_E (RIGHT-AFTER ?X_F)))
			(!W7 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C GET.29.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C WIFE.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (NOT (?X_D ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?X_D)))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_A (HAS.V ?X_B)))
			(!R8 (?X_B MOUSE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?X_D))))))
			(?G2 (?X_C (NEED.V ?X_D)))
			(?G3 (?X_C (WANT.V ?X_D)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?X_D)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_D (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (BEFORE ?X_F)))
			(!W6 (?X_G (SAME-TIME ?X_F)))
			(!W7 (?X_G (RIGHT-AFTER ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-245.PR (KA (GET.V ?X_H)) ?X_A ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_H CAT.N))
			(!R2 (?X_K (PERTAIN-TO ?X_I)))
			(!R3 (?X_J MOUSE.N))
			(!R4 (?X_I (HAS.V ?X_J)))
			(!R5 (?X_K WIFE.N))
			(!R6 (NOT (?X_L AGENT.N)))
			(!R7 (NOT (?X_L ACTION.N)))
			(!R8 (NOT (?X_K = ?X_L)))
		)
		(:STEPS
			(?X_B (?X_K (WANT.V (KA (GET.V ?X_H)))))
			(?X_C (?X_K (WANT.V (KA (GET.V ?X_H)))))
			(?X_D (?X_I (SAY.V ?X_A)))
			(?X_G (?X_K GET.29.V ?X_L))
			(?X_E (?X_K GET.16.V ?X_L))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
			(!W2 (?X_B (BEFORE ?X_E)))
			(!W3 (?X_C (BEFORE ?X_D)))
			(!W4 (?X_C (BEFORE ?X_E)))
			(!W5 (?X_D (BEFORE ?X_E)))
			(!W6 (?X_G (BEFORE ?X_E)))
		)
	)
	(
			"A wife of a has X_J wants getting a cat."
			"A wife of a has X_J wants getting a cat."
			"A has a mouse says X_A."
			"A wife of a has X_J get.7s X_L."
			"A wife of a has X_J get.6s X_L."
	)
)



(
	(EPI-SCHEMA ((?X_C PLAY.16.V) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 ((KE ((K MONEY.N) (FOR.P (?X_B BET.N)))) TOY.N))
			(!R3 (NOT ((KE ((K MONEY.N) (FOR.P (?X_B BET.N)))) AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_B MORE.A))
			(!R7 (?X_A BET.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?X_D (?X_C ((ONLY.ADV HAVE.V) (KE ((K MONEY.N) (FOR.P (?X_B BET.N)))))))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_F
	   (?X_C ((ADV-A (WITH.P (KE ((K MONEY.N) (FOR.P (?X_B BET.N)))))) PLAY.16.V)))
			(?X_F (?X_C PLAY.16.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
			(!W2 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A MAKE.10.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B BET.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-246.PR (KE ((K MONEY.N) (FOR.P (?X_H BET.N))))
	               (ALL.D
	                (L X
	                 (AND (X {REF}.N)
	                      (?X_A ?X_C (AND (?X_C MONEY.N) (?X_C (PERTAIN-TO ?X_M)))
	                       (X (OF.P ?X_C))))))
	               ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H MORE.A))
			(!R2 (?X_N BET.N))
			(!R3 (?X_M MAN.N))
			(!R4 (NOT (?X_N AGENT.N)))
		)
		(:STEPS
			(?X_J (?X_M (LOSE.V ?X_N)))
			(?X_E
	   (?X_M
	    (LOSE.V
	     (ALL.D
	      (L X
	       (AND (X {REF}.N)
	            (?X_A ?X_C (AND (?X_C MONEY.N) (?X_C (PERTAIN-TO ?X_M)))
	             (X (OF.P ?X_C)))))))))
			(?X_L (?X_M PLAY.16.V))
			(?X_L (?X_M MAKE.10.V ?X_N))
			(?X_G (?X_M ((ONLY.ADV HAVE.V) (KE ((K MONEY.N) (FOR.P (?X_H BET.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_E)))
			(!W2 (?X_L (BEFORE ?X_G)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_B FIND.14.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C ANSWER.N))
			(!R4 (NOT ((K (PLUR PERSON.N)) (LIKE.P ?X_C))))
			(!R5 (?X_A STREET.N))
			(!R6 (?X_B (IN.P ?X_A)))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (PLUR PERSON.N)) GET.30.V
	              (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))))
	             ** ?X_B)
		(:ROLES
			(!R1 ((K (PLUR PERSON.N)) AGENT.N))
			(!R2 (NOT ((K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))) AGENT.N)))
			(!R3 (NOT ((K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5
	   (NOT
	    ((K (PLUR PERSON.N)) =
	     (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))))))
		)
		(:GOALS
			(?G1
	   ((K (PLUR PERSON.N))
	    (WANT.V
	     (THAT
	      ((K (PLUR PERSON.N))
	       (HAVE.V (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N))))))))))))
			(?G2
	   ((K (PLUR PERSON.N))
	    (NEED.V (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))))))
			(?G3
	   ((K (PLUR PERSON.N))
	    (WANT.V (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))))))
		)
		(:PRECONDS
			(?I1
	   (NOT
	    ((K (PLUR PERSON.N)) HAVE.V
	     (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))))))
			(?I2 ((K (PLUR PERSON.N)) (AT.P ?L)))
			(?I3 ((K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1
	   ((K (PLUR PERSON.N)) HAVE.V
	    (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K (PLUR PERSON.N))
	              (COMPOSITE-SCHEMA-247.PR ?X_H ?X_I
	               (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G STREET.N))
			(!R2 (?X_H (IN.P ?X_G)))
			(!R3 (?X_I ANSWER.N))
			(!R4 (?X_H MAN.N))
			(!R5 (NOT ((K (PLUR PERSON.N)) (LIKE.P ?X_I))))
			(!R6 ((K (PLUR PERSON.N)) AGENT.N))
			(!R7 (NOT ((K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))) AGENT.N)))
			(!R8 (NOT ((K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))) ACTION.N)))
			(!R9
	   (NOT
	    ((K (PLUR PERSON.N)) =
	     (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N)))))))))
		)
		(:STEPS
			(?X_F (?X_H FIND.14.V ?X_I))
			(?X_D
	   ((K (PLUR PERSON.N)) GET.30.V
	    (K (L X (AND (X ANGRY.A) (X (AT.P (THE.D MAN.N))))))))
			(?X_B ((K (PLUR PERSON.N)) (HANG.V ?X_H)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man in a street find.37s a answer."
			"Persons get.45 angry at."
			"Persons hang a man in a street."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.39.V) (KA WALK.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA WALK.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA WALK.V))))
			(!R5 (?X_A DAY.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (KA WALK.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (KA WALK.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (KA WALK.V))))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING ?X_A))
	    (?X_B
	     ((ADV-A (DESTINATION_PREP.? (KA WALK.V)))
	      (OUT.PRT ((ADV-A (FOR.P (KA WALK.V))) GO.39.V))))))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (KA WALK.V))) GO.39.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (KA WALK.V))) GO.39.V) (KA WALK.V)))
			(?X_C (?X_B GO.39.V))
			(?X_C (?X_B GO.39.V (KA WALK.V)))
			(?X_C (?X_B (LOCATION_ADV.? GO.39.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-248.PR ?X_C (KA WALK.V))) ** ?E)
		(:ROLES
			(!R1 (?X_C GREEN.A))
			(!R2 (?X_C BIRD.N))
			(!R3 (?X_H DAY.N))
			(!R4 (?X_I AGENT.N))
			(!R5 ((KA WALK.V) DESTINATION.N))
		)
		(:STEPS
			(?X_G (?X_I ((ADV-A (FROM.P ?L1)) GO.39.V) (KA WALK.V)))
			(?X_E (?X_I (UP.PRT LOOK.V)))
			(?X_B (?X_I (SEE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.53s walking from L1."
			"A agent looks up."
			"A agent sees a green bird."
	)
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-249.PR (KA ((ADV-A (ON.P ?X_E)) RIDE.V))
	               (KA ((ADV-A (IN.P ?X_H)) PLAY.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E SLED.A))
			(!R2 (?X_E NEW.A))
			(!R3 (?X_E SLED.N))
			(!R4 (?X_D (HAS.V ?X_E)))
			(!R5 (?X_H WHITE.A))
			(!R6 (?X_H SNOW.N))
		)
		(:STEPS
			(?X_G (?X_A (LIKE.V (KA ((ADV-A (ON.P ?X_E)) RIDE.V)))))
			(?X_J
	   ((K (L X (AND (X BABY.N) (X ?X_C))))
	    (LIKE.V (KA ((ADV-A (IN.P ?X_H)) PLAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_J)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (ON.P ?X_A)) FIND.49.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D MONEY.N))
			(!R4 (?X_A GROUND.N))
			(!R5 (NOT (?X_C (HAVE.V ?X_B))))
			(!R6 (?X_B MONEY.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-250.PR (KA (BUY.V ?X_I)) ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_I NEW.A))
			(!R2 (?X_I BOOK.N))
			(!R3 (?X_J MONEY.N))
			(!R4 (NOT (?X_K (HAVE.V ?X_J))))
			(!R5 (?X_K AGENT.N))
			(!R6 (?X_L MONEY.N))
			(!R7 (?X_M GROUND.N))
		)
		(:STEPS
			(?X_H (?X_K (WANT.V (KA (BUY.V ?X_I)))))
			(?X_D (?X_K ((UP.PRT PICK.V) ?X_L)))
			(?X_B (?X_K (((ADV-A (FOR.P (KA (BUY.V ?X_I)))) USE.V) ?X_L)))
			(?X_F (?X_K (((ADV-A (ON.P ?X_M)) FIND.49.V) ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_D)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent wants buying a new book."
			"A agent picks a money up."
			"A agent uses a money for buying a new book."
			"A agent find.91s a money on a ground."
	)
)



(
	(EPI-SCHEMA ((?X_E
	              (((ADV-A
	                 (ON.P
	                  (TWO.D
	                   (L X
	                    (AND (X LONG.A (PLUR POLE.N))
	                         (X (OVER.P (THE.D WATER.N))))))))
	                FIND.50.V)
	               ?X_F))
	             ** ?X_H)
		(:ROLES
			(!R1 (?X_E FISHERMAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_F ENTITY.N))
			(!R4 (?X_E (READY.A (KA (((ADV-A (INTO.P ?X_C)) PUT.V) ?X_B)))))
			(!R5 (?X_E (HAS.V ?X_A)))
			(!R6 (?X_B NET.N))
			(!R7 (?X_B LARGER.A))
			(!R8 (?X_B (PERTAIN-TO ?X_E)))
			(!R9 (?X_C WATER.N))
			(!R10 (?X_F (PLUR MAN.N)))
			(!R11 (?X_F (IN.P ?X_D)))
			(!R12 (?X_D (PLUR BOAT.N)))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 (?X_E ((ADV-A (FOR.P ?X_F)) SEARCH.V)))
			(?I4 (NOT (?X_E (KNOW.V (THAT (?X_F (AT.P ?L)))))))
			(?I5 (NOT (?X_E (HAVE.V ?X_F))))
		)
		(:POSTCONDS
			(?P1 (?X_E (KNOW.V (THAT (?X_F (AT.P ?L))))))
			(?P2 (?X_E (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-251.PR ?X_F ?X_A ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_F NET.N))
			(!R2 (?X_F (PERTAIN-TO ?X_G)))
			(!R3 (?X_J NET.N))
			(!R4 (?X_J LARGER.A))
			(!R5 (?X_O (READY.A (KA (((ADV-A (INTO.P ?X_L)) PUT.V) ?X_J)))))
			(!R6 (?X_J (PERTAIN-TO ?X_O)))
			(!R7 (?X_O (HAS.V ?X_K)))
			(!R8 (?X_L WATER.N))
			(!R9 (?X_M (PLUR BOAT.N)))
			(!R10 (?X_N (IN.P ?X_M)))
			(!R11 (?X_N (PLUR MAN.N)))
			(!R12 (?X_O FISHERMAN.N))
		)
		(:STEPS
			(?X_C (?X_J (THAN.P ?X_F)))
			(?X_E (?X_N (USE.V ?X_A)))
			(?X_I
	   (?X_O
	    (((ADV-A
	       (ON.P
	        (TWO.D
	         (L X (AND (X LONG.A (PLUR POLE.N)) (X (OVER.P (THE.D WATER.N))))))))
	      FIND.50.V)
	     ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
		)
	)
	(
			"A net larger of a ready into a water putting a net larger of a ready into X_L putting X_J fisherman has X_K fisherman has X_K is than."
			"A mans in a boats use X_A."
			"A ready into a water putting a net larger of a ready into X_L putting X_J fisherman has X_K fisherman has X_K find.112s a mans in a boats on two pole over."
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.19.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B FROG.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_B GIANT.A))
			(!R7 (?X_A (PLUR GIRL.N)))
			(!R8 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A (TAKE.V ?X_B)))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A BRING.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_C (AT-ABOUT ?X_E)))
			(!W4 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.40.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A (PLUR GIRL.N)))
			(!R6 (?X_B POND.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.40.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.40.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.40.V) ?X_B))
			(?X_C (?X_A GO.40.V))
			(?X_C (?X_A GO.40.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.40.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P ?X_C)) PUT.7.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_C BUCKET.N))
			(!R4 (NOT (?X_C AGENT.N)))
			(!R5 (?X_B SMALLER-THAN ?X_C))
			(!R6 (?X_B GIANT.A))
			(!R7 (?X_B FROG.N))
			(!R8 (?X_A (PLUR GIRL.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (IN.P ?X_C))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B (IN.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (IN.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (INTO.P ?X_C)) PUT.7.V) ?X_B))
			(?X_D (?X_A ((ADV-A (INSIDE.P ?X_C)) PUT.7.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_F)))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-252.PR (K ((ADV-A (FOR.P ?X_C)) (WITH.P ?X_N))) ?L2
	               ?X_L ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C MONTH.N))
			(!R2 (?X_L DESTINATION.N))
			(!R3 (?X_L POND.N))
			(!R4 (?X_M SMALLER-THAN.N ?X_N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 HOME.N))
			(!R7 (?X_O BUCKET.N))
			(!R8 (?X_M SMALLER-THAN ?X_O))
			(!R9 (?X_M GIANT.A))
			(!R10 (?X_M FROG.N))
			(!R11 (?X_N (PLUR GIRL.N)))
			(!R12 (NOT (?X_O AGENT.N)))
		)
		(:STEPS
			(?X_K (?X_N ((ADV-A (FROM.P ?L1)) GO.40.V) ?X_L))
			(?X_I (?X_N (CATCH.V ?X_M)))
			(?X_G (?X_N TRANSPORT_OBJECT.19.V ?X_M ?L2))
			(?X_E (?X_N (((ADV-A (IN.P ?X_O)) PUT.7.V) ?X_M)))
			(?X_B (?X_M (LIVE.V (K ((ADV-A (FOR.P ?X_C)) (WITH.P ?X_N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_E)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_G (BEFORE ?X_B)))
			(!W9 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A girls go.128 a destination pond from L1."
			"A girls catch a giant frog."
			"A girls transport object.119 a giant frog a destination home."
			"A girls put.123 a giant frog in a bucket."
			"A giant frog lives for a month with a girls."
		adding constraint (I$0$145.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.41.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B STORE.N))
			(!R6 (?X_B TODAY.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.41.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.41.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.41.V) ?X_B))
			(?X_C (?X_A GO.41.V))
			(?X_C (?X_A GO.41.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.41.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-253.PR ?X_E (SIX.D (PLUR DOLLAR.N)) ?X_I)) **
	             ?E)
		(:ROLES
			(!R1 (?X_E (PLUR CHIP.N)))
			(!R2 (?X_H AGENT.N))
			(!R3 (?X_I DESTINATION.N))
			(!R4 (?X_I STORE.N))
			(!R5 (?X_I TODAY.N))
		)
		(:STEPS
			(?X_G (?X_H ((ADV-A (FROM.P ?L1)) GO.41.V) ?X_I))
			(?X_D (?X_H (SEE.V ?X_E)))
			(?X_B (?X_E (BE.V (SIX.D (PLUR DOLLAR.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.136s a destination store today from L1."
			"A agent sees a chips."
			"A chips are six dollars."
	)
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-254.PR (K DIZZY.A) (K SICK.A))) ** ?E)
		(:ROLES
			(!R1 (?X_A COUPLE.N))
			(!R2 (?X_J WOMAN.N))
			(!R3 (?X_K MAN.N))
		)
		(:STEPS
			(?X_C (?X_A (OUT.PRT WORK.V)))
			(?X_E (?X_J (FEEL.V (K DIZZY.A))))
			(?X_G (?X_K (DOWN.ADV ((ADV-A (WITH.P ?X_J)) SIT.V))))
			(?X_I (?X_J (FEEL.V (K SICK.A))))
			(?X_M (?X_J (UP.PRT ((ADV-A (ON.P ?X_K)) THROW.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_G)))
			(!W3 (?X_C (BEFORE ?X_I)))
			(!W4 (?X_C (BEFORE ?X_M)))
			(!W5 (?X_E (BEFORE ?X_G)))
			(!W6 (?X_E (BEFORE ?X_I)))
			(!W7 (?X_E (BEFORE ?X_M)))
			(!W8 (?X_G (BEFORE ?X_I)))
			(!W9 (?X_G (BEFORE ?X_M)))
			(!W10 (?X_I (BEFORE ?X_M)))
		)
	)
	(
			"A couple works out."
			"A woman feels dizzy."
			"A man sits down with a woman."
			"A woman feels sick."
			"A woman throws up on a man."
	)
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-255.PR ?X_A ?X_L ?X_H
	               (KE ((K (PLUR PET.N)) (IN.P ?X_K)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H PET.N))
			(!R2 (?X_L (PLUR PARENT.N)))
			(!R3 (?X_K HOUSE.N))
			(!R4 (?X_L (PERTAIN-TO ?X_M)))
		)
		(:STEPS
			(?X_E (?X_M (BE.V ?X_A)))
			(?X_G (?X_M (WITH.P ?X_L)))
			(?X_B (?X_M ((ADV-A (WITH.P ?X_L)) LIVE.V)))
			(?X_J (?X_M (WANT.V ?X_H)))
			(?X_C (NOT (?X_L (ALLOW.V (KE ((K (PLUR PET.N)) (IN.P ?X_K)))))))
			(?X_O (?X_M CRY.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_G)))
			(!W2 (?X_E (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_J)))
			(!W4 (?X_E (BEFORE ?X_C)))
			(!W5 (?X_E (BEFORE ?X_O)))
			(!W6 (?X_G (BEFORE ?X_B)))
			(!W7 (?X_G (BEFORE ?X_J)))
			(!W8 (?X_G (BEFORE ?X_C)))
			(!W9 (?X_G (BEFORE ?X_O)))
			(!W10 (?X_B (BEFORE ?X_J)))
			(!W11 (?X_B (BEFORE ?X_C)))
			(!W12 (?X_B (BEFORE ?X_O)))
			(!W13 (?X_J (BEFORE ?X_C)))
			(!W14 (?X_J (BEFORE ?X_O)))
			(!W15 (?X_C (BEFORE ?X_O)))
		)
	)
	(
			"X_M is X_A."
			"X_M is with."
			"X_M lives with a parents of X_M."
			"X_M wants a pet."
			"A parents of X_M allow pets in a house not."
			"X_M cries."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.42.V) (K PRISON.N)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K PRISON.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K PRISON.N))))
			(!R5 (?X_A INNOCENT.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K PRISON.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K PRISON.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K PRISON.N))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (K PRISON.N)))
	     ((ADV-A (TO.P (K PRISON.N))) GO.42.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K PRISON.N))) GO.42.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K PRISON.N))) GO.42.V) (K PRISON.N)))
			(?X_B (?X_A GO.42.V))
			(?X_B (?X_A GO.42.V (K PRISON.N)))
			(?X_B (?X_A (LOCATION_ADV.? GO.42.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-256.PR (FIVE.D (PLUR YEAR.N)) (KA INNOCENT.A)
	               (K PRISON.N)))
	             ** ?E)
		(:ROLES
			(!R1 ((K PRISON.N) DESTINATION.N))
			(!R2 (?X_J MAN.N))
			(!R3 (?X_J INNOCENT.A))
		)
		(:STEPS
			(?X_I (?X_J ((ADV-A (FROM.P ?L1)) GO.42.V) (K PRISON.N)))
			(?X_G (?X_J ((ADV-A (FOR.P (ANOTHER.D TRIAL.N))) ASK.V)))
			(?X_E
	   (?X_A
	    (((ADV-A (FOR.P (KA (GET.V (K ONE.N))))) TAKE.V) (FIVE.D (PLUR YEAR.N)))))
			(?X_C (?X_J ((PASV FIND.V) (KA INNOCENT.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man innocent go.171s prison from L1."
			"A man innocent asks for another trial."
			"X_A takes five years for getting one."
			"A man innocent is PASV finds."
		adding constraint (ME$0$208.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-257.PR (KE (?X_B COME.V)))) ** ?E)
		(:ROLES
			(!R1 (?X_A FISH.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?X_E WATER.N))
		)
		(:STEPS
			(?X_D (?X_A (KNOW.V (KE (?X_B COME.V)))))
			(?X_G (?X_E ((ADV-A (FOR.P (KA MOVE.V))) START.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_G)))
		)
	)
	(
			"A fish knows a agent comes."
			"A water starts for moving."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.34.V (K (PLUR CRUMB.N))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A BIRD.N))
			(!R2 (NOT ((K (PLUR CRUMB.N)) ACTION.N)))
			(!R3 (NOT ((K (PLUR CRUMB.N)) AGENT.N)))
			(!R4 ((K (PLUR CRUMB.N)) OBJECT.N))
			(!R5 (?X_A LITTLE.A))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V (K (PLUR CRUMB.N)))))))
		)
		(:PARAPHRASES
			(?X_B (?X_A WANT.V (K (PLUR CRUMB.N))))
			(?X_B (?X_A (WANT.V (K (PLUR CRUMB.N)))))
			(?X_B (?X_A (LIKE.34.V (K (PLUR CRUMB.N)))))
			(?X_B (?X_A (LOVE.V (K (PLUR CRUMB.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-258.PR (K (PLUR NUT.N)) (K (PLUR CRUMB.N))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E LITTLE.A))
			(!R2 (?X_E BIRD.N))
			(!R3 (NOT ((K (PLUR CRUMB.N)) ACTION.N)))
			(!R4 (NOT ((K (PLUR CRUMB.N)) AGENT.N)))
			(!R5 ((K (PLUR CRUMB.N)) OBJECT.N))
		)
		(:STEPS
			(?X_D (NOT (?X_E ((CAN.AUX EAT.V) (K (PLUR NUT.N))))))
			(?X_B (?X_E LIKE.34.V (K (PLUR CRUMB.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D BEFORE ?X_B))
		)
	)
	(
			"A little bird eats nuts not can."
			"A little bird like.201s crumbs."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?X_B)) GO.43.V)
	              (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C GIRL.N))
			(!R2 (?X_B HOME.N))
			(!R3 ((KA ((ADV-A (WITH.P ?X_D)) PLAY.V)) DESTINATION.N))
			(!R4 (NOT (?X_B = (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
			(!R5 (?X_C LOST.A))
			(!R6 (?X_D (PLUR FRIEND.N)))
			(!R7 (?X_D (PERTAIN-TO ?X_C)))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
			(!R9 (?X_A (PLUR PARENT.N)))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V (KA ((ADV-A (AT.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?X_B)))
			(?I2 (NOT (?X_C (AT.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?X_B))))
			(?P2 (?X_C (AT.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
	     ((ADV-A (FOR.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))) GO.43.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (FROM.P ?X_B))
	     ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
	      GO.43.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))) GO.43.V)
	    (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
			(?X_E (?X_C GO.43.V))
			(?X_E (?X_C GO.43.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
			(?X_E (?X_C (LOCATION_ADV.? GO.43.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (SAME-TIME ?X_H)))
			(!W7 (?X_E (RIGHT-AFTER ?X_F)))
			(!W8 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?X_B)) GO.24.V)
	              (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C GIRL.N))
			(!R2 (?X_B HOME.N))
			(!R3 ((KA ((ADV-A (WITH.P ?X_D)) PLAY.V)) DESTINATION.N))
			(!R4 (NOT (?X_B = (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
			(!R5 (?X_C LOST.A))
			(!R6 (?X_D (PLUR FRIEND.N)))
			(!R7 (?X_D (PERTAIN-TO ?X_C)))
			(!R8 (?X_A (PLUR PARENT.N)))
			(!R9 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1
	   (?X_C
	    (WANT.V (KA ((ADV-A (AT.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?X_B)))
			(?I2 (NOT (?X_C (AT.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?X_B))))
			(?P2 (?X_C (AT.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
	     ((ADV-A (FOR.P (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))) GO.24.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (FROM.P ?X_B))
	     ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
	      GO.24.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA ((ADV-A (WITH.P ?X_D)) PLAY.V)))) GO.24.V)
	    (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
			(?X_E (?X_C GO.24.V))
			(?X_E (?X_C GO.24.V (KA ((ADV-A (WITH.P ?X_D)) PLAY.V))))
			(?X_E (?X_C (LOCATION_ADV.? GO.24.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (BEFORE ?X_F)))
			(!W7 (?X_G (SAME-TIME ?X_F)))
			(!W8 (?X_G (RIGHT-AFTER ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_A)) FIND.51.V) ?X_D)) ** ?X_H)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D GIRL.N))
			(!R4 (?X_D LOST.A))
			(!R5 (?X_C (PLUR PARENT.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A HOME.N))
			(!R8 (?X_B (PLUR FRIEND.N)))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (SAME-TIME ?X_G)))
			(!W3 (?X_H (RIGHT-AFTER ?X_E)))
			(!W4 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C FIND.52.V ?X_D) ** ?X_H)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D GIRL.N))
			(!R4 (?X_D LOST.A))
			(!R5 (?X_A HOME.N))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_C (PLUR PARENT.N)))
			(!R8 (?X_B (PLUR FRIEND.N)))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (BEFORE ?X_E)))
			(!W3 (?X_F (SAME-TIME ?X_E)))
			(!W4 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-259.PR (KA ((ADV-A (WITH.P ?X_L)) PLAY.V)) ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I STREET.N))
			(!R2 (?X_L (PLUR FRIEND.N)))
			(!R3 (?X_L (PERTAIN-TO ?X_M)))
			(!R4 ((KA ((ADV-A (WITH.P ?X_L)) PLAY.V)) DESTINATION.N))
			(!R5 (NOT (?X_O = (KA ((ADV-A (WITH.P ?X_L)) PLAY.V)))))
			(!R6 (?X_N (PLUR PARENT.N)))
			(!R7 (?X_M GIRL.N))
			(!R8 (?X_M LOST.A))
			(!R9 (?X_O (PERTAIN-TO ?X_N)))
			(!R10 (?X_O HOME.N))
		)
		(:STEPS
			(?X_K
	   (?X_M ((ADV-A (FROM.P ?X_O)) GO.24.V) (KA ((ADV-A (WITH.P ?X_L)) PLAY.V))))
			(?X_A
	   (?X_M ((ADV-A (FROM.P ?X_O)) GO.43.V) (KA ((ADV-A (WITH.P ?X_L)) PLAY.V))))
			(?X_H (?X_M ((ADV-A (ACROSS.P ?X_I)) GO.V)))
			(?X_F (?X_N (OVER.PRT ((ADV-A (FOR.P (KA (GET.V ?X_M)))) GO.V))))
			(?X_D (?X_N FIND.52.V ?X_M))
			(?X_B (?X_N (((ADV-A (IN.P ?X_O)) FIND.51.V) ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_A)))
			(!W2 (?X_K (BEFORE ?X_H)))
			(!W3 (?X_K (BEFORE ?X_F)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_A (BEFORE ?X_H)))
			(!W6 (?X_A (BEFORE ?X_F)))
			(!W7 (?X_A (BEFORE ?X_B)))
			(!W8 (?X_H (BEFORE ?X_F)))
			(!W9 (?X_H (BEFORE ?X_B)))
			(!W10 (?X_F (BEFORE ?X_B)))
			(!W11 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A girl lost go.214s with a friends of a girl lost playing from a home of a parents."
			"A girl lost go.213s with a friends of a girl lost playing from a home of a parents."
			"A girl lost goes across a street."
			"A parents go over for getting a girl lost."
			"A parents find.223 a girl lost."
			"A parents find.222 a girl lost in a home of a parents."
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.13.V (KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)) ACTION.N))
			(!R3 (?X_B BALL.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((REALLY.ADV WANT.V) (KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)))))
			(?X_D (?X_A (LIKE.V (KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)))))
			(?X_D (?X_A (LOVE.V (KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)))))
			(?X_D (?X_A (ENJOY.V (KA (((ADV-A (TO.P ?X_B)) ASK.V) ?X_C)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-260.PR ?X_H ?X_A
	               (KA (((ADV-A (TO.P ?X_I)) ASK.V) ?X_H))))
	             ** ?E)
		(:ROLES
			(!R1 ((KA (((ADV-A (TO.P ?X_I)) ASK.V) ?X_H)) ACTION.N))
			(!R2 (?X_I BALL.N))
			(!R3 (?X_J AGENT.N))
		)
		(:STEPS
			(?X_G (?X_J (LIKE.V ?X_H)))
			(?X_C (?X_H ((HOWEVER.ADV SAY.V) ?X_A)))
			(?X_E (?X_J ENJOY_ACTION.13.V (KA (((ADV-A (TO.P ?X_I)) ASK.V) ?X_H))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_C)))
		)
	)
	(
			"A agent likes X_H."
			"X_H says X_A however."
			"A agent enjoy action.233s to a ball asking X_H."
	)
)



(
	(EPI-SCHEMA (((K SUSIE.N) (COMPOSITE-SCHEMA-261.PR ?X_D)) ** ?E)
		(:ROLES
			(!R1 (?X_D CD.N))
			(!R2 (?X_D (PERTAIN-TO (K SUSIE.N))))
		)
		(:STEPS
			(?X_C ((K SUSIE.N) (AT.P ?X_D)))
			(?X_A ((K SUSIE.N) ((ADV-A (AT.P ?X_D)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
		)
	)
	(
			"Susie is at."
			"Susie looks at a cd of susie."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) FLY.2.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D BIRD.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_D (HAS.V (SET-OF ?X_B ?X_C))))
			(!R6 (?X_D (HAS.V (K (PLUR WING.N)))))
			(!R7 (?X_D (HAS.V (TWO.D (PLUR LEG.N)))))
			(!R8 (?X_D (ON.P ?X_A)))
			(!R9 (?X_A TREE.N))
			(!R10 (?X_B BILL.N))
			(!R11 (?X_B SMALL.A))
			(!R12 (?X_C TAIL.N))
			(!R13 (?X_C LONG.A))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.2.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.2.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.2.V) ?L2))
			(?X_E (?X_D (CAN.AUX FLY.2.V)))
			(?X_E (?X_D FLY.2.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? FLY.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) FLY.3.V) ?L2) ** ?X_F)
		(:ROLES
			(!R1 (?X_E BIRD.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_D TALL.A))
			(!R6 (?X_D TREE.N))
			(!R7 (?X_E (HAS.V (SET-OF ?X_A ?X_C))))
			(!R8 (?X_E (HAS.V (K (PLUR WING.N)))))
			(!R9 (?X_E (HAS.V (TWO.D (PLUR LEG.N)))))
			(!R10 (?X_A SMALL.A))
			(!R11 (?X_A BILL.N))
			(!R12 (?X_E (ON.P ?X_B)))
			(!R13 (?X_B TREE.N))
			(!R14 (?X_C LONG.A))
			(!R15 (?X_C TAIL.N))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.3.V)))
			(?X_F
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.3.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? ?L2)) FLY.3.V) ?L2))
			(?X_F (?X_E (CAN.AUX ((ADV-A (OVER.P ?X_D)) FLY.3.V))))
			(?X_F (?X_E FLY.3.V ?L2))
			(?X_F (?X_E (LOCATION_ADV.? FLY.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-262.PR ?X_M ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_D TALL.A))
			(!R2 (?X_D TREE.N))
			(!R3 (?X_M (HAS.V (SET-OF ?X_J ?X_L))))
			(!R4 (?X_I AGENT.N))
			(!R5 (?X_J SMALL.A))
			(!R6 (?X_J BILL.N))
			(!R7 (?X_K TREE.N))
			(!R8 (?X_M (ON.P ?X_K)))
			(!R9 (?X_L LONG.A))
			(!R10 (?X_L TAIL.N))
			(!R11 (?X_M (HAS.V (K (PLUR WING.N)))))
			(!R12 (?X_M BIRD.N))
			(!R13 (?X_M (HAS.V (TWO.D (PLUR LEG.N)))))
			(!R14 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_I ((CAN.AUX SEE.V) ?X_M)))
			(?X_F (?X_M ((ADV-A (FROM.P ?L1)) FLY.2.V) ?L2))
			(?X_C (?X_M ((ADV-A (FROM.P ?L1)) FLY.3.V) ?L2))
			(?X_A (?X_M SING.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_C)))
			(!W3 (?X_H (BEFORE ?X_A)))
			(!W4 (?X_F (BEFORE ?X_C)))
			(!W5 (?X_F (BEFORE ?X_A)))
			(!W6 (?X_C (BEFORE ?X_A)))
		)
	)
	(
			"A agent sees a has a small bill and a long tail has wings bird has two legs on a tree can."
			"A has a small bill and a long tail has wings bird has two legs on a tree fly.247s a destination from L1."
			"A has a small bill and a long tail has wings bird has two legs on a tree fly.248s a destination from L1."
			"A has a small bill and a long tail has wings bird has two legs on a tree sings."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.44.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.44.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.44.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.44.V) ?L2))
			(?X_B (?X_A GO.44.V))
			(?X_B (?X_A GO.44.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? GO.44.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_D)))
			(!W7 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A LIKE.35.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B PHONE.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.35.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.31.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_E)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-263.PR ?L2 ?X_G ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_G PHONE.N))
			(!R2 (NOT (?X_G ACTION.N)))
			(!R3 (NOT (?X_G AGENT.N)))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_H AGENT.N))
			(!R6 (NOT (?X_I AGENT.N)))
			(!R7 (NOT (?X_I ACTION.N)))
			(!R8 (NOT (?X_H = ?X_I)))
		)
		(:STEPS
			(?X_F (?X_H LIKE.35.V ?X_G))
			(?X_B (?X_H ((ADV-A (FROM.P ?L1)) GO.44.V) ?L2))
			(?X_D (?X_H GET.31.V ?X_I))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_B)))
			(!W2 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent like.270s a phone."
			"A agent go.269s a destination from L1."
			"A agent get.267s X_I."
		adding constraint (I$0$303.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.14.V (KA (TAKE.V ?X_C))) ** ?X_D)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 ((KA (TAKE.V ?X_C)) ACTION.N))
			(!R3 (?X_C BATH.N))
			(!R4 (?X_B (PERTAIN-TO ?X_A)))
			(!R5 (?X_A AGENT.N))
		)
		(:PRECONDS
			(?I1 (?X_B (THINK.V (THAT ((KA (TAKE.V ?X_C)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B (WANT.V (KA (TAKE.V ?X_C)))))
			(?X_D (?X_B (LIKE.V (KA (TAKE.V ?X_C)))))
			(?X_D (?X_B (LOVE.V (KA (TAKE.V ?X_C)))))
			(?X_D (?X_B (ENJOY.V (KA (TAKE.V ?X_C)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-264.PR
	               (KE (AND (?X_H READY.A) (?X_H (FOR.P ?X_L)))) ?X_K
	               (KA (TAKE.V ?X_M))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E BATH.N))
			(!R2 (?X_H BATH.N))
			(!R3 (?X_H WATER.N))
			(!R4 (?X_K AGENT.N))
			(!R5 (?X_L (PERTAIN-TO ?X_K)))
			(!R6 (?X_L DOG.N))
			(!R7 (?X_M BATH.N))
			(!R8 ((KA (TAKE.V ?X_M)) ACTION.N))
		)
		(:STEPS
			(?X_G (?X_K (GOT.V (KE (AND (?X_H READY.A) (?X_H (FOR.P ?X_L)))))))
			(?X_D (?X_L ((ADV-A (INTO.P ?X_E)) JUMP.V)))
			(?X_B (?X_L (((ADV-A (WITH.P (K WATER.N))) SPLASH.V) ?X_K)))
			(?X_J (?X_L ENJOY_ACTION.14.V (KA (TAKE.V ?X_M))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent gets and a bath water ready a bath water for a dog of a agent."
			"A dog of a agent jumps into a bath."
			"A dog of a agent splashes a agent with water."
			"A dog of a agent enjoy action.283s taking a bath."
		adding constraint (I$0$317.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.45.V) (KA (UP.PRT CLEAN.V))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (UP.PRT CLEAN.V)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (UP.PRT CLEAN.V)))))
			(!R5 (?X_A BATHROOM.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (KA (UP.PRT CLEAN.V)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (KA (UP.PRT CLEAN.V))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (KA (UP.PRT CLEAN.V)))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT CLEAN.V))))
	     ((ADV-A (INTO.P ?X_A)) ((ADV-A (FOR.P (KA (UP.PRT CLEAN.V)))) GO.45.V)))))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT CLEAN.V)))) GO.45.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT CLEAN.V)))) GO.45.V)
	    (KA (UP.PRT CLEAN.V))))
			(?X_C (?X_B GO.45.V))
			(?X_C (?X_B GO.45.V (KA (UP.PRT CLEAN.V))))
			(?X_C (?X_B (LOCATION_ADV.? GO.45.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.46.V) (KA WORK.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA WORK.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA WORK.V))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KA WORK.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA WORK.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA WORK.V))))
		)
		(:PARAPHRASES
			(?X_B
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A
	     ((ADV-A (DESTINATION_PREP.? (KA WORK.V)))
	      ((ADV-A (TO.P (KA WORK.V))) GO.46.V)))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (KA WORK.V))) GO.46.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (KA WORK.V))) GO.46.V) (KA WORK.V)))
			(?X_B (?X_A GO.46.V))
			(?X_B (?X_A GO.46.V (KA WORK.V)))
			(?X_B (?X_A (LOCATION_ADV.? GO.46.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-265.PR (THAT (?X_N (VERY.ADV SICK.A)))
	               (KE (?X_N (VERY.ADV SICK.A)))
	               (K (HOME.ADV ((ADV-A (FROM.P (KA WORK.V))) EARLY.A)))
	               (KA (UP.PRT CLEAN.V)) (KA WORK.V)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I BATHROOM.N))
			(!R2 ((KA WORK.V) DESTINATION.N))
			(!R3 (?X_N AGENT.N))
			(!R4 ((KA (UP.PRT CLEAN.V)) DESTINATION.N))
		)
		(:STEPS
			(?X_M (?X_N ((ADV-A (FROM.P ?L1)) GO.46.V) (KA WORK.V)))
			(?X_K (?X_N ((ADV-A (FOR.P (KA COUGH.V))) BEGIN.V)))
			(?X_H (?X_N ((ADV-A (FROM.P ?L1)) GO.45.V) (KA (UP.PRT CLEAN.V))))
			(?X_F (?X_N (SEE.V (THAT (?X_N (VERY.ADV SICK.A))))))
			(?X_D (?X_N (THAT.P (KE (?X_N (VERY.ADV SICK.A))))))
			(?X_B (?X_N (GO.V (K (HOME.ADV ((ADV-A (FROM.P (KA WORK.V))) EARLY.A))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_K)))
			(!W2 (?X_M (BEFORE ?X_H)))
			(!W3 (?X_M (BEFORE ?X_F)))
			(!W4 (?X_M (BEFORE ?X_D)))
			(!W5 (?X_M (BEFORE ?X_B)))
			(!W6 (?X_K (BEFORE ?X_H)))
			(!W7 (?X_K (BEFORE ?X_F)))
			(!W8 (?X_K (BEFORE ?X_D)))
			(!W9 (?X_K (BEFORE ?X_B)))
			(!W10 (?X_H (BEFORE ?X_F)))
			(!W11 (?X_H (BEFORE ?X_D)))
			(!W12 (?X_H (BEFORE ?X_B)))
			(!W13 (?X_F (BEFORE ?X_B)))
			(!W14 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.290s working from L1."
			"A agent begins for coughing."
			"A agent go.292s up cleaning from L1."
			"A agent sees that a agent very sick."
			"A agent is that."
			"A agent goes home from working early."
	)
)



(
	(EPI-SCHEMA ((?X_F
	              (COMPOSITE-SCHEMA-266.PR (K ((ADV-A (WITH.P ?X_E)) (IN.P ?X_G)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E SPADE.N))
			(!R2 (?X_E (PERTAIN-TO ?X_F)))
			(!R3 (?X_G SAND.N))
			(!R4 (?X_G SOFT.A))
		)
		(:STEPS
			(?X_A (?X_F (DIG.V (K ((ADV-A (WITH.P ?X_E)) (IN.P ?X_G))))))
			(?X_B (?X_F (DIG.V (K ((ADV-A (WITH.P ?X_E)) (IN.P ?X_G))))))
			(?X_C (?X_F (DIG.V (K ((ADV-A (WITH.P ?X_E)) (IN.P ?X_G))))))
			(?X_D (?X_F (DIG.V (K ((ADV-A (WITH.P ?X_E)) (IN.P ?X_G))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_B)))
			(!W2 (?X_A (BEFORE ?X_C)))
			(!W3 (?X_A (BEFORE ?X_D)))
			(!W4 (?X_B (BEFORE ?X_C)))
			(!W5 (?X_B (BEFORE ?X_D)))
			(!W6 (?X_C (BEFORE ?X_D)))
		)
	)
	(
			"X_F digs with a spade of X_F in a sand soft."
			"X_F digs with a spade of X_F in a sand soft."
			"X_F digs with a spade of X_F in a sand soft."
			"X_F digs with a spade of X_F in a sand soft."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (WITH.P ?X_A)) PLAY.17.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MOUSE.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_A EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (WITH.P ?T)) PLAY.17.V)))
			(?X_B (?X_A PLAY.17.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AFTER ?X_C)))
			(!W2 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-267.PR ?X_F ?X_A)) ** ?E)
		(:ROLES
			(!R1 (?X_F MOUSE.N))
			(!R2 (?X_I OLD.A))
			(!R3 (?X_I CAT.N))
			(!R4 (?X_I (HAS.V ?X_G)))
			(!R5 (?X_H (PERTAIN-TO ?X_I)))
			(!R6 (?X_H ?X_I (PLUR KITTEN.N)))
			(!R7 (?X_L MOUSE.N))
		)
		(:STEPS
			(?X_E (?X_I ((CAN.AUX CATCH.V) ?X_F)))
			(?X_B (?X_I (((ADV-A (TO.P ?X_H)) GIVE.V) ?X_A)))
			(?X_C (?X_I (((ADV-A (TO.P ?X_H)) GIVE.V) ?X_A)))
			(E361.SK (?X_L ((ADV-A (WITH.P ?X_L)) PLAY.17.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_B)))
			(!W2 (?X_E (BEFORE ?X_C)))
			(!W3 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"A old cat has X_G catches a mouse can."
			"A old cat has X_G gives X_A to a of a old cat has X_G."
			"A old cat has X_G gives X_A to a of a old cat has X_G."
			"A mouse play.315s with a mouse."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.47.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B THING.N))
			(!R6 (?X_B NEW.A))
			(!R7 (?X_A HOUSE.N))
			(!R8 (?X_A DOG.N))
			(!R9 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.47.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.47.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.47.V) ?L2))
			(?X_D (?X_C ((ADV-A (INSIDE.P ?X_B)) GO.47.V)))
			(?X_D (?X_C GO.47.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? GO.47.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_F)))
			(!W7 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.48.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B YARD.N))
			(!R6 (?X_A HOUSE.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_A DOG.N))
			(!R9 (?L2 OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.48.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.48.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.48.V) ?L2))
			(?X_D (?X_C GO.48.V))
			(?X_D (?X_C GO.48.V ?L2))
			(?X_D (?X_C ((ADV-A (IN.P ?X_B)) GO.48.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R (COMPOSITE-SCHEMA-268.PR ?X_M ?X_Q ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_Q HOUSE.N))
			(!R2 (?X_Q DOG.N))
			(!R3 (?X_M THING.N))
			(!R4 (?X_M NEW.A))
			(!R5 (?X_P YARD.N))
			(!R6 (?X_Q (PERTAIN-TO ?X_R)))
			(!R7 (?L2 OUTSIDE.N))
			(!R8 (?X_R DOG.N))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_D (?X_Q (LIKE.V ?X_Q)))
			(?X_O (?X_R ((ADV-A (FROM.P ?L1)) GO.48.V) ?L2))
			(?X_L (?X_A (((ADV-A (IN.P ?X_P)) BE.V) ?X_M)))
			(?X_J (?X_R (SNIFF.V ?X_M)))
			(?X_F (?X_R SLEEP.V))
			(?X_H (?X_R ((ADV-A (FROM.P ?L1)) GO.47.V) ?L2))
			(?X_B (?X_Q (LIKE.V ?X_Q)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
			(!W2 (?X_O (BEFORE ?X_L)))
			(!W3 (?X_O (BEFORE ?X_J)))
			(!W4 (?X_O (BEFORE ?X_F)))
			(!W5 (?X_O (BEFORE ?X_H)))
			(!W6 (?X_O (BEFORE ?X_B)))
			(!W7 (?X_L (BEFORE ?X_J)))
			(!W8 (?X_L (BEFORE ?X_F)))
			(!W9 (?X_L (BEFORE ?X_H)))
			(!W10 (?X_L (BEFORE ?X_B)))
			(!W11 (?X_J (BEFORE ?X_F)))
			(!W12 (?X_J (BEFORE ?X_H)))
			(!W13 (?X_J (BEFORE ?X_B)))
			(!W14 (?X_F (BEFORE ?X_B)))
			(!W15 (?X_H (BEFORE ?X_B)))
		)
	)
	(
			"A house dog of a dog likes a house dog of a dog."
			"A dog go.328s a outside destination from L1."
			"X_A is a thing new in a yard."
			"A dog sniffs a thing new."
			"A dog sleeps."
			"A dog go.327s a outside destination from L1."
			"A house dog of a dog likes a house dog of a dog."
		adding constraint (ME$13$402.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-269.PR ?X_A ?X_G)) ** ?E)
		(:ROLES
			(!R1 (?X_A (K BIG.A) DOLL.N))
			(!R2 (?X_A (PERTAIN-TO ?X_B)))
			(!R3 (?X_F LITTLE.A))
			(!R4 (?X_F BABY.N))
			(!R5 (?X_E (TO.P ?X_F)))
			(!R6 (?X_G FLY.N))
			(!R7 (?X_G BIRD.N))
		)
		(:STEPS
			(?X_D (?X_F ((MAY.AUX HAVE.V) ?X_A)))
			(?X_I (NOT (?X_F ((CAN.AUX CATCH.V) ?X_G))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_I)))
		)
	)
	(
			"A little baby has a of X_B may."
			"A little baby catches a fly bird not can."
		adding constraint (I$1$412.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.49.V) (K (PLUR CV.N))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (PLUR CV.N)) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (PLUR CV.N)))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K (PLUR CV.N)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K (PLUR CV.N))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K (PLUR CV.N)))))
		)
		(:PARAPHRASES
			(?X_B
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A
	     ((ADV-A (DESTINATION_PREP.? (K (PLUR CV.N))))
	      ((ADV-A (TO.P (K (PLUR CV.N)))) GO.49.V)))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (PLUR CV.N)))) GO.49.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (K (PLUR CV.N)))) GO.49.V)
	    (K (PLUR CV.N))))
			(?X_B (?X_A GO.49.V))
			(?X_B (?X_A GO.49.V (K (PLUR CV.N))))
			(?X_B (?X_A (LOCATION_ADV.? GO.49.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.32.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B CANDY.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-270.PR (K (PLUR CV.N)) ?X_F)) ** ?E)
		(:ROLES
			(!R1 ((K (PLUR CV.N)) DESTINATION.N))
			(!R2 (?X_F CANDY.N))
			(!R3 (?X_E AGENT.N))
			(!R4 (NOT (?X_F AGENT.N)))
			(!R5 (NOT (?X_F ACTION.N)))
			(!R6 (NOT (?X_E = ?X_F)))
		)
		(:STEPS
			(?X_D (?X_E ((ADV-A (FROM.P ?L1)) GO.49.V) (K (PLUR CV.N))))
			(?X_B (?X_E GET.32.V ?X_F))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.373s cvs from L1."
			"A agent get.372s a candy."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.50.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?L2 OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.50.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.50.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.50.V) ?L2))
			(?X_B (?X_A GO.50.V))
			(?X_B (?X_A GO.50.V ?L2))
			(?X_B (MUST.AUX-S (?X_A (BACK.ADV GO.50.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B
	              (((ADV-A (ABOUT.P (KA ((ADV-A (OUT.P ?X_A)) WALK.V))))
	                FIND.53.V)
	               ?X_C))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C SUNSCREEN.N))
			(!R4 (?X_A DOOR.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B
	              (((ADV-A (ABOUT.P (KA ((ADV-A (OUT.P ?X_A)) WALK.V))))
	                FIND.54.V)
	               ?X_C))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C DAY.N))
			(!R4 (?X_A DOOR.N))
			(!R5 (?X_C (VERY.ADV LONG.A)))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-271.PR ?L2 ?X_H ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_H SUNSCREEN.N))
			(!R2 (?X_I DAY.N))
			(!R3 (?X_I (VERY.ADV LONG.A)))
			(!R4 (?X_J DOOR.N))
			(!R5 (?X_K AGENT.N))
			(!R6 (?L2 DESTINATION.N))
			(!R7 (?L2 OUTSIDE.N))
		)
		(:STEPS
			(?X_G ((ADV-E (DURING ?X_I)) (?X_A BE.V)))
			(?X_E
	   (?X_K
	    (((ADV-A (ABOUT.P (KA ((ADV-A (OUT.P ?X_J)) WALK.V)))) FIND.53.V) ?X_H)))
			(?X_E
	   (?X_K
	    (((ADV-A (ABOUT.P (KA ((ADV-A (OUT.P ?X_J)) WALK.V)))) FIND.54.V) ?X_I)))
			(?X_C (?X_K ((ADV-A (FROM.P ?L1)) GO.50.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_C)))
			(!W3 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"X_A is DURING a day very long."
			"A agent find.388s a sunscreen about out a door walking."
			"A agent find.389s a day very long about out a door walking."
			"A agent go.377s a destination outside from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (AT.P (K WORK.N))) FIND.55.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B RAIN.N))
			(!R4 (?X_B (PLUR CLOUD.N)))
			(!R5 (?X_B (VERY.ADV DARK.A)))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (OUT.P ?X_A)) FIND.56.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C RAIN.N))
			(!R4 (?X_A WINDOW.N))
			(!R5 (?X_C (PLUR CLOUD.N)))
			(!R6 (?X_C (VERY.ADV DARK.A)))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-272.PR ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_K AGENT.N))
			(!R2 (?X_L WINDOW.N))
			(!R3 (?X_M RAIN.N))
			(!R4 (?X_M (PLUR CLOUD.N)))
			(!R5 (?X_M (VERY.ADV DARK.A)))
		)
		(:STEPS
			(?X_J (?X_K (((ADV-A (AT.P (K WORK.N))) FIND.55.V) ?X_M)))
			(?X_H (?X_K (((ADV-A (OUT.P ?X_L)) FIND.56.V) ?X_M)))
			(?X_F (?X_A (BE.V ?X_M)))
			(?X_D (?X_B ((ADV-A (FOR.P (KA ((ADV (VERY.ADV HARD.A)) RAIN.V)))) START.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_D)))
			(!W4 (?X_H (BEFORE ?X_F)))
			(!W5 (?X_H (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent find.395s a rain clouds very dark at work."
			"A agent find.396s a rain clouds very dark out a window."
			"X_A is a rain clouds very dark."
	)
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-273.PR ?X_B ?X_F)) ** ?E)
		(:ROLES
			(!R1 (?X_B CRUISE.N))
			(!R2 (?X_E FAMILY.N))
			(!R3 (?X_E EXCITED.A))
			(!R4 (?X_F GREAT.A))
			(!R5 (?X_F TIME.N))
		)
		(:STEPS
			(?X_A (?X_E ((ON.PRT GO.V) ?X_B)))
			(?X_D (?X_E ((ADV-A (ON.P ?X_B)) GO.V)))
			(?X_H (?X_E (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_D)))
			(!W2 (?X_A (BEFORE ?X_H)))
			(!W3 (?X_D (BEFORE ?X_H)))
		)
	)
	(
			"A family excited goes a cruise on."
			"A family excited goes on a cruise."
			"A family excited has a great time."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) RUN.24.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C CAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B DAY.N))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.24.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.24.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.24.V) ?L2))
			(?X_D ((ADV-E (DURING ?X_B)) (?X_C (AWAY.PRT RUN.24.V))))
			(?X_D (?X_C RUN.24.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? RUN.24.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              ((NEVER.ADV GET.33.V)
	               (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C)))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))) AGENT.N)))
			(!R3 (NOT ((K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))))))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_C CAT.N))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT (?X_A (HAVE.V (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C)))))))))))
			(?G2 (?X_A (NEED.V (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))))))
			(?G3 (?X_A (WANT.V (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K (L X (AND (X ALONG.P) (X (WITH.P ?X_C))))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K (L X (AND (X ALONG.P) (X (WITH.P ?X_C)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-274.PR (KA ((ADV-A (FOR.P ?X_B)) LOOK.V)) ?X_H ?X_E
	               ?L2 (K (L X (AND (X ALONG.P) (X (WITH.P ?X_Q)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E NEW.A))
			(!R2 (?X_E CAT.N))
			(!R3 (?X_H SEARCH.N))
			(!R4 (?X_Q (PERTAIN-TO ?X_O)))
			(!R5 (?X_P DAY.N))
			(!R6 (?X_Q CAT.N))
			(!R7 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_N (?X_Q ((ADV-A (FROM.P ?L1)) RUN.24.V) ?L2))
			(?X_L
	   (?X_O ((NEVER.ADV GET.33.V) (K (L X (AND (X ALONG.P) (X (WITH.P ?X_Q))))))))
			(?X_J (?X_O (TRY.V (KA ((ADV-A (FOR.P ?X_B)) LOOK.V)))))
			(?X_G (?X_O ((QUICKLY.ADV (UP.PRT GIVE.V)) ?X_H)))
			(?X_D (?X_O ((INSTEAD.ADV GET.V) ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_N (BEFORE ?X_L)))
			(!W2 (?X_N (BEFORE ?X_J)))
			(!W3 (?X_N (BEFORE ?X_G)))
			(!W4 (?X_N (BEFORE ?X_D)))
			(!W5 (?X_L (BEFORE ?X_J)))
			(!W6 (?X_L (BEFORE ?X_G)))
			(!W7 (?X_L (BEFORE ?X_D)))
			(!W8 (?X_J (BEFORE ?X_G)))
			(!W9 (?X_J (BEFORE ?X_D)))
			(!W10 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A cat of X_O run.29s a destination from L1."
			"X_O get.38s along with never."
			"X_O tries for X_B looking."
			"X_O gives a search quickly up."
			"X_O gets a new cat instead."
	)
)



(
	(EPI-SCHEMA ((?X_G ((ADV-A (FROM.P ?L1)) FALL.7.V) ?L2) ** ?X_H)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 ((K RED.A) (PERTAIN-TO ?X_G)))
			(!R6 (?X_F SNOW.N))
			(!R7 (?X_D (PERTAIN-TO ?X_G)))
			(!R8 (?X_D (K RED.A) SLED.N))
			(!R9 (?X_B SLED.N))
			(!R10
	   (?X_B
	    (HAS.V (KE ((K (L X (AND (X BLACK.A) (X (PLUR LETTER.N))))) (ON.P ?X_B))))))
			(!R11 (?X_B (IS.V (KE (?X_E (PASV SLED.V))))))
			(!R12 (?X_B (PERTAIN-TO ?X_G)))
			(!R13 (?X_C (IS.V ?X_D)))
			(!R14 (?X_E RED.N))
		)
		(:GOALS
			(?G1 (?X_G (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_G (AT.P ?L1)))
			(?I2 (NOT (?X_G (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_G (AT.P ?L1))))
			(?P2 (?X_G (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_H (?X_G ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.7.V)))
			(?X_H
	   (?X_G ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.7.V))))
			(?X_H (?X_G ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.7.V) ?L2))
			(?X_H (?X_G ((ADV-A (INTO.P ?X_F)) FALL.7.V)))
			(?X_H (?X_G FALL.7.V ?L2))
			(?X_H (?X_G (LOCATION_ADV.? FALL.7.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_H))
			(!W2 (?I2 BEFORE ?X_H))
			(!W3 (?P1 AFTER ?X_H))
			(!W4 (?P2 AFTER ?X_H))
			(!W5 (?G1 CAUSE-OF ?X_H))
			(!W6 (?X_I (CONSEC ?X_H)))
			(!W7 (?X_H (DURING ?X_J)))
			(!W8 (?X_I (DURING ?X_J)))
			(!W9 (?X_J (AT-ABOUT ?X_K)))
			(!W10 (?X_N (AT-ABOUT ?X_K)))
			(!W11 (?X_L (DURING ?X_N)))
			(!W12 (?X_M (CONSEC ?X_L)))
			(!W13 (?X_M (DURING ?X_N)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G ((ADV-A (FROM.P ?L1)) FALL.8.V) ?L2) ** ?X_I)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 ((K RED.A) (PERTAIN-TO ?X_G)))
			(!R6 (?X_F SNOW.N))
			(!R7 (?X_E (PERTAIN-TO ?X_G)))
			(!R8 (?X_E (K RED.A) SLED.N))
			(!R9
	   (?X_B
	    (HAS.V (KE ((K (L X (AND (X BLACK.A) (X (PLUR LETTER.N))))) (ON.P ?X_B))))))
			(!R10 (?X_B SLED.N))
			(!R11 (?X_B (PERTAIN-TO ?X_G)))
			(!R12 (?X_B (IS.V (KE (?X_C (PASV SLED.V))))))
			(!R13 (?X_C RED.N))
			(!R14 (?X_D (IS.V ?X_E)))
		)
		(:GOALS
			(?G1 (?X_G (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_G (AT.P ?L1)))
			(?I2 (NOT (?X_G (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_G (AT.P ?L1))))
			(?P2 (?X_G (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_I (?X_G ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.8.V)))
			(?X_I
	   (?X_G ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.8.V))))
			(?X_I (?X_G ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.8.V) ?L2))
			(?X_I (?X_G ((ADV-A (INTO.P ?X_F)) FALL.8.V)))
			(?X_I (?X_G FALL.8.V ?L2))
			(?X_I (?X_G (LOCATION_ADV.? FALL.8.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_I))
			(!W2 (?I2 BEFORE ?X_I))
			(!W3 (?P1 AFTER ?X_I))
			(!W4 (?P2 AFTER ?X_I))
			(!W5 (?G1 CAUSE-OF ?X_I))
			(!W6 (?X_H (CONSEC ?X_I)))
			(!W7 (?X_H (DURING ?X_J)))
			(!W8 (?X_I (DURING ?X_J)))
			(!W9 (?X_J (AT-ABOUT ?X_K)))
			(!W10 (?X_N (AT-ABOUT ?X_K)))
			(!W11 (?X_L (DURING ?X_N)))
			(!W12 (?X_M (CONSEC ?X_L)))
			(!W13 (?X_M (DURING ?X_N)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F ((CAN.AUX ((ADV-A (ON.P (K RED.A))) FIND.57.V)) (K RED.A)))
	             ** ?X_H)
		(:ROLES
			(!R1 (?X_F AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K RED.A) ENTITY.N))
			(!R4 ((K RED.A) (PERTAIN-TO ?X_F)))
			(!R5 (?X_B (IS.V (KE (?X_C (PASV SLED.V))))))
			(!R6 (?X_B (PERTAIN-TO ?X_F)))
			(!R7
	   (?X_B
	    (HAS.V (KE ((K (L X (AND (X BLACK.A) (X (PLUR LETTER.N))))) (ON.P ?X_B))))))
			(!R8 (?X_B SLED.N))
			(!R9 (?X_E (PERTAIN-TO ?X_F)))
			(!R10 (?X_E (K RED.A) SLED.N))
			(!R11 (?X_C RED.N))
			(!R12 (?X_D (IS.V ?X_E)))
		)
		(:PRECONDS
			(?I1 (?X_F (AT.P ?L)))
			(?I2 ((K RED.A) (AT.P ?L)))
			(?I3 (?X_F ((ADV-A (FOR.P (K RED.A))) SEARCH.V)))
			(?I4 (NOT (?X_F (KNOW.V (THAT ((K RED.A) (AT.P ?L)))))))
			(?I5 (NOT (?X_F (HAVE.V (K RED.A)))))
		)
		(:POSTCONDS
			(?P1 (?X_F (KNOW.V (THAT ((K RED.A) (AT.P ?L))))))
			(?P2 (?X_F (HAVE.V (K RED.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_U (COMPOSITE-SCHEMA-275.PR ?X_U ?L2 (K RED.A))) ** ?E)
		(:ROLES
			(!R1 (?X_K SNOW.N))
			(!R2 (?X_Q SLED.N))
			(!R3 (?X_Q (IS.V (KE (?X_R (PASV SLED.V))))))
			(!R4
	   (?X_Q
	    (HAS.V (KE ((K (L X (AND (X BLACK.A) (X (PLUR LETTER.N))))) (ON.P ?X_Q))))))
			(!R5 (?X_Q (PERTAIN-TO ?X_U)))
			(!R6 (?X_R RED.N))
			(!R7 (?X_T (K RED.A) SLED.N))
			(!R8 (?X_T (PERTAIN-TO ?X_U)))
			(!R9 (?X_S (IS.V ?X_T)))
			(!R10 (?L2 DESTINATION.N))
			(!R11 ((K RED.A) ENTITY.N))
			(!R12 ((K RED.A) (PERTAIN-TO ?X_U)))
			(!R13 (?X_U AGENT.N))
		)
		(:STEPS
			(?X_J (?X_U ((ADV-A (INTO.P ?X_K)) FALL.V)))
			(?X_A (?X_U (((ADV-A (FOR.P (KA (HAVE.V (K RED.A))))) LET.V) ?X_U)))
			(?X_B (?X_U (((ADV-A (FOR.P (KA (HAVE.V (K RED.A))))) LET.V) ?X_U)))
			(?X_C (?X_U ((ADV-A (FROM.P ?L1)) FALL.7.V) ?L2))
			(?X_D (?X_U ((ADV-A (FROM.P ?L1)) FALL.8.V) ?L2))
			(?X_H (NOT (?X_U (CAN.AUX ((ADV-A (ON.P (K RED.A))) STAND.V)))))
			(?X_F (?X_U ((CAN.AUX ((ADV-A (ON.P (K RED.A))) FIND.57.V)) (K RED.A))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_B)))
			(!W3 (?X_J (BEFORE ?X_C)))
			(!W4 (?X_J (BEFORE ?X_D)))
			(!W5 (?X_J (BEFORE ?X_H)))
			(!W6 (?X_J (BEFORE ?X_F)))
			(!W7 (?X_A (BEFORE ?X_D)))
			(!W8 (?X_A (BEFORE ?X_H)))
			(!W9 (?X_A (BEFORE ?X_F)))
			(!W10 (?X_B (BEFORE ?X_C)))
			(!W11 (?X_B (BEFORE ?X_H)))
			(!W12 (?X_B (BEFORE ?X_F)))
			(!W13 (?X_C (BEFORE ?X_H)))
			(!W14 (?X_C (BEFORE ?X_F)))
			(!W15 (?X_D (BEFORE ?X_H)))
			(!W16 (?X_D (BEFORE ?X_F)))
			(!W17 (?X_H (BEFORE ?X_F)))
		)
	)
	(
			"A agent falls into a snow."
			"A agent lets a agent for having red."
			"A agent lets a agent for having red."
			"A agent fall.40s a destination from L1."
			"A agent fall.41s a destination from L1."
			"A agent stands not can on red."
			"A agent find.61s red can on red."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.51.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B MARKET.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? ?X_B))
	     ((ADV-A (TO.P ?X_B))
	      ((ADV-A (FOR.P (KA (GET.V (K (PLUR CLOTHE.N)))))) GO.51.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.51.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.51.V) ?X_B))
			(?X_C (?X_A GO.51.V))
			(?X_C (?X_A GO.51.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.51.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.52.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.52.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.52.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.52.V) ?X_B))
			(?X_C (?X_A GO.52.V))
			(?X_C (?X_A GO.52.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.52.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-276.PR (KA ((ADV-A (LIKE.P ?X_J)) LOOK.V)) ?X_E
	               ?X_N ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E (PLUR SANDAL.N)))
			(!R2 (?X_J (PLUR PERSON.N)))
			(!R3 (?X_M DESTINATION.N))
			(!R4 (?X_N DESTINATION.N))
			(!R5 (?X_N MARKET.N))
			(!R6 (?X_O AGENT.N))
		)
		(:STEPS
			(?X_L (?X_O ((ADV-A (FROM.P ?L1)) GO.52.V) ?X_M))
			(?X_I (?X_O (WANT.V (KA ((ADV-A (LIKE.P ?X_J)) LOOK.V)))))
			(?X_G (?X_O ((ADV-A (FROM.P ?L1)) GO.51.V) ?X_N))
			(?X_D (?X_O (SEE.V ?X_E)))
			(?X_B (?X_O (BUY.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_I)))
			(!W2 (?X_L (BEFORE ?X_G)))
			(!W3 (?X_L (BEFORE ?X_D)))
			(!W4 (?X_L (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_G)))
			(!W6 (?X_I (BEFORE ?X_D)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_G (BEFORE ?X_D)))
			(!W9 (?X_G (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.65s a destination from L1."
			"A agent wants like a persons looking."
			"A agent go.64s a destination market from L1."
			"A agent sees a sandals."
			"A agent buys a sandals."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.32.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C PASS.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A ARM.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? ?X_C))
	     (OUT.PRT ((ADV-A (FOR.P ?X_C)) GO.32.V)))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.32.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.32.V) ?X_C))
			(?X_D (?X_B GO.32.V))
			(?X_D (?X_B GO.32.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.32.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-277.PR ?X_I ?X_M ?X_E ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_E GROUND.N))
			(!R2 (?X_H PERSON.N))
			(!R3 (?X_I PARKING.N))
			(!R4 (?X_I LOT.N))
			(!R5 (?X_L ARM.N))
			(!R6 (?X_L (PERTAIN-TO ?X_M)))
			(!R7 (?X_M AGENT.N))
			(!R8 (?X_N DESTINATION.N))
			(!R9 (?X_N PASS.N))
		)
		(:STEPS
			(?X_K (?X_M ((ADV-A (FROM.P ?L1)) GO.32.V) ?X_N))
			(?X_A (?X_M ON.P))
			(?X_B (?X_M (IN.P ?X_I)))
			(?X_G (?X_H (GUARD.V ?X_M)))
			(?X_D (?X_M ((HARD.ADV HIT.V) ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_A)))
			(!W2 (?X_K (BEFORE ?X_B)))
			(!W3 (?X_K (BEFORE ?X_G)))
			(!W4 (?X_K (BEFORE ?X_D)))
			(!W5 (?X_A (BEFORE ?X_B)))
			(!W6 (?X_A (BEFORE ?X_G)))
			(!W7 (?X_A (BEFORE ?X_D)))
			(!W8 (?X_B (BEFORE ?X_G)))
			(!W9 (?X_B (BEFORE ?X_D)))
			(!W10 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A agent go.93s a destination pass from L1."
			"A agent is on."
			"A agent is in."
			"A person guards a agent."
			"A agent hits a ground hard."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-278.PR (KA LEAVE.V))) ** ?E)
		(:ROLES
			(!R1 (?X_A COUPLE.N))
			(!R2 (?X_B SHOW.N))
			(!R3 (?X_E GIRL.N))
			(!R4 (?X_H BOY.N))
		)
		(:STEPS
			(?X_D (?X_A ((ADV-A (TO.P ?X_B)) GO.V)))
			(?X_G (?X_E (ASK.V (KA LEAVE.V))))
			(?X_J (?X_H REFUSE.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_G)))
			(!W2 (?X_D (BEFORE ?X_J)))
			(!W3 (?X_G (BEFORE ?X_J)))
		)
	)
	(
			"A couple goes to a show."
			"A girl asks leaving."
			"A boy refuses."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RIDE.4.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A FATHER.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B CARABAO.N))
			(!R6 (?X_A (PERTAIN-TO ?X_A)))
			(!R7 (?X_A (HAS.V (FIVE.D (PLUR CARABAO.N)))))
			(!R8 (?X_B HERE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) RIDE.4.V)))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) RIDE.4.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) RIDE.4.V) ?X_B))
			(?X_C (?X_A RIDE.4.V))
			(?X_C (?X_A (RIDE.4.V ?X_B)))
			(?X_C (?X_A (LOCATION_ADV.? RIDE.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.15.V (KA ((ADV-A (IN.P ?X_B)) STAND.V))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A CARABAO.N))
			(!R2 ((KA ((ADV-A (IN.P ?X_B)) STAND.V)) ACTION.N))
			(!R3 (?X_B WATER.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA ((ADV-A (IN.P ?X_B)) STAND.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A (WANT.V (KA ((ADV-A (IN.P ?X_B)) STAND.V)))))
			(?X_C (?X_A (LIKE.V (KA ((ADV-A (IN.P ?X_B)) STAND.V)))))
			(?X_C (?X_A (LOVE.V (KA ((ADV-A (IN.P ?X_B)) STAND.V)))))
			(?X_C (?X_A (ENJOY.V (KA ((ADV-A (IN.P ?X_B)) STAND.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-279.PR (KA ((ADV-A (UNDER.P ?X_E)) SIT.V)) ?X_L
	               (KA ((ADV-A (IN.P ?X_J)) STAND.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E TREE.N))
			(!R2 (?X_J WATER.N))
			(!R3 ((KA ((ADV-A (IN.P ?X_J)) STAND.V)) ACTION.N))
			(!R4 (?X_K FATHER.N))
			(!R5 (?X_K (PERTAIN-TO ?X_K)))
			(!R6 (?X_K (HAS.V (FIVE.D (PLUR CARABAO.N)))))
			(!R7 (?X_L DESTINATION.N))
			(!R8 (?X_L CARABAO.N))
			(!R9 (?X_L HERE.N))
		)
		(:STEPS
			(?X_I (?X_L ENJOY_ACTION.15.V (KA ((ADV-A (IN.P ?X_J)) STAND.V))))
			(?X_G (?X_K ((ADV-A (FROM.P ?L1)) RIDE.4.V) ?X_L))
			(?X_B (?X_A ((HOME.ADV RIDE.V) ?X_L)))
			(?X_D (?X_K (LIKE.V (KA ((ADV-A (UNDER.P ?X_E)) SIT.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_B)))
			(!W3 (?X_I (BEFORE ?X_D)))
			(!W4 (?X_G (BEFORE ?X_B)))
			(!W5 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A destination carabao here enjoy action.129s in a water standing."
			"A father of a father of X_K has five carabaos has five carabaos ride.125s a destination carabao here from L1."
			"X_A rides a destination carabao here home."
			"A father of a father of X_K has five carabaos has five carabaos likes under a tree sitting."
	)
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-280.PR ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_A HAT.N))
			(!R2 (?X_A (PERTAIN-TO ?X_C)))
			(!R3 (?X_B HAND.N))
			(!R4 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:STEPS
			(E161.SK (?X_C ?X_A (HAS.V ?X_B)))
		)
	)
	(
			"X_C has a hand of X_C."
	)
)



(
	(EPI-SCHEMA ((?X_E (((ADV-A (ON.P ?X_A)) FIND.43.V) ?X_F)) ** ?X_I)
		(:ROLES
			(!R1 (?X_E DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_F BUN.N))
			(!R4 (?X_A (K HIND.A) (PLUR FOOT.N)))
			(!R5 (?X_A (PERTAIN-TO ?X_E)))
			(!R6 (?X_E (PERTAIN-TO ?X_B)))
			(!R7 (?X_B (HAS.V ?X_C)))
			(!R8 (?X_D (IS.V ?X_F)))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 (?X_E ((ADV-A (FOR.P ?X_F)) SEARCH.V)))
			(?I4 (NOT (?X_E (KNOW.V (THAT (?X_F (AT.P ?L)))))))
			(?I5 (NOT (?X_E (HAVE.V ?X_F))))
		)
		(:POSTCONDS
			(?P1 (?X_E (KNOW.V (THAT (?X_F (AT.P ?L))))))
			(?P2 (?X_E (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_I))
			(!W2 (?X_I (RIGHT-AFTER ?X_G)))
			(!W3 (?X_I (SAME-TIME ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-281.PR ?X_F)) ** ?E)
		(:ROLES
			(!R1 (?X_E (PERTAIN-TO ?X_A)))
			(!R2 (?X_A (HAS.V ?X_B)))
			(!R3 (?X_C (IS.V ?X_F)))
			(!R4 (?X_D (K HIND.A) (PLUR FOOT.N)))
			(!R5 (?X_D (PERTAIN-TO ?X_E)))
			(!R6 (?X_E DOG.N))
			(!R7 (?X_F BUN.N))
		)
		(:STEPS
			(E169.SK (?X_E (((ADV-A (ON.P ?X_D)) FIND.43.V) ?X_F)))
		)
	)
	(
			"A dog of a has X_B find.166s a bun on a of a dog of X_A."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.53.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PLUR KID.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.53.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.53.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) GO.53.V) ?L2))
			(?X_B (?X_A ((ADV (BACK.ADV INSIDE.A)) GO.53.V)))
			(?X_B (?X_A GO.53.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? GO.53.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.54.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B (PLUR KID.N)))
			(!R6 (?X_A RAIN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.54.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.54.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.54.V) ?L2))
			(?X_C (?X_B (OUT.ADV ((ADV-A (IN.P ?X_A)) GO.54.V))))
			(?X_C (?X_B GO.54.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.54.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-282.PR (K (VERY.ADV WET.A)) ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_G RAIN.N))
			(!R2 (?X_H (PLUR KID.N)))
			(!R3 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_F (?X_H ((ADV-A (FROM.P ?L1)) GO.54.V) ?L2))
			(?X_D (?X_H (BECOME.V (K (VERY.ADV WET.A)))))
			(?X_B (?X_H ((ADV-A (FROM.P ?L1)) GO.53.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A kids go.174 a destination from L1."
			"A kids become very wet."
			"A kids go.173 a destination from L1."
		adding constraint (ME$0$205.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) COME.9.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PLUR FRIEND.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) COME.9.V)))
			(?X_D
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.9.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) COME.9.V) ?L2))
			(?X_D
	   (?X_C ((ADV-A (IN.P (K (L X (AND (X LAST.A) (X PLACE.N)))))) COME.9.V)))
			(?X_D (?X_C COME.9.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? COME.9.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (BEHIND.P ?X_A)) FIND.44.V) ?O)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_A GROUP.N))
			(!R5 (?X_B (PERTAIN-TO ?X_C)))
			(!R6 (?X_B (PLUR FRIEND.N)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?O (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?O (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?O))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?O (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-283.PR ?L2 ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_G (PLUR FRIEND.N)))
			(!R2 (?X_G (PERTAIN-TO ?X_I)))
			(!R3 (?X_H GROUP.N))
			(!R4 (?O ENTITY.N))
			(!R5 (?X_I AGENT.N))
			(!R6 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_F ((SET-OF ?X_G ?X_I) RUN.V))
			(?X_D (?X_I (((ADV-A (BEHIND.P ?X_H)) FIND.44.V) ?O)))
			(?X_B (?X_I ((ADV-A (FROM.P ?L1)) COME.9.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A friends of a agent and a agent run."
			"A agent find.192s a entity behind a group."
			"A agent come.181s a destination from L1."
		adding constraint (I$0$215.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (TO.P (|12.D| (PLUR MILE.N)))) MAKE.11.V) ?X_B))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (ABOUT.P (KA DARK.A))) EXIST.V))))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B ((ADV-A (ABOUT.P (KA DARK.A))) EXIST.V))))
		)
		(:POSTCONDS
			(?X_C (?X_B ((ADV-A (ABOUT.P (KA DARK.A))) EXIST.V)))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-284.PR
	               (KA
	                (RUN.V
	                 (TWENTY.D
	                  (L X (AND (X (PLUR MILE.N)) (X (AFTER.P (K WORK.N))))))))
	               ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J AGENT.N))
			(!R2 (NOT (?X_K AGENT.N)))
		)
		(:STEPS
			(?X_I
	   (?X_J
	    (WANT.V
	     (KA
	      (RUN.V
	       (TWENTY.D (L X (AND (X (PLUR MILE.N)) (X (AFTER.P (K WORK.N)))))))))))
			(?X_G (MUST.AUX-S (?X_J HURRY.V)))
			(?X_E (?X_K ((ADV-A (ABOUT.P (KA DARK.A))) BE.V)))
			(?X_C (?X_J (((ADV-A (TO.P (|12.D| (PLUR MILE.N)))) MAKE.11.V) ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent wants running twenty mile after."
			"A agent hurries must."
			"X_K is about dark."
			"A agent make.196s X_K to 12 miles."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) FOLLOW.2.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 ((K PHONE.N) (PERTAIN-TO ?X_B)))
			(!R6 (?X_C SOUND.N))
			(!R7 (?X_A (K PHONE.N) RING.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) FOLLOW.2.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) FOLLOW.2.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) FOLLOW.2.V) ?X_C))
			(?X_D (?X_B FOLLOW.2.V))
			(?X_D (?X_B FOLLOW.2.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? FOLLOW.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FIND.58.V (K PHONE.N)) ** ?X_F)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K PHONE.N) ENTITY.N))
			(!R4 ((K PHONE.N) (PERTAIN-TO ?X_B)))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A (K PHONE.N) RING.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 ((K PHONE.N) (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P (K PHONE.N))) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT ((K PHONE.N) (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V (K PHONE.N)))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT ((K PHONE.N) (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V (K PHONE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (RIGHT-AFTER ?X_C)))
			(!W3 (?X_F (SAME-TIME ?X_E)))
			(!W4 (?X_D (BEFORE ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FIND.59.V (K PHONE.N)) ** ?X_F)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K PHONE.N) ENTITY.N))
			(!R4 ((K PHONE.N) (PERTAIN-TO ?X_B)))
			(!R5 (?X_A (K PHONE.N) RING.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 ((K PHONE.N) (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P (K PHONE.N))) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT ((K PHONE.N) (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V (K PHONE.N)))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT ((K PHONE.N) (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V (K PHONE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (BEFORE ?X_C)))
			(!W3 (?X_D (SAME-TIME ?X_C)))
			(!W4 (?X_D (RIGHT-AFTER ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-285.PR ?X_I ?X_J (K PHONE.N))) ** ?E)
		(:ROLES
			(!R1 (?X_I (K PHONE.N) RING.N))
			(!R2 (?X_I (PERTAIN-TO ?X_K)))
			(!R3 (?X_J DESTINATION.N))
			(!R4 (?X_J SOUND.N))
			(!R5 ((K PHONE.N) ENTITY.N))
			(!R6 ((K PHONE.N) (PERTAIN-TO ?X_K)))
			(!R7 (?X_K MAN.N))
		)
		(:STEPS
			(?X_H (?X_K (HEAR.V ?X_I)))
			(?X_A (?X_K (HEAR.V ?X_I)))
			(?X_F (?X_K ((ADV-A (FROM.P ?L1)) FOLLOW.2.V) ?X_J))
			(?X_D (?X_K FIND.59.V (K PHONE.N)))
			(?X_B (?X_K FIND.58.V (K PHONE.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_A)))
			(!W2 (?X_H (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_A (BEFORE ?X_F)))
			(!W5 (?X_A (BEFORE ?X_B)))
			(!W6 (?X_F (BEFORE ?X_B)))
			(!W7 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man hears a of a man."
			"A man hears a of a man."
			"A man follow.207s a destination sound from L1."
			"A man find.205s phone."
			"A man find.204s phone."
	)
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-286.PR ?X_F ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?X_F TREE.N))
			(!R3 (?X_I BRANCH.N))
			(!R4 (?X_K (OF.P (KE (?X_J HOUSE.N)))))
			(!R5 (?X_K WINDOW.N))
		)
		(:STEPS
			(?X_C (?X_A (PLANT.V ?X_F)))
			(?X_E (?X_F ((ADV-A (FOR.P (KA (VERY.ADV TALL.A)))) GROW.V)))
			(?X_H (?X_I ((ADV-A (FROM.P ?X_F)) FALL.V)))
			(?X_M (?X_I (BREAK.V ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_M)))
			(!W4 (?X_E (BEFORE ?X_H)))
			(!W5 (?X_E (BEFORE ?X_M)))
			(!W6 (?X_H (BEFORE ?X_M)))
		)
	)
	(
			"A man plants a tree."
			"A tree grows for very tall."
			"A branch falls from a tree."
			"A branch breaks a of X_J house window."
	)
)



(
	(EPI-SCHEMA ((?X_C ((UP.PRT ((ADV-A (AT.P ?X_A)) FIND.60.V)) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C GIRL.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D HEAD.N))
			(!R4 (?X_A TREE.N))
			(!R5 (?X_B (PERTAIN-TO ?X_C)))
			(!R6 (?X_B NOSE.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((UP.PRT ((ADV-A (AT.P ?X_A)) FIND.61.V)) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C GIRL.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D ORANGE.N))
			(!R4 (?X_A TREE.N))
			(!R5 (?X_B (PERTAIN-TO ?X_C)))
			(!R6 (?X_B NOSE.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P (COMPOSITE-SCHEMA-287.PR ?X_Q ?X_K ?X_N ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_K NOSE.N))
			(!R2 (?X_D ORANGE.N))
			(!R3 (?X_K (PERTAIN-TO ?X_Q)))
			(!R4 (?X_N HEAD.N))
			(!R5 (?X_O TREE.N))
			(!R6 (?X_P ORANGE.N))
			(!R7 (?X_Q GIRL.N))
		)
		(:STEPS
			(?X_M (?X_P ((ADV-A (FROM.P ?X_O)) FALL.V)))
			(?X_J (?X_P (((ADV-A (ON.P ?X_N)) HIT.V) ?X_Q)))
			(?X_H (?X_Q ((UP.PRT ((ADV-A (AT.P ?X_O)) FIND.60.V)) ?X_N)))
			(?X_H (?X_Q ((UP.PRT ((ADV-A (AT.P ?X_O)) FIND.61.V)) ?X_P)))
			(?X_F ((ANOTHER.D ORANGE.N) ((ADV-A (FROM.P ?X_O)) FALL.V)))
			(?X_A (?X_D (BREAK.V ?X_K)))
			(?X_C (?X_D (BREAK.V ?X_K)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_J)))
			(!W2 (?X_M (BEFORE ?X_F)))
			(!W3 (?X_M (BEFORE ?X_A)))
			(!W4 (?X_M (BEFORE ?X_C)))
			(!W5 (?X_J (BEFORE ?X_F)))
			(!W6 (?X_J (BEFORE ?X_A)))
			(!W7 (?X_J (BEFORE ?X_C)))
			(!W8 (?X_F (BEFORE ?X_A)))
			(!W9 (?X_F (BEFORE ?X_C)))
			(!W10 (?X_A (BEFORE ?X_C)))
		)
	)
	(
			"A orange falls from a tree."
			"A orange hits a girl on a head."
			"A girl find.239s a head up at a tree."
			"A girl find.240s a orange up at a tree."
			"Another orange falls from a tree."
			"A orange breaks a nose of a girl."
			"A orange breaks a nose of a girl."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) GO.55.V) ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_D MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_E DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_E)))
			(!R5 (?X_E (PERTAIN-TO ?X_D)))
			(!R6 (?X_E MAILBOX.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_A PAPER.N))
			(!R9 (?X_B (K PAPER.N) BOY.N))
			(!R10 (?X_B (PERTAIN-TO ?X_D)))
			(!R11 (?X_C (PERTAIN-TO ?X_D)))
			(!R12 (?X_C (K PAPER.N) BOY.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?X_E)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_F
	   (?X_D
	    ((ADV-A (DESTINATION_PREP.? ?X_E))
	     (OUT.ADV ((ADV-A (TO.P ?X_E)) GO.55.V)))))
			(?X_F
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_E)) GO.55.V))))
			(?X_F (?X_D ((ADV-A (DESTINATION_PREP.? ?X_E)) GO.55.V) ?X_E))
			(?X_F (?X_D GO.55.V))
			(?X_F (?X_D GO.55.V ?X_E))
			(?X_F (?X_D (LOCATION_ADV.? GO.55.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (SAME-TIME ?X_I)))
			(!W7 (?X_F (RIGHT-AFTER ?X_G)))
			(!W8 (?X_H (BEFORE ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) GO.56.V) ?X_E) ** ?X_G)
		(:ROLES
			(!R1 (?X_D MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_E DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_E)))
			(!R5 (?X_E (PERTAIN-TO ?X_D)))
			(!R6 (?X_E MAILBOX.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_A (K PAPER.N) BOY.N))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
			(!R10 (?X_B PAPER.N))
			(!R11 (?X_C (PERTAIN-TO ?X_D)))
			(!R12 (?X_C (K PAPER.N) BOY.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?X_E)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_G
	   (?X_D
	    ((ADV-A (DESTINATION_PREP.? ?X_E))
	     (OUT.ADV ((ADV-A (TO.P ?X_E)) GO.56.V)))))
			(?X_G
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_E)) GO.56.V))))
			(?X_G (?X_D ((ADV-A (DESTINATION_PREP.? ?X_E)) GO.56.V) ?X_E))
			(?X_G (?X_D GO.56.V))
			(?X_G (?X_D GO.56.V ?X_E))
			(?X_G (?X_D (LOCATION_ADV.? GO.56.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_G))
			(!W2 (?I2 BEFORE ?X_G))
			(!W3 (?P1 AFTER ?X_G))
			(!W4 (?P2 AFTER ?X_G))
			(!W5 (?G1 CAUSE-OF ?X_G))
			(!W6 (?X_G (RIGHT-AFTER ?X_F)))
			(!W7 (?X_G (SAME-TIME ?X_I)))
			(!W8 (?X_H (BEFORE ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (((ADV-A (FOR.P ?X_A)) FIND.47.V) ?O)) ** ?X_I)
		(:ROLES
			(!R1 (?X_E MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_A (PERTAIN-TO ?X_E)))
			(!R5 (?X_A PAPER.N))
			(!R6 (?X_B (PERTAIN-TO ?X_E)))
			(!R7 (?X_B (K PAPER.N) BOY.N))
			(!R8 (?X_C (K PAPER.N) BOY.N))
			(!R9 (?X_C (PERTAIN-TO ?X_E)))
			(!R10 (?X_D (PERTAIN-TO ?X_E)))
			(!R11 (?X_D MAILBOX.N))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L)))
			(?I2 (?O (AT.P ?L)))
			(?I3 (?X_E ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_E (KNOW.V (THAT (?O (AT.P ?L)))))))
			(?I5 (NOT (?X_E (HAVE.V ?O))))
		)
		(:POSTCONDS
			(?P1 (?X_E (KNOW.V (THAT (?O (AT.P ?L))))))
			(?P2 (?X_E (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_I))
			(!W2 (?X_I (RIGHT-AFTER ?X_F)))
			(!W3 (?X_I (SAME-TIME ?X_H)))
			(!W4 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FOR.P ?X_E)) SEARCH.5.V)) ** ?X_I)
		(:ROLES
			(!R1 (?X_D MAN.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 (?X_E PAPER.N))
			(!R5 (?X_E (PERTAIN-TO ?X_D)))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_A (K PAPER.N) BOY.N))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_B MAILBOX.N))
			(!R10 (?X_C (PERTAIN-TO ?X_D)))
			(!R11 (?X_C (K PAPER.N) BOY.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (FIND.V ?X_E)))))
			(?G2 (?X_D (WANT.V (KA (HAVE.V ?X_E)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?LX)))
			(?I2 (?X_E (AT.P ?LO)))
			(?I3 (NOT (?X_D (KNOW.V (THAT (?X_E (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_D (FIND.V ?X_E)))
		)
		(:PARAPHRASES
			(?X_I (?X_D ((ADV-A (FOR.P ?X_E)) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_I (?X_D ((ADV-A (FOR.P ?X_E)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_I))
			(!W2 (?X_I (SAME-TIME ?X_H)))
			(!W3 (?X_I (RIGHT-AFTER ?X_F)))
			(!W4 (?X_G (BEFORE ?X_H)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_I))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_T (COMPOSITE-SCHEMA-288.PR ?X_S ?X_P ?X_R ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_Q (K PAPER.N) BOY.N))
			(!R2 (?X_P (K PAPER.N) BOY.N))
			(!R3 (?X_P (PERTAIN-TO ?X_T)))
			(!R4 (?X_Q (PERTAIN-TO ?X_T)))
			(!R5 (?X_R DESTINATION.N))
			(!R6 (?X_R (PERTAIN-TO ?X_T)))
			(!R7 (?X_R MAILBOX.N))
			(!R8 (?O ENTITY.N))
			(!R9 (?X_S (PERTAIN-TO ?X_T)))
			(!R10 (?X_S PAPER.N))
			(!R11 (?X_T MAN.N))
		)
		(:STEPS
			(?X_O (?X_T (OUT.ADV ((ADV-A (TO.P ?X_R)) GO.V))))
			(?X_M (?X_T (FOR.P ?X_S)))
			(?X_K (?X_S ((ADV (NOT THERE.A)) BE.V)))
			(?X_I (?X_T (CALL.V ?X_P)))
			(?X_G (?X_Q (LATE.ADV RUN.V)))
			(?X_A (?X_T ((ADV-A (FROM.P ?L1)) GO.55.V) ?X_R))
			(?X_A (?X_T ((ADV-A (FROM.P ?L1)) GO.56.V) ?X_R))
			(?X_B (?X_T (((ADV-A (FOR.P ?X_S)) FIND.47.V) ?O)))
			(?X_B (?X_T ((ADV-A (FOR.P ?X_S)) SEARCH.5.V)))
			(?X_C (?X_S ((ADV (NOT THERE.A)) BE.V)))
			(?X_D (?X_T (CALL.V ?X_P)))
			(?X_E (?X_Q (LATE.ADV RUN.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_A)))
			(!W2 (?X_O (BEFORE ?X_B)))
			(!W3 (?X_O (BEFORE ?X_C)))
			(!W4 (?X_O (BEFORE ?X_D)))
			(!W5 (?X_O (BEFORE ?X_E)))
			(!W6 (?X_M (BEFORE ?X_B)))
			(!W7 (?X_M (BEFORE ?X_C)))
			(!W8 (?X_M (BEFORE ?X_D)))
			(!W9 (?X_M (BEFORE ?X_E)))
			(!W10 (?X_K (BEFORE ?X_C)))
			(!W11 (?X_K (BEFORE ?X_D)))
			(!W12 (?X_K (BEFORE ?X_E)))
			(!W13 (?X_I (BEFORE ?X_D)))
			(!W14 (?X_I (BEFORE ?X_E)))
			(!W15 (?X_G (BEFORE ?X_E)))
			(!W16 (?X_A (BEFORE ?X_B)))
			(!W17 (?X_A (BEFORE ?X_C)))
			(!W18 (?X_A (BEFORE ?X_D)))
			(!W19 (?X_A (BEFORE ?X_E)))
			(!W20 (?X_B (BEFORE ?X_C)))
			(!W21 (?X_B (BEFORE ?X_D)))
			(!W22 (?X_B (BEFORE ?X_E)))
			(!W23 (?X_C (BEFORE ?X_D)))
			(!W24 (?X_C (BEFORE ?X_E)))
			(!W25 (?X_D (BEFORE ?X_E)))
		)
	)
	(
			"A man goes out to a destination mailbox of a man."
			"A man is for."
			"A paper of a man is ADV not there."
			"A man calls a of a man."
			"A of a man runs late."
			"A man go.250s a destination mailbox of a man from L1."
			"A man go.251s a destination mailbox of a man from L1."
			"A man find.266s a entity for a paper of a man."
			"A man search.257s for a paper of a man."
			"A paper of a man is ADV not there."
			"A man calls a of a man."
			"A of a man runs late."
	)
)



(
	(EPI-SCHEMA ((?X_A GET.34.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B NEW.A))
			(!R7 (?X_B IPAD.N))
			(!R8 (?X_B NICE.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-289.PR ?X_D ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_D BOX.N))
			(!R2 (?X_D (VERY.ADV AMAZING.A)))
			(!R3 (?X_I AGENT.N))
			(!R4 (?X_J NEW.A))
			(!R5 (?X_J IPAD.N))
			(!R6 (?X_J NICE.A))
			(!R7 (NOT (?X_J AGENT.N)))
			(!R8 (NOT (?X_J ACTION.N)))
			(!R9 (NOT (?X_I = ?X_J)))
		)
		(:STEPS
			(?X_H (?X_I GET.34.V ?X_J))
			(?X_F (?X_A ?X_I (((ADV (VERY.ADV MUCH.A)) LIKE.V) ?X_J)))
			(?X_C (?X_I (SAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent get.278s a new ipad nice."
			"X_A likes a new ipad nice ADV very much."
			"A agent saves a box very amazing."
	)
)



(
	(EPI-SCHEMA ((MUST.AUX-S (?X_A (GET.35.V (ANOTHER.D ONE.N)))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((ANOTHER.D ONE.N) AGENT.N)))
			(!R3 (NOT ((ANOTHER.D ONE.N) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (ANOTHER.D ONE.N))))
			(!R6 (?X_A HAPPY.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (ANOTHER.D ONE.N)))))))
			(?G2 (?X_A (NEED.V (ANOTHER.D ONE.N))))
			(?G3 (?X_A (WANT.V (ANOTHER.D ONE.N))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (ANOTHER.D ONE.N))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((ANOTHER.D ONE.N) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (ANOTHER.D ONE.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((JUST.ADV GET.36.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_A HAPPY.A))
			(!R7 (?X_B NEW.A))
			(!R8 (?X_B RING.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G (COMPOSITE-SCHEMA-290.PR (ANOTHER.D ONE.N) ?X_F)) ** ?E)
		(:ROLES
			(!R1 (?X_F NEW.A))
			(!R2 (?X_F RING.N))
			(!R3 (NOT (?X_F AGENT.N)))
			(!R4 (NOT (?X_F ACTION.N)))
			(!R5 (NOT (?X_G = ?X_F)))
			(!R6 (?X_G AGENT.N))
			(!R7 (?X_G HAPPY.A))
			(!R8 (NOT ((ANOTHER.D ONE.N) AGENT.N)))
			(!R9 (NOT ((ANOTHER.D ONE.N) ACTION.N)))
			(!R10 (NOT (?X_G = (ANOTHER.D ONE.N))))
		)
		(:STEPS
			(?X_E (?X_G ((JUST.ADV GET.36.V) ?X_F)))
			(?X_A (?X_G (ABOUT.P ?X_F)))
			(?X_C (MUST.AUX-S (?X_G (GET.35.V (ANOTHER.D ONE.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
			(!W2 (?X_E (BEFORE ?X_C)))
			(!W3 (?X_A (BEFORE ?X_C)))
		)
	)
	(
			"A agent happy get.286s a new ring just."
			"A agent happy is about."
			"A agent happy get.285s another one must."
		adding constraint (ME$11$353.SK AGENT.N)
		adding constraint (WE$0$354.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.57.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A WIFE.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.57.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.57.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.57.V) ?L2))
			(?X_C (?X_B GO.57.V))
			(?X_C (?X_B GO.57.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.57.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_F)))
			(!W7 (?X_D (AT-ABOUT ?X_F)))
			(!W8 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-291.PR ?X_H (K NOTHING.N) ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_H BUZZ.V))
			(!R3 (?X_H SOUND.N))
			(!R4 (?X_I WIFE.N))
			(!R5 (?X_I (PERTAIN-TO ?X_N)))
			(!R6 (?X_N AGENT.N))
			(!R7 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_G (?X_I (HEAR.V ?X_H)))
			(?X_E (?X_N ((ADV-A (FROM.P ?L1)) GO.57.V) ?L2))
			(?X_B (?X_C (HEAR.V (K NOTHING.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A wife of a agent hears a buzz sound."
			"A agent go.295s a destination from L1."
			"A agent hears nothing."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) COME.10.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A BENT.A))
			(!R6 (?X_A WHEEL.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) COME.10.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.10.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) COME.10.V) ?L2))
			(?X_C (?X_B (HARD.ADV (DOWN.ADV COME.10.V))))
			(?X_C (?X_B COME.10.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? COME.10.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.20.V ?X_B ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A BOY.N))
			(!R2 (?X_B WHEEL.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_C DESTINATION.N))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_B BENT.A))
			(!R8 (?X_C SHOP.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?X_C)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?X_C)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_C)) TAKE.V) ?X_B)))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) CARRY.V) ?X_B))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) BRING.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (TO.P ?X_A)) TAKE.21.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_A SHOP.N))
			(!R7 (?X_C BENT.A))
			(!R8 (?X_C WHEEL.N))
			(!R9 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-292.PR (K BENT.A) (KE (?X_K (PASV RUIN.V))) ?L2
	               ?X_I ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?L2 DESTINATION.N))
			(!R2 (?X_I DESTINATION.N))
			(!R3 (?X_K SMALLER-THAN.N ?X_J))
			(!R4 (?X_I SHOP.N))
			(!R5 (?X_K BENT.A))
			(!R6 (?X_K WHEEL.N))
			(!R7 (?X_K (PERTAIN-TO ?X_J)))
			(!R8 (?X_J BOY.N))
			(!R9 (NOT (?X_K AGENT.N)))
			(!R10 (NOT (?X_K ACTION.N)))
			(!R11 (NOT (?X_J = ?X_K)))
		)
		(:STEPS
			(?X_H (?X_J ((ADV-A (FROM.P ?L1)) COME.10.V) ?L2))
			(?X_B (?X_K (GET.V (K BENT.A))))
			(?X_F (?X_J TRANSPORT_OBJECT.20.V ?X_K ?X_I))
			(?X_F (?X_J (((ADV-A (TO.P ?X_I)) TAKE.21.V) ?X_K)))
			(?X_D (?X_A (SAY.V (KE (?X_K (PASV RUIN.V))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_B)))
			(!W2 (?X_H (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_D)))
			(!W4 (?X_B (BEFORE ?X_F)))
			(!W5 (?X_B (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A boy come.322s a destination from L1."
			"A bent wheel of a boy gets bent."
			"A boy transport object.317s a bent wheel of a boy a destination shop."
			"A boy take.312s a bent wheel of a boy to a destination shop."
			"X_A says a bent wheel of a boy PASV ruins."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?X_C)) COME.11.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D DOG.N))
			(!R2 (?X_C OUTSIDE.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_C = ?L2)))
			(!R5 (?X_B GARAGE.N))
			(!R6 (?X_D (PERTAIN-TO ?X_A)))
			(!R7 (?X_C PUPPY.A))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?X_C))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.11.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?X_C)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.11.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.11.V) ?L2))
			(?X_E (?X_D ((ADV-A (INTO.P ?X_B)) COME.11.V)))
			(?X_E (?X_D COME.11.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? COME.11.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-293.PR (K (PLUR PUPPY.N))
	               (K (L X (AND (X COLD.A) (X OUTSIDE.N)))) ?X_N ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G GARAGE.N))
			(!R2 (?X_M (PERTAIN-TO ?X_L)))
			(!R3 (?X_N PUPPY.A))
			(!R4 (?X_N OUTSIDE.N))
			(!R5 (?X_M DOG.N))
			(!R6 (NOT (?X_N = ?L2)))
			(!R7 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_K (?X_M (HAVE.V (K (PLUR PUPPY.N)))))
			(?X_I (?X_A (BE.V (K (L X (AND (X COLD.A) (X OUTSIDE.N)))))))
			(?X_F (?X_M ((ADV-A (FROM.P ?X_N)) COME.11.V) ?L2))
			(?X_D (?X_M (HAVE.V ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_I (BEFORE ?X_F)))
			(!W5 (?X_I (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A dog of X_L has puppys."
			"X_A is cold outside."
			"A dog of X_L come.332s a destination from a puppy outside."
			"A dog of X_L has a puppy outside."
		adding constraint (I$0$423.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (ON.P ?X_B)) SIT.3.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B FURNITURE.N))
			(!R4 (?L LOCATION.N))
			(!R5 (?X_B HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA REST.V))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (IN.P ?X_B)) SIT.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C COMPOSITE-SCHEMA-294.PR) ** ?E)
		(:ROLES
			(!R1 (?X_C GARBAGE.N))
			(!R2 (?X_C (VERY.ADV BAD.A)))
			(!R3 (?X_G FURNITURE.N))
			(!R4 (?X_G HOUSE.N))
			(!R5 (?X_F AGENT.N))
			(!R6 (NOT (?X_G AGENT.N)))
		)
		(:STEPS
			(?X_B (?X_C ((ADV-A (FOR.P (KA SMELL.N))) START.V)))
			(?X_E (?X_F ((ADV-A (ON.P ?X_G)) SIT.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B BEFORE ?X_E))
		)
	)
	(
			"A garbage very bad starts for smell."
			"A agent sit.345s on a furniture house."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-295.PR ?X_A ?X_C)) ** ?E)
		(:ROLES
			(!R1 (?X_A (ALWAYS.ADV COLD.A)))
			(!R2 (?X_A DOG.N))
			(!R3 (?X_A (PERTAIN-TO ?X_B)))
			(!R4 (?X_C DOG.N))
			(!R5 (?X_C SWEATER.N))
		)
		(:STEPS
			(?X_E (?X_B (GIVE.V ?X_A ?X_C)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-296.PR (K (PLUR CLOTHE.N)))) ** ?E)
		(:ROLES
			(!R1 (?X_C ((NOW.ADV HAS.V) (K (PLUR CLOTHE.N)))))
			(!R2 (?X_B (PLUR CLOTHE.N)))
			(!R3 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:STEPS
			(?X_A (?X_C (NEED.V (K (PLUR CLOTHE.N)))))
			(?X_E (?X_C ((ADV-A (FOR.P (KA (WASH.V ?X_B)))) BEGIN.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_E)))
		)
	)
	(
			"A now has clothes needs clothes."
			"A now has clothes begins for washing a clothes of a now has clothes."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.4.V) (KA (INTRODUCE.V ?X_A))) **
	             ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (INTRODUCE.V ?X_A)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (INTRODUCE.V ?X_A)))))
			(!R5 (?X_A EXCITED.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KA (INTRODUCE.V ?X_A)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA (INTRODUCE.V ?X_A))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA (INTRODUCE.V ?X_A)))))
		)
		(:PARAPHRASES
			(?X_B
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? (KA (INTRODUCE.V ?X_A))))
	     ((ADV-A (FOR.P (KA (INTRODUCE.V ?X_A)))) GO.4.V))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (INTRODUCE.V ?X_A)))) GO.4.V))))
			(?X_B
	   (?X_A ((ADV-A (DESTINATION_PREP.? (KA (INTRODUCE.V ?X_A)))) GO.4.V)
	    (KA (INTRODUCE.V ?X_A))))
			(?X_B (?X_A GO.4.V))
			(?X_B (?X_A GO.4.V (KA (INTRODUCE.V ?X_A))))
			(?X_B (?X_A (LOCATION_ADV.? GO.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (AT.P ?X_E)) FIND.62.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B ENTITY.N))
			(!R4 (?X_A EXCITED.A))
			(!R5 (?X_B (PLUR FRIEND.N)))
			(!R6 (?X_E OUTSIDE.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A MAKE.12.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_A EXCITED.A))
			(!R4 (?X_B (PLUR FRIEND.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-297.PR
	               (KE
	                (?X_N (GET.V (K (L X (AND (X NEW.A) (X (PLUR NEIGHBOR.N))))))))
	               (K
	                (LIKE.P
	                 (?X_N
	                  (GET.V (K (L X (AND (X NEW.A) (X (PLUR NEIGHBOR.N)))))))))
	               (KA (INTRODUCE.V ?X_N)) ?X_O))
	             ** ?E)
		(:ROLES
			(!R1 ((KA (INTRODUCE.V ?X_N)) DESTINATION.N))
			(!R2 (?X_N AGENT.N))
			(!R3 (?X_N EXCITED.A))
			(!R4 (?X_O (PLUR FRIEND.N)))
		)
		(:STEPS
			(?X_M (?X_N (((ADV-A (AT.P ?X_E)) FIND.62.V) ?X_O)))
			(?X_K
	   (?X_A
	    (LIKE.P
	     (KE (?X_N (GET.V (K (L X (AND (X NEW.A) (X (PLUR NEIGHBOR.N)))))))))))
			(?X_I
	   (?X_A
	    (LOOK.V
	     (K
	      (LIKE.P
	       (?X_N (GET.V (K (L X (AND (X NEW.A) (X (PLUR NEIGHBOR.N))))))))))))
			(?X_G (?X_N ((ADV-A (FROM.P ?L1)) GO.4.V) (KA (INTRODUCE.V ?X_N))))
			(?X_D (?X_N MAKE.12.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_K)))
			(!W2 (?X_M (BEFORE ?X_I)))
			(!W3 (?X_M (BEFORE ?X_G)))
			(!W4 (?X_M (BEFORE ?X_D)))
			(!W5 (?X_K (BEFORE ?X_G)))
			(!W6 (?X_K (BEFORE ?X_D)))
			(!W7 (?X_I (BEFORE ?X_G)))
			(!W8 (?X_I (BEFORE ?X_D)))
			(!W9 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A agent excited find.8s a friends at X_E."
			"X_A is like."
			"X_A looks like a agent excited gets new neighbor."
			"A agent excited go.6s introducing a agent excited from L1."
			"A agent excited make.7s a friends."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.25.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B (MORE.ADV TIRED.A)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A BREATH.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.25.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.25.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.25.V) ?L2))
			(?X_C (?X_B ((ADV (VERY.ADV FAST.A)) RUN.25.V)))
			(?X_C (?X_B RUN.25.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.25.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-298.PR (KE (?X_L THINK.V)) ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_F BREAK.N))
			(!R2 (?X_K BREATH.N))
			(!R3 (?X_K (PERTAIN-TO ?X_L)))
			(!R4 (?X_L (MORE.ADV TIRED.A)))
			(!R5 (?X_L MAN.N))
			(!R6 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_L ((ADV-A (FOR.P (KA (CATCH.V ?X_K)))) STOP.V)))
			(?X_J (?X_L ((ADV-A (FROM.P ?L1)) RUN.25.V) ?L2))
			(?X_A (?X_L ((ADV-A (FOR.P (KA (CATCH.V ?X_K)))) STOP.V)))
			(?X_B (?X_L (THAN.P (KE (?X_L THINK.V)))))
			(?X_C (?X_L (THAN.P (KE (?X_L THINK.V)))))
			(?X_E (?X_L (DOWN.ADV ((ADV-A (FOR.P ?X_F)) SIT.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_A)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_H (BEFORE ?X_C)))
			(!W4 (?X_H (BEFORE ?X_E)))
			(!W5 (?X_J (BEFORE ?X_A)))
			(!W6 (?X_J (BEFORE ?X_B)))
			(!W7 (?X_J (BEFORE ?X_C)))
			(!W8 (?X_J (BEFORE ?X_E)))
			(!W9 (?X_A (BEFORE ?X_B)))
			(!W10 (?X_A (BEFORE ?X_C)))
			(!W11 (?X_A (BEFORE ?X_E)))
			(!W12 (?X_B (BEFORE ?X_E)))
			(!W13 (?X_C (BEFORE ?X_E)))
		)
	)
	(
			"A more tired man stops for catching a breath of a more tired man."
			"A more tired man run.25s a destination from L1."
			"A more tired man stops for catching a breath of a more tired man."
			"A more tired man is than."
			"A more tired man is than."
			"A more tired man sits down for a break."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.58.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B POND.N))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.58.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.58.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.58.V) ?X_B))
			(?X_C (?X_A GO.58.V))
			(?X_C (?X_A GO.58.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.58.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (BEFORE ?X_D)))
			(!W7 (?X_E (SAME-TIME ?X_D)))
			(!W8 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.59.V) ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B POND.N))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.59.V))))
			(?X_D
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.59.V))))
			(?X_D (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.59.V) ?X_B))
			(?X_D (?X_A GO.59.V))
			(?X_D (?X_A GO.59.V ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? GO.59.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (RIGHT-AFTER ?X_C)))
			(!W7 (?X_D (SAME-TIME ?X_F)))
			(!W8 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-299.PR ?X_J (THREE.D (PLUR TIME.N)) ?X_D ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D BIG.A))
			(!R2 (?X_D SPLASH.N))
			(!R3 (?X_E ROCK.N))
			(!R4 (?X_E (TOO.ADV BIG.A)))
			(!R5 (?X_J ROCK.N))
			(!R6 (?X_M DESTINATION.N))
			(!R7 (?X_M POND.N))
			(!R8 (?X_M (PERTAIN-TO ?X_N)))
			(!R9 (?X_N AGENT.N))
		)
		(:STEPS
			(?X_L (?X_N ((ADV-A (FROM.P ?L1)) GO.58.V) ?X_M))
			(?X_A (?X_N ((ADV-A (FROM.P ?L1)) GO.59.V) ?X_M))
			(?X_I (?X_N ((UP.PRT PICK.V) ?X_J)))
			(?X_G (?X_J (SKIP.V (THREE.D (PLUR TIME.N)))))
			(?X_C (?X_E ((JUST.ADV MAKE.V) ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_A)))
			(!W2 (?X_L (BEFORE ?X_I)))
			(!W3 (?X_L (BEFORE ?X_G)))
			(!W4 (?X_L (BEFORE ?X_C)))
			(!W5 (?X_A (BEFORE ?X_I)))
			(!W6 (?X_A (BEFORE ?X_G)))
			(!W7 (?X_A (BEFORE ?X_C)))
			(!W8 (?X_I (BEFORE ?X_G)))
			(!W9 (?X_I (BEFORE ?X_C)))
			(!W10 (?X_G (BEFORE ?X_C)))
		)
	)
	(
			"A agent go.41s a destination pond of a agent from L1."
			"A agent go.42s a destination pond of a agent from L1."
			"A agent picks a rock up."
			"A rock skips three times."
			"A rock too big makes a big splash just."
	)
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.16.V (KA SKATE.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 ((KA SKATE.V) ACTION.N))
			(!R3 (?X_A (K FIRST.A) LESSON.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_B (THINK.V (THAT ((KA SKATE.V) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B (WANT.V (KA SKATE.V))))
			(?X_C (?X_B (LIKE.V (KA SKATE.V))))
			(?X_C (?X_B (LOVE.V (KA SKATE.V))))
			(?X_C (?X_B (ENJOY.V (KA SKATE.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TAKE.22.V (K (PLUR LESSON.N))) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K (PLUR LESSON.N)) AGENT.N)))
			(!R3 (NOT ((K (PLUR LESSON.N)) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (K (PLUR LESSON.N)))))
			(!R6 (?X_A (K FIRST.A) LESSON.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (K (PLUR LESSON.N))))))))
			(?G2 (?X_B (NEED.V (K (PLUR LESSON.N)))))
			(?G3 (?X_B (WANT.V (K (PLUR LESSON.N)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K (PLUR LESSON.N)))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K (PLUR LESSON.N)) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K (PLUR LESSON.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-300.PR (KA SKATE.V) (K (PLUR LESSON.N)))) **
	             ?E)
		(:ROLES
			(!R1 (?X_E (K FIRST.A) LESSON.N))
			(!R2 (?X_E (PERTAIN-TO ?X_F)))
			(!R3 ((KA SKATE.V) ACTION.N))
			(!R4 (?X_F AGENT.N))
			(!R5 (NOT ((K (PLUR LESSON.N)) AGENT.N)))
			(!R6 (NOT ((K (PLUR LESSON.N)) ACTION.N)))
			(!R7 (NOT (?X_F = (K (PLUR LESSON.N)))))
		)
		(:STEPS
			(?X_D (?X_F ENJOY_ACTION.16.V (KA SKATE.V)))
			(?X_B (?X_F TAKE.22.V (K (PLUR LESSON.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent enjoy action.60s skating."
			"A agent take.56s lessons."
		adding constraint (ME$0$152.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) COME.12.V)
	              (K (IF.P (?X_B (CALL.V ?X_C)))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_C HORSE.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (IF.P (?X_B (CALL.V ?X_C)))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (IF.P (?X_B (CALL.V ?X_C)))))))
			(!R5 (?X_C KIND.N))
			(!R6 (?X_C STRONG.A))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
			(!R8 (?X_B AGENT.N))
			(!R9 (?X_A HAND.N))
			(!R10 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1
	   (?X_C (WANT.V (KA ((ADV-A (AT.P (K (IF.P (?X_B (CALL.V ?X_C)))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (K (IF.P (?X_B (CALL.V ?X_C))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (K (IF.P (?X_B (CALL.V ?X_C)))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (K (IF.P (?X_B (CALL.V ?X_C)))))) COME.12.V)))
			(?X_D
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (IF.P (?X_B (CALL.V ?X_C)))))) COME.12.V))))
			(?X_D
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (K (IF.P (?X_B (CALL.V ?X_C)))))) COME.12.V)
	    (K (IF.P (?X_B (CALL.V ?X_C))))))
			(?X_D (?X_C COME.12.V))
			(?X_D (?X_C COME.12.V (K (IF.P (?X_B (CALL.V ?X_C))))))
			(?X_D (?X_C (LOCATION_ADV.? COME.12.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AFTER ?X_E)))
			(!W7 (?X_E (AT-ABOUT ?X_G)))
			(!W8 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RUN.26.V)
	              (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E))))
	             ** ?X_F)
		(:ROLES
			(!R1 (?X_D HORSE.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E))))))
			(!R5 (?X_D STRONG.A))
			(!R6 (?X_D KIND.N))
			(!R7 (?X_E HORSE.N))
			(!R8 (?X_D (PERTAIN-TO ?X_B)))
			(!R9 (?X_B AGENT.N))
			(!R10 (?X_E (PERTAIN-TO ?X_A)))
			(!R11 (?X_C (PERTAIN-TO ?X_B)))
			(!R12 (?X_C HAND.N))
		)
		(:GOALS
			(?G1
	   (?X_D
	    (WANT.V
	     (KA ((ADV-A (AT.P (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E))))))
		)
		(:PARAPHRASES
			(?X_F
	   (?X_D
	    ((ADV-A (DESTINATION_PREP.? (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E)))))
	     RUN.26.V)))
			(?X_F
	   (?X_D
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E)))))
	      RUN.26.V))))
			(?X_F
	   (?X_D
	    ((ADV-A (DESTINATION_PREP.? (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E)))))
	     RUN.26.V)
	    (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E)))))
			(?X_F (?X_D RUN.26.V))
			(?X_F (?X_D ((CAN.AUX RUN.26.V) (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_E))))))
			(?X_F (?X_D (LOCATION_ADV.? RUN.26.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (FROM.P ?X_A)) EAT.8.V) ?F)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C HORSE.N))
			(!R2 (?F FOOD.N))
			(!R3 (?X_C KIND.N))
			(!R4 (?X_C STRONG.A))
			(!R5 (?X_A HAND.N))
			(!R6 (?X_B AGENT.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?F))
			(?I2 (?X_C HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (HAVE.V ?F))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_D))
			(!W2 (?I1 BEFORE ?X_D))
			(!W3 (?X_D CAUSE-OF ?P1))
			(!W4 (?X_D (AFTER ?X_E)))
			(!W5 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D FEED.10.V ?X_E ?F) ** ?E)
		(:ROLES
			(!R1 (?X_D HORSE.N))
			(!R2 (?X_E HORSE.N))
			(!R3 (?F FOOD.N))
			(!R4 (NOT (?X_D = ?X_E)))
			(!R5 (NOT (?X_E = ?F)))
			(!R6 (NOT (?X_D = ?F)))
			(!R7 (?X_E STRONG.A))
			(!R8 (?X_E KIND.N))
			(!R9 (?X_C HAND.N))
			(!R10 (?X_C (PERTAIN-TO ?X_A)))
			(!R11 (?X_A AGENT.N))
			(!R12 (?X_E (PERTAIN-TO ?X_A)))
			(!R13 (?X_D (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (NOT (?X_E HUNGRY.A))))))
			(?G2 (?X_D (WANT.V (THAT (?X_E (((ADV-A (FROM.P ?X_C)) EAT.V) ?F))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?F))
			(?I2 (?X_E HUNGRY.A))
		)
		(:STEPS
			(?X_F (?X_E (((ADV-A (FROM.P ?X_C)) EAT.V) ?F)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (HAVE.V ?F))))
			(?P2 (NOT (?X_E HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F AFTER ?E))
			(!W2 (?X_F (AFTER ?X_G)))
			(!W3 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FEED.11.V ?X_C ?F) ** ?E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C HORSE.N))
			(!R3 (?F FOOD.N))
			(!R4 (NOT (?X_B = ?X_C)))
			(!R5 (NOT (?X_C = ?F)))
			(!R6 (NOT (?X_B = ?F)))
			(!R7 (?X_C STRONG.A))
			(!R8 (?X_C KIND.N))
			(!R9 (?X_A HAND.N))
			(!R10 (?X_A (PERTAIN-TO ?X_B)))
			(!R11 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (NOT (?X_C HUNGRY.A))))))
			(?G2 (?X_B (WANT.V (THAT (?X_C (((ADV-A (FROM.P ?X_A)) EAT.V) ?F))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?F))
			(?I2 (?X_C HUNGRY.A))
		)
		(:STEPS
			(?X_D (?X_C (((ADV-A (FROM.P ?X_A)) EAT.V) ?F)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (HAVE.V ?F))))
			(?P2 (NOT (?X_C HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D AFTER ?E))
			(!W2 (?X_D (AFTER ?X_E)))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_U
	              (COMPOSITE-SCHEMA-301.PR ?X_S ?X_A (KE (?X_S (CALL.V ?X_U)))
	               (K (IF.P (?X_S (CALL.V ?X_U))))
	               (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_R))) ?X_U ?F))
	             ** ?E)
		(:ROLES
			(!R1 (?X_T (PERTAIN-TO ?X_S)))
			(!R2 (?X_L WAGON.N))
			(!R3 (?X_R (PERTAIN-TO ?X_O)))
			(!R4 ((K ((ADV (AS.ADV FAST.A)) (AS.P ?X_R))) DESTINATION.N))
			(!R5 ((K (IF.P (?X_S (CALL.V ?X_U)))) DESTINATION.N))
			(!R6 (?X_R HORSE.N))
			(!R7 (NOT (?X_R = ?X_U)))
			(!R8 (NOT (?X_R = ?F)))
			(!R9 (?X_S AGENT.N))
			(!R10 (?X_U (PERTAIN-TO ?X_S)))
			(!R11 (NOT (?X_S = ?X_U)))
			(!R12 (NOT (?X_U = ?F)))
			(!R13 (NOT (?X_S = ?F)))
			(!R14 (?X_T HAND.N))
			(!R15 (?X_U KIND.N))
			(!R16 (?X_U HORSE.N))
			(!R17 (?X_U STRONG.A))
			(!R18 (?F FOOD.N))
		)
		(:STEPS
			(?X_K (?X_U (((ADV-A (IN.P ?X_L)) DRAW.V) ?X_S)))
			(?X_I
	   (?X_U ((ADV-A (FROM.P ?L1)) RUN.26.V)
	    (K ((ADV (AS.ADV FAST.A)) (AS.P ?X_R)))))
			(?X_G (?X_S (CALL.V ?X_A)))
			(?X_E (?X_U (IF.P (KE (?X_S (CALL.V ?X_U))))))
			(?X_B (?X_U ((ADV-A (FROM.P ?L1)) COME.12.V) (K (IF.P (?X_S (CALL.V ?X_U))))))
			(?E_1 (?X_R FEED.10.V ?X_U ?F))
			(?E_2 (?X_S FEED.11.V ?X_U ?F))
			(?X_C (?X_U (((ADV-A (FROM.P ?X_T)) EAT.8.V) ?F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_K (BEFORE ?X_C)))
			(!W6 (?X_I (BEFORE ?X_G)))
			(!W7 (?X_I (BEFORE ?X_E)))
			(!W8 (?X_I (BEFORE ?X_B)))
			(!W9 (?X_I (BEFORE ?X_C)))
			(!W10 (?X_G (BEFORE ?X_E)))
			(!W11 (?X_G (BEFORE ?X_B)))
			(!W12 (?X_G (BEFORE ?X_C)))
			(!W13 (?X_E (BEFORE ?X_C)))
			(!W14 (?E_1 (BEFORE ?X_C)))
			(!W15 (?E_2 (BEFORE ?X_C)))
		)
	)
	(
			"A kind horse strong of a agent draws a agent in a wagon."
			"A kind horse strong of a agent run.63s ADV as fast as a horse of X_O from L1."
			"A agent calls X_A."
			"A kind horse strong of a agent is if."
			"A kind horse strong of a agent come.62s if a agent calls a kind horse strong of a agent from L1."
			"A horse of X_O feed.72s a kind horse strong of a agent a food."
			"A agent feed.74s a kind horse strong of a agent a food."
			"A kind horse strong of a agent eat.67s a food from a hand of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.60.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B STORE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.60.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.60.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.60.V) ?X_B))
			(?X_C (?X_A GO.60.V))
			(?X_C (?X_A GO.60.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.60.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-302.PR ?X_D)) ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_D DESTINATION.N))
			(!R3 (?X_D STORE.N))
		)
		(:STEPS
			(?X_B (?X_C ((ADV-A (FROM.P ?L1)) GO.60.V) ?X_D))
		)
	)
	(
			"A agent go.108s a destination store from L1."
		adding constraint (WE$2$188.SK AGENT.N)
		adding constraint (I$12$189.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_G COMPOSITE-SCHEMA-303.PR) ** ?E)
		(:ROLES
			(!R1 (?X_D BEACH.N))
			(!R2 (?X_D DAY.N))
			(!R3 (?X_D GREAT.A))
			(!R4 (?X_G AGENT.N))
			(!R5 (?X_H AGENT.N))
		)
		(:STEPS
			(?X_F
	   ((ADV-E (DURING ?X_D)) ((K (L X (AND (X LAST.A) (X WEEK.N)))) ?X_G HAVE.V)))
			(?X_B (?X_G GO.V))
			(?X_C (?X_G GO.V))
			(?X_J (?X_H ((ADV (RIGHT.ADV AWAY.A)) (IN.PRT JUMP.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_B)))
			(!W2 (?X_F (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_J)))
			(!W4 (?X_B (BEFORE ?X_C)))
			(!W5 (?X_B (BEFORE ?X_J)))
			(!W6 (?X_C (BEFORE ?X_J)))
		)
	)
	(
			"Last week has DURING a beach day great."
			"A agent goes."
			"A agent goes."
			"A agent jumps ADV right away in."
		adding constraint (I$0$201.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) COME.13.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A DOOR.N))
			(!R6 (?X_A (AT.P (K WORK.N))))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) COME.13.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.13.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) COME.13.V) ?L2))
			(?X_C (?X_B ((ADV-A (THROUGH.P ?X_A)) COME.13.V)))
			(?X_C (?X_B COME.13.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? COME.13.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.27.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.27.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.27.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.27.V) ?L2))
			(?X_C (?X_B (ALMOST.ADV ((ADV-A (INTO.P ?X_A)) RUN.27.V))))
			(?X_C (?X_B RUN.27.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.27.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-304.PR ?X_D ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_D PIECE.N))
			(!R2 (?X_D TWO.N))
			(!R3 (?X_D PURPLE.A))
			(!R4 (?X_I DOOR.N))
			(!R5 (?X_I (AT.P (K WORK.N))))
			(!R6 (?X_J AGENT.N))
			(!R7 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_J ((ADV-A (FROM.P ?L1)) COME.13.V) ?L2))
			(?X_F (?X_J ((ADV-A (FROM.P ?L1)) RUN.27.V) ?L2))
			(?X_C (?X_A (WEAR.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent come.132s a destination from L1."
			"A agent run.133s a destination from L1."
			"X_A wears a piece two purple."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.28.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.28.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.28.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.28.V) ?L2))
			(?X_B (?X_A RUN.28.V))
			(?X_B (?X_A RUN.28.V ?L2))
			(?X_B (?X_A RUN.28.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.61.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B JOB.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (FOR.P ?X_B)) GO.61.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.61.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.61.V) ?X_B))
			(?X_C (?X_A GO.61.V))
			(?X_C (?X_A GO.61.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.61.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (AT.P ?X_E)) FIND.63.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B JOB.N))
			(!R4 (?X_E OUTSIDE.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-305.PR ?L2 ?X_K)) ** ?E)
		(:ROLES
			(!R1 (?X_F SUNNY.A))
			(!R2 (?X_K DESTINATION.N))
			(!R3 (?X_K JOB.N))
			(!R4 (?X_L MAN.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?L2 HOME.N))
		)
		(:STEPS
			(?X_J (?X_L (((ADV-A (AT.P ?X_E)) FIND.63.V) ?X_K)))
			(?X_H (?X_L ((ADV-A (FROM.P ?L1)) GO.61.V) ?X_K))
			(?X_D (?X_F RAIN.V))
			(?X_B (?X_L ((ADV-A (FROM.P ?L1)) RUN.28.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_D)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_H (BEFORE ?X_D)))
			(!W5 (?X_H (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man find.154s a destination job at X_E."
			"A man go.151s a destination job from L1."
			"A sunny rains."
			"A man run.152s a destination home from L1."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?X_C)) COME.14.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D CAT.N))
			(!R2 (?X_C FIELD.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_C = ?L2)))
			(!R5 (?X_B MOUSE.N))
			(!R6 (?X_A ((OUT.PRT LET.V) ?X_D)))
			(!R7 (?X_A OWNER.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?X_C))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.14.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?X_C)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.14.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.14.V) ?L2))
			(?X_E (?X_D (BACK.ADV ((ADV-A (WITH.P ?X_B)) COME.14.V))))
			(?X_E (?X_D COME.14.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? COME.14.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B INFORM.5.V ?X_C ?I) ** ?X_D)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (?X_C MOUSE.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_A OWNER.N))
			(!R6 (?X_A ((OUT.PRT LET.V) ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_D (?X_B TELL.V ?X_C ?I))
			(?X_D (?X_B (((ADV-A (TO.P ?X_A)) LET.V) ?X_C (KA (KNOW.V ?I)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (TO.P ?X_A)) GIVE.10.V) ?X_C ?O)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (?X_C MOUSE.N))
			(!R4 (?X_A ((OUT.PRT LET.V) ?X_B)))
			(!R5 (?X_A OWNER.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C (HAVE.V ?O))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?O))
			(?I2 (NOT (?X_C HAVE.V ?O)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B HAVE.V ?O)))
			(?P2 (?X_C HAVE.V ?O))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?X_C)) (GIVE.10.V ?O))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-306.PR ?L2 ?I ?X_K ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_I DOOR.N))
			(!R2 (?X_J FIELD.N))
			(!R3 (NOT (?X_J = ?L2)))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (NOT (?I ACTION.N)))
			(!R6 (?I INFORMATION.N))
			(!R7 (?X_K MOUSE.N))
			(!R8 (?X_L CAT.N))
			(!R9 (?X_M ((OUT.PRT LET.V) ?X_L)))
			(!R10 (?X_M OWNER.N))
			(!R11 (NOT (?O AGENT.N)))
		)
		(:STEPS
			(?X_H (?X_L ((ADV-A (AT.P ?X_I)) MEOW.V)))
			(?X_F (?X_L ((ADV-A (IN.P ?X_J)) PLAY.V)))
			(?X_D (?X_L ((ADV-A (FROM.P ?X_J)) COME.14.V) ?L2))
			(?X_B (?X_L INFORM.5.V ?X_K ?I))
			(?X_B (?X_L (((ADV-A (TO.P ?X_M)) GIVE.10.V) ?X_K ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A cat meows at a door."
			"A cat plays in a field."
			"A cat come.159s a destination from a field."
			"A cat inform.169s a mouse a information."
			"A cat give.165s a mouse O to a owner out letting a cat."
		adding constraint (I$0$246.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.17.V (KA VOMIT.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA VOMIT.V) ACTION.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA VOMIT.V) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_B (?X_A (WANT.V (KA VOMIT.V))))
			(?X_B (?X_A (LIKE.V (KA VOMIT.V))))
			(?X_B (?X_A (LOVE.V (KA VOMIT.V))))
			(?X_B (?X_A (ENJOY.V (KA VOMIT.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.18.V (KA (AGAIN.ADV DRINK.V))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (AGAIN.ADV DRINK.V)) ACTION.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (AGAIN.ADV DRINK.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((NEVER.ADV WANT.V) (KA (AGAIN.ADV DRINK.V)))))
			(?X_B (?X_A (LIKE.V (KA (AGAIN.ADV DRINK.V)))))
			(?X_B (?X_A (LOVE.V (KA (AGAIN.ADV DRINK.V)))))
			(?X_B (?X_A (ENJOY.V (KA (AGAIN.ADV DRINK.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H
	              (COMPOSITE-SCHEMA-307.PR (KA (LIKE.V ?X_G)) (KA VOMIT.V)
	               (KA (AGAIN.ADV DRINK.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G WINE.N))
			(!R2 ((KA VOMIT.V) ACTION.N))
			(!R3 (?X_H AGENT.N))
			(!R4 ((KA (AGAIN.ADV DRINK.V)) ACTION.N))
		)
		(:STEPS
			(?X_F (?X_H (WANT.V (KA (LIKE.V ?X_G)))))
			(?X_D (?X_H ENJOY_ACTION.17.V (KA VOMIT.V)))
			(?X_B (?X_H ENJOY_ACTION.18.V (KA (AGAIN.ADV DRINK.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent wants liking a wine."
			"A agent enjoy action.179s vomiting."
			"A agent enjoy action.180s again drink."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.29.V)
	              (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N)))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N)))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N)))))))
			(!R5 (?X_A DAY.N))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V
	     (KA
	      ((ADV-A (AT.P (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N)))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N)))))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.? (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))
	     RUN.29.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.? (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))
	      RUN.29.V))))
			(?X_C
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.? (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))
	     RUN.29.V)
	    (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))
			(?X_C (?X_B RUN.29.V))
			(?X_C
	   ((ADV-E (DURING ?X_A))
	    (?X_B (RUN.29.V (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))))
			(?X_C (?X_B (LOCATION_ADV.? RUN.29.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D
	              (COMPOSITE-SCHEMA-308.PR
	               (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C DAY.N))
			(!R2 ((K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N)))) DESTINATION.N))
			(!R3 (?X_D AGENT.N))
		)
		(:STEPS
			(?X_B
	   (?X_D ((ADV-A (FROM.P ?L1)) RUN.29.V)
	    (K ((ADV (FAR.ADV AWAY.A)) (FROM.P (K HOME.N))))))
		)
	)
	(
			"A agent run.191s ADV far away from home from L1."
	)
)



(
	(EPI-SCHEMA (((K (PLUR MAN.N)) ((ADV-A (FROM.P ?L1)) SAIL.1.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 ((K (PLUR MAN.N)) AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A SEA.N))
			(!R6 (?X_A WIDE.A))
			(!R7 (?X_B EARTH.N))
			(!R8 (?X_B ROUND.A))
		)
		(:GOALS
			(?G1 ((K (PLUR MAN.N)) (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 ((K (PLUR MAN.N)) (AT.P ?L1)))
			(?I2 (NOT ((K (PLUR MAN.N)) (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT ((K (PLUR MAN.N)) (AT.P ?L1))))
			(?P2 ((K (PLUR MAN.N)) (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C ((K (PLUR MAN.N)) ((ADV-A (DESTINATION_PREP.? ?X_B)) SAIL.1.V)))
			(?X_C
	   ((K (PLUR MAN.N))
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) SAIL.1.V))))
			(?X_C ((K (PLUR MAN.N)) ((ADV-A (DESTINATION_PREP.? ?X_B)) SAIL.1.V) ?X_B))
			(?X_C ((K (PLUR MAN.N)) SAIL.1.V))
			(?X_C ((K (PLUR MAN.N)) (((ADV-A (OVER.P ?X_A)) (CAN.AUX SAIL.1.V)) ?X_B)))
			(?X_C ((K (PLUR MAN.N)) (LOCATION_ADV.? SAIL.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-309.PR ?X_G)) ** ?E)
		(:ROLES
			(!R1 (?X_C WIDE.A))
			(!R2 (?X_C SEA.N))
			(!R3 (?X_F (SET-OF AGENT.N)))
			(!R4 (?X_G DESTINATION.N))
			(!R5 (?X_G EARTH.N))
			(!R6 (?X_G ROUND.A))
			(!R7 ((K (PLUR MAN.N)) AGENT.N))
		)
		(:STEPS
			(?X_E (?X_F ((ADV-A (ON.P ?X_G)) LIVE.V)))
			(?X_B ((K (PLUR MAN.N)) ((ADV-A (FROM.P ?L1)) SAIL.1.V) ?X_G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent lives on a destination earth round."
			"Mans sail.198 a destination earth round from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-310.PR ?X_E)) ** ?E)
		(:ROLES
			(!R1 (?X_A (PLUR FLOWER.N)))
			(!R2 (?X_D RAIN.N))
			(!R3 (?X_E GRASS.N))
		)
		(:STEPS
			(?X_C (?X_A GROW.V))
			(?X_G (?X_D (MAKE.V ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_G)))
		)
	)
	(
			"A flowers grow."
			"A rain makes a grass."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FOR.P (KA HIT.V))) SEARCH.6.V)) ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 ((KA HIT.V) ENTITY.N))
			(!R5 (?X_D (ABLE.A (KA (L X (AND (X (MAKE.V ?X_C)) (X (WIN.V ?X_B))))))))
			(!R6 (?X_B BIG.A))
			(!R7 (?X_B GAME.N))
			(!R8 (?X_C RUN.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (FIND.V (KA HIT.V))))))
			(?G2 (?X_D (WANT.V (KA (HAVE.V (KA HIT.V))))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?LX)))
			(?I2 ((KA HIT.V) (AT.P ?LO)))
			(?I3 (NOT (?X_D (KNOW.V (THAT ((KA HIT.V) (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_D (FIND.V (KA HIT.V))))
		)
		(:PARAPHRASES
			(?X_F (?X_D (UP.ADV ((ADV-A (FOR.P (KA HIT.V))) LOOK.V))))
		)
		(:PARAPHRASES
			(?X_F (?X_D (UP.ADV ((ADV-A (FOR.P (KA HIT.V))) LOOK.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-311.PR (KA (PLAY.V (K BASEBALL.N))) ?X_K ?X_C))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C LONG.A))
			(!R2 (?X_C DRIVE.N))
			(!R3 (?X_K BIG.A))
			(!R4 (?X_K GAME.N))
			(!R5 (?X_M (ABLE.A (KA (L X (AND (X (MAKE.V ?X_L)) (X (WIN.V ?X_K))))))))
			(!R6 (?X_L RUN.N))
			(!R7 (?X_M AGENT.N))
			(!R8 ((KA HIT.V) ENTITY.N))
		)
		(:STEPS
			(?X_I (?X_M (LOVE.V (KA (PLAY.V (K BASEBALL.N))))))
			(?X_G (?X_M (HAVE.V ?X_K)))
			(?X_B (?X_M (HIT.V ?X_C)))
			(?X_E (?X_M ((ADV-A (FOR.P (KA HIT.V))) SEARCH.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_B)))
			(!W3 (?X_G (BEFORE ?X_B)))
		)
	)
	(
			"A able make winning agent loves playing baseball."
			"A able make winning agent has a big game."
			"A able make winning agent hits a long drive."
			"A able make winning agent search.240s for hitting."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) CLIMB.3.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C TREE.N))
			(!R6 (?X_C (VERY.ADV PRETTY.A)))
			(!R7 (?X_A MOTHER.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) CLIMB.3.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) CLIMB.3.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) CLIMB.3.V) ?X_C))
			(?X_D (?X_B CLIMB.3.V))
			(?X_D (?X_B ((CAN.AUX CLIMB.3.V) ?X_C)))
			(?X_D (?X_B (LOCATION_ADV.? CLIMB.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.19.V (KA ((ADV-A (WITH.P ?X_B)) PLAY.V))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_A MOTHER.N))
			(!R2 ((KA ((ADV-A (WITH.P ?X_B)) PLAY.V)) ACTION.N))
			(!R3 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA ((ADV-A (WITH.P ?X_B)) PLAY.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A (WANT.V (KA ((ADV-A (WITH.P ?X_B)) PLAY.V)))))
			(?X_C (?X_A (LIKE.V (KA ((ADV-A (WITH.P ?X_B)) PLAY.V)))))
			(?X_C (?X_A (LOVE.V (KA ((ADV-A (WITH.P ?X_B)) PLAY.V)))))
			(?X_C (?X_A (ENJOY.V (KA ((ADV-A (WITH.P ?X_B)) PLAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.36.V (K (PLUR COCOANUT.N))) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MOTHER.N))
			(!R2 (NOT ((K (PLUR COCOANUT.N)) ACTION.N)))
			(!R3 (NOT ((K (PLUR COCOANUT.N)) AGENT.N)))
			(!R4 ((K (PLUR COCOANUT.N)) OBJECT.N))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V (K (PLUR COCOANUT.N)))))))
		)
		(:PARAPHRASES
			(?X_C (?X_B WANT.V (K (PLUR COCOANUT.N))))
			(?X_C (?X_B (WANT.V (K (PLUR COCOANUT.N)))))
			(?X_C (?X_B (LIKE.36.V (K (PLUR COCOANUT.N)))))
			(?X_C (?X_B (LOVE.V (K (PLUR COCOANUT.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
			(!W2 (?X_E (SAME-TIME ?X_D)))
			(!W3 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.37.V (K (PLUR COCOANUT.N))) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MOTHER.N))
			(!R2 (NOT ((K (PLUR COCOANUT.N)) ACTION.N)))
			(!R3 (NOT ((K (PLUR COCOANUT.N)) AGENT.N)))
			(!R4 ((K (PLUR COCOANUT.N)) OBJECT.N))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V (K (PLUR COCOANUT.N)))))))
		)
		(:PARAPHRASES
			(?X_C (?X_B WANT.V (K (PLUR COCOANUT.N))))
			(?X_C (?X_B (WANT.V (K (PLUR COCOANUT.N)))))
			(?X_C (?X_B (LIKE.37.V (K (PLUR COCOANUT.N)))))
			(?X_C (?X_B (LOVE.V (K (PLUR COCOANUT.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B GET.37.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A MOTHER.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_Q
	              (COMPOSITE-SCHEMA-312.PR ?X_O (KA ((ADV-A (WITH.P ?X_R)) PLAY.V))
	               (K (PLUR COCOANUT.N)) ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_O DESTINATION.N))
			(!R2 (?X_O TREE.N))
			(!R3 (?X_O (VERY.ADV PRETTY.A)))
			(!R4 (?X_R AGENT.N))
			(!R5 (NOT (?X_P AGENT.N)))
			(!R6 (NOT (?X_P ACTION.N)))
			(!R7 (NOT (?X_R = ?X_P)))
			(!R8 (NOT ((K (PLUR COCOANUT.N)) ACTION.N)))
			(!R9 (NOT ((K (PLUR COCOANUT.N)) AGENT.N)))
			(!R10 ((K (PLUR COCOANUT.N)) OBJECT.N))
			(!R11 ((KA ((ADV-A (WITH.P ?X_R)) PLAY.V)) ACTION.N))
			(!R12 (?X_Q MOTHER.N))
			(!R13 (?X_Q (PERTAIN-TO ?X_R)))
		)
		(:STEPS
			(?X_N
	   ((K (L X (AND (X MANY.A) (X (PLUR COCOANUT.N)))))
	    ((ADV-A (ON.P ?X_O)) GROW.V)))
			(?X_L (?X_R ((ADV-A (FROM.P ?L1)) CLIMB.3.V) ?X_O))
			(?X_J (?X_R GET.37.V ?X_P))
			(?X_H (?X_Q LIKE.36.V (K (PLUR COCOANUT.N))))
			(?X_B (?X_Q LIKE.37.V (K (PLUR COCOANUT.N))))
			(?X_F (?X_Q ((ADV-A (FOR.P (KA (CLIMB.V ?X_O)))) CANNOT.V)))
			(?X_D (?X_Q ENJOY_ACTION.19.V (KA ((ADV-A (WITH.P ?X_R)) PLAY.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_N (BEFORE ?X_L)))
			(!W2 (?X_N (BEFORE ?X_J)))
			(!W3 (?X_N (BEFORE ?X_H)))
			(!W4 (?X_N (BEFORE ?X_B)))
			(!W5 (?X_N (BEFORE ?X_F)))
			(!W6 (?X_N (BEFORE ?X_D)))
			(!W7 (?X_L (BEFORE ?X_J)))
			(!W8 (?X_L (BEFORE ?X_H)))
			(!W9 (?X_L (BEFORE ?X_B)))
			(!W10 (?X_L (BEFORE ?X_F)))
			(!W11 (?X_L (BEFORE ?X_D)))
			(!W12 (?X_J (BEFORE ?X_H)))
			(!W13 (?X_J (BEFORE ?X_B)))
			(!W14 (?X_J (BEFORE ?X_F)))
			(!W15 (?X_J (BEFORE ?X_D)))
			(!W16 (?X_H (BEFORE ?X_F)))
			(!W17 (?X_H (BEFORE ?X_D)))
			(!W18 (?X_B (BEFORE ?X_F)))
			(!W19 (?X_B (BEFORE ?X_D)))
			(!W20 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"Many cocoanut grows on a destination tree very pretty."
			"A agent climb.250s a destination tree very pretty from L1."
			"A agent get.247s X_P."
			"A mother of a agent like.242s cocoanuts."
			"A mother of a agent like.243s cocoanuts."
			"A mother of a agent cannots for climbing a destination tree very pretty."
			"A mother of a agent enjoy action.245s with a agent playing."
	)
)



(
	(EPI-SCHEMA (((K SUSIE.N)
	              (COMPOSITE-SCHEMA-313.PR (KE ((K OIL.N) GREAT.A)) (KA (BUY.V MORE.A))
	               (K OIL.N)))
	             ** ?E)
		(:STEPS
			(?X_B ((K SUSIE.N) (THINK.V (KE ((K OIL.N) GREAT.A)))))
			(?X_D ((K SUSIE.N) (WANT.V (KA (BUY.V MORE.A)))))
			(?X_F ((K SUSIE.N) (LOVE.V (K OIL.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
			(!W2 (?X_B (BEFORE ?X_F)))
			(!W3 (?X_D (BEFORE ?X_F)))
		)
	)
	(
			"Susie thinks oil great."
			"Susie wants buying more."
			"Susie loves oil."
		adding constraint (I$42$410.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C (CAN.AUX PLAY.18.V)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C BOY.N))
			(!R2 (?X_B TOY.N))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_C PLAY.N))
			(!R7 (?X_B BALL.N))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
			(!R9 (?X_A AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (WITH.P ?X_B)) PLAY.18.V)))
			(?X_D (?X_C PLAY.18.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (CAN.AUX PLAY.19.V)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?X_A TOY.N))
			(!R3 (NOT (?X_A AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_B PLAY.N))
			(!R7 (?X_A BALL.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?X_A))
		)
		(:POSTCONDS
			(?P1 (?X_B EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (WITH.P ?X_A)) PLAY.19.V)))
			(?X_C (?X_B PLAY.19.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((MAY.AUX TAKE.23.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A BOY.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_A PLAY.N))
			(!R7 (?X_B BALL.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P (COMPOSITE-SCHEMA-314.PR ?X_P ?X_E ?X_G ?X_Q)) ** ?E)
		(:ROLES
			(!R1 (?X_G BALL.N))
			(!R2 (?X_E BABY.N))
			(!R3 (?X_E (HAS.V ?X_F)))
			(!R4 (?X_H AGENT.N))
			(!R5 (?X_G (PERTAIN-TO ?X_H)))
			(!R6 (?X_M MAN.N))
			(!R7 (?X_P BOY.N))
			(!R8 (?X_P PLAY.N))
			(!R9 (?X_Q BALL.N))
			(!R10 (NOT (?X_Q AGENT.N)))
			(!R11 (NOT (?X_Q ACTION.N)))
			(!R12 (NOT (?X_P = ?X_Q)))
		)
		(:STEPS
			(?X_O (?X_P (CAN.AUX PLAY.18.V)))
			(?X_O (?X_P (CAN.AUX PLAY.19.V)))
			(?X_L (?X_M ((MAY.AUX SEE.V) ?X_P)))
			(?X_J (?X_P ((MAY.AUX TAKE.23.V) ?X_Q)))
			(?X_D (?X_H ((CAN.AUX SEE.V) ?X_E)))
			(?X_B (?X_E ((MAY.AUX HAVE.V) ?X_G)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_O (BEFORE ?X_J)))
			(!W2 (?X_L (BEFORE ?X_D)))
			(!W3 (?X_L (BEFORE ?X_B)))
			(!W4 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A boy play play.266s can."
			"A boy play play.267s can."
			"A man sees a boy play may."
			"A boy play take.270s a ball may."
			"A agent sees a baby has X_F can."
			"A baby has X_F has a ball of a agent may."
		adding constraint (I$0$426.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RUN.30.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D BOY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C MAN.N))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_A MOM.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
			(!R9 (?X_B MALE.A))
			(!R10 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.30.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.30.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.30.V) ?L2))
			(?X_E (?X_D ((ADV-A (INTO.P ?X_C)) RUN.30.V)))
			(?X_E (?X_D RUN.30.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RUN.30.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.21.V ?X_C ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?X_C BOY.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_D DESTINATION.N))
			(!R6 (?X_D MOM.N))
			(!R7 (?X_D (PERTAIN-TO ?X_C)))
			(!R8 (?X_D (PERTAIN-TO ?X_A)))
			(!R9 (?X_A MALE.A))
			(!R10 (?X_A AGENT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?X_D)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?X_D)) BE.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) TAKE.V) ?X_C))
			(?X_E (?X_B ((ADV-A (TO.P ?X_D)) CARRY.V) ?X_C))
			(?X_E (?X_B (((ADV-A (TO.P ?X_D)) BRING.V) ?X_C)))
			(?X_E (?X_B (LOCATION_ADV.? TAKE.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? CARRY.V) ?X_C))
			(?X_E (?X_B (LOCATION_ADV.? BRING.V) ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?P1 POSTCOND-OF ?X_E))
			(!W3 (?X_E (SAME-TIME ?X_H)))
			(!W4 (?X_E (RIGHT-AFTER ?X_F)))
			(!W5 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C GET.38.V (K LOST.A)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C BOY.N))
			(!R2 (NOT ((K LOST.A) AGENT.N)))
			(!R3 (NOT ((K LOST.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = (K LOST.A))))
			(!R6 (?X_A (PERTAIN-TO ?X_C)))
			(!R7 (?X_A MOM.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
			(!R9 (?X_B MALE.A))
			(!R10 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V (K LOST.A)))))))
			(?G2 (?X_C (NEED.V (K LOST.A))))
			(?G3 (?X_C (WANT.V (K LOST.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V (K LOST.A))))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 ((K LOST.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V (K LOST.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-315.PR ?L2 ?X_N ?X_M (K LOST.A))) ** ?E)
		(:ROLES
			(!R1 (?X_K MALE.A))
			(!R2 (?X_K AGENT.N))
			(!R3 (?X_M (PERTAIN-TO ?X_K)))
			(!R4 (NOT ((K LOST.A) AGENT.N)))
			(!R5 (NOT ((K LOST.A) ACTION.N)))
			(!R6 (NOT (?X_N = (K LOST.A))))
			(!R7 (?L2 DESTINATION.N))
			(!R8 (?X_L MAN.N))
			(!R9 (?X_N SMALLER-THAN.N ?X_L))
			(!R10 (?X_N BOY.N))
			(!R11 (?X_M DESTINATION.N))
			(!R12 (?X_M MOM.N))
			(!R13 (?X_M (PERTAIN-TO ?X_N)))
		)
		(:STEPS
			(?X_H (?X_N (TO.P ?X_M)))
			(?X_D (?X_L ?X_N (TO.P ?X_M)))
			(?X_J (?X_N GET.38.V (K LOST.A)))
			(?X_A (?X_N ((ADV-A (TO.P ?X_M)) CALL.V)))
			(?X_F (?X_N ((ADV-A (FROM.P ?L1)) RUN.30.V) ?L2))
			(?X_B (?X_L TRANSPORT_OBJECT.21.V ?X_N ?X_M))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_A)))
			(!W2 (?X_H (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_D (BEFORE ?X_B)))
			(!W5 (?X_J (BEFORE ?X_A)))
			(!W6 (?X_J (BEFORE ?X_F)))
			(!W7 (?X_J (BEFORE ?X_B)))
			(!W8 (?X_A (BEFORE ?X_F)))
			(!W9 (?X_A (BEFORE ?X_B)))
			(!W10 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A boy is to."
			"A man is to."
			"A boy get.291s lost."
			"A boy calls to a destination mom of a male agent of a boy."
			"A boy run.292s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_C ENJOY_ACTION.20.V (KA (FEED.V ?X_D))) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 ((KA (FEED.V ?X_D)) ACTION.N))
			(!R3 (?X_D CAT.N))
			(!R4 (?X_D (PERTAIN-TO ?X_C)))
			(!R5 (?X_A (FOR.P ?X_D)))
			(!R6 (?X_B BEST.A))
			(!R7 (?X_A ?X_B OUT.N))
			(!R8 (?X_B FOOD.N))
		)
		(:PRECONDS
			(?I1 (?X_C (THINK.V (THAT ((KA (FEED.V ?X_D)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C (WANT.V (KA (FEED.V ?X_D)))))
			(?X_E (?X_C (LIKE.V (KA (FEED.V ?X_D)))))
			(?X_E (?X_C (LOVE.V (KA (FEED.V ?X_D)))))
			(?X_E (?X_C (ENJOY.V (KA (FEED.V ?X_D)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_G)))
			(!W2 (?X_F (SAME-TIME ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ENJOY_ACTION.21.V (KA (FEED.V ?X_D))) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 ((KA (FEED.V ?X_D)) ACTION.N))
			(!R3 (?X_D CAT.N))
			(!R4 (?X_D (PERTAIN-TO ?X_C)))
			(!R5 (?X_A (FOR.P ?X_D)))
			(!R6 (?X_B BEST.A))
			(!R7 (?X_B FOOD.N))
			(!R8 (?X_A ?X_B OUT.N))
		)
		(:PRECONDS
			(?I1 (?X_C (THINK.V (THAT ((KA (FEED.V ?X_D)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_E (?X_C (WANT.V (KA (FEED.V ?X_D)))))
			(?X_E (?X_C (LIKE.V (KA (FEED.V ?X_D)))))
			(?X_E (?X_C (LOVE.V (KA (FEED.V ?X_D)))))
			(?X_E (?X_C (ENJOY.V (KA (FEED.V ?X_D)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (SAME-TIME ?X_G)))
			(!W2 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_E)) PUT.8.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (?X_E BOWL.N))
			(!R4 (NOT (?X_E AGENT.N)))
			(!R5 (?X_D SMALLER-THAN ?X_E))
			(!R6 (?X_D FOOD.N))
			(!R7 (?X_D BEST.A))
			(!R8 (?X_A (PERTAIN-TO ?X_C)))
			(!R9 (?X_A CAT.N))
			(!R10 (?X_B (FOR.P ?X_A)))
			(!R11 (?X_B ?X_D OUT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (IN.P ?X_E))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D (IN.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (?X_D (IN.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_F (?X_C ((ADV-A (INTO.P ?X_E)) PUT.8.V) ?X_D))
			(?X_F (?X_C ((ADV-A (INSIDE.P ?X_E)) PUT.8.V) ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_E)) PUT.9.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (?X_E BOWL.N))
			(!R4 (NOT (?X_E AGENT.N)))
			(!R5 (?X_D SMALLER-THAN ?X_E))
			(!R6 (?X_D BEST.A))
			(!R7 (?X_D FOOD.N))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
			(!R9 (?X_B CAT.N))
			(!R10 (?X_A ?X_D OUT.N))
			(!R11 (?X_A (FOR.P ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (IN.P ?X_E))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D (IN.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (?X_D (IN.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_F (?X_C ((ADV-A (INTO.P ?X_E)) PUT.9.V) ?X_D))
			(?X_F (?X_C ((ADV-A (INSIDE.P ?X_E)) PUT.9.V) ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X FEED.12.V ?X_D ?X_C) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_D CAT.N))
			(!R3 (?X_C FOOD.N))
			(!R4 (NOT (?X = ?X_D)))
			(!R5 (NOT (?X_D = ?X_C)))
			(!R6 (NOT (?X = ?X_C)))
			(!R7 (?X_C BEST.A))
			(!R8 (?X_A ?X_C OUT.N))
			(!R9 (?X_A (FOR.P ?X_D)))
			(!R10 (?X_D (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_D HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_D EAT.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_C))
			(?I2 (?X_D HUNGRY.A))
		)
		(:STEPS
			(?X_E (?X_D EAT.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_C))))
			(?P2 (NOT (?X_D HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E AFTER ?E))
			(!W2 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D EAT.9.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_D CAT.N))
			(!R2 (?X_C FOOD.N))
			(!R3 (?X_C BEST.A))
			(!R4 (?X_A (FOR.P ?X_D)))
			(!R5 (?X_A ?X_C OUT.N))
			(!R6 (?X_D (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (NOT (?X_D HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?X_C))
			(?I2 (?X_D HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (HAVE.V ?X_C))))
			(?P2 (NOT (?X_D HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_E))
			(!W2 (?I1 BEFORE ?X_E))
			(!W3 (?X_E CAUSE-OF ?P1))
			(!W4 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-316.PR ?X_K (KA (FEED.V ?X_O)) ?X_O ?X_N)) **
	             ?E)
		(:ROLES
			(!R1 (?X_K ?X_N OUT.N))
			(!R2 (?X_K (FOR.P ?X_O)))
			(!R3 (?X_O (PERTAIN-TO ?X_L)))
			(!R4 ((KA (FEED.V ?X_O)) ACTION.N))
			(!R5 (?X_N SMALLER-THAN ?X_M))
			(!R6 (?X_L AGENT.N))
			(!R7 (NOT (?X_N AGENT.N)))
			(!R8 (NOT (?X_M AGENT.N)))
			(!R9 (?X_M BOWL.N))
			(!R10 (NOT (?X = ?X_O)))
			(!R11 (NOT (?X_O = ?X_N)))
			(!R12 (NOT (?X = ?X_N)))
			(!R13 (?X AGENT.N))
			(!R14 (?X_N FOOD.N))
			(!R15 (?X_N BEST.A))
			(!R16 (?X_O CAT.N))
		)
		(:STEPS
			(?X_A (?X_L ENJOY_ACTION.20.V (KA (FEED.V ?X_O))))
			(?X_B (?X_L ENJOY_ACTION.21.V (KA (FEED.V ?X_O))))
			(?X_J (?X_L (((ADV-A (FOR.P ?X_O)) BUY.V) ?X_N)))
			(?X_H (?X_L (GET.V ?X_K)))
			(?X_F (?X_L (((ADV-A (IN.P ?X_M)) PUT.8.V) ?X_N)))
			(?X_F (?X_L (((ADV-A (IN.P ?X_M)) PUT.9.V) ?X_N)))
			(?E_1 (?X FEED.12.V ?X_O ?X_N))
			(?X_D (?X_O EAT.9.V ?X_N))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_B)))
			(!W2 (?X_A (BEFORE ?X_F)))
			(!W3 (?X_A (BEFORE ?X_D)))
			(!W4 (?X_B (BEFORE ?X_F)))
			(!W5 (?X_B (BEFORE ?X_D)))
			(!W6 (?X_J (BEFORE ?X_H)))
			(!W7 (?X_F (BEFORE ?X_D)))
			(!W8 (?E_1 (BEFORE ?X_D)))
		)
	)
	(
			"A agent enjoy action.19s feeing a cat of a agent."
			"A agent enjoy action.22s feeing a cat of a agent."
			"A agent buys a food best for a cat of a agent."
			"A agent gets a for a cat of a agent."
			"A agent put.9s a food best in a bowl."
			"A agent put.11s a food best in a bowl."
			"A agent feed.3s a cat of a agent a food best."
			"A cat of a agent eat.6s a food best."
	)
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-317.PR
	               (KE
	                ((K
	                  (L X
	                   (AND (X MANY.A)
	                        ((X (PLUR BOY.N)) AND (X AND) (X (PLUR GIRL.N))))))
	                 (ON.P ?X_G)))
	               ?X_B (K (L X (AND (X FINE.A) (X SPORT.N))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G HILL.N))
			(!R2 (?X_J (PLUR SLED.N)))
			(!R3 (?X_J (PERTAIN-TO ?X_L)))
			(!R4 (?X_K (PERTAIN-TO ?X_L)))
		)
		(:STEPS
			(?X_F
	   (?X_A
	    (BE.V
	     (KE
	      ((K
	        (L X
	         (AND (X MANY.A) ((X (PLUR BOY.N)) AND (X AND) (X (PLUR GIRL.N))))))
	       (ON.P ?X_G))))))
			(?X_D (?X_G ?X_J (HAVE.V ?X_B)))
			(?X_I (?X_G ?X_J (HAVE.V ?X_B)))
			(?X_N (?X_L (HAVE.V (K (L X (AND (X FINE.A) (X SPORT.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_I)))
			(!W3 (?X_F (BEFORE ?X_N)))
			(!W4 (?X_D (BEFORE ?X_I)))
			(!W5 (?X_D (BEFORE ?X_N)))
			(!W6 (?X_I (BEFORE ?X_N)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_B GET.39.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (NOT (?X_C ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = ?X_C)))
			(!R6 (?X_A HOUSE.N))
			(!R7 (?X_A PLACE.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
			(?G2 (?X_B (NEED.V ?X_C)))
			(?G3 (?X_B (WANT.V ?X_C)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?X_C)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_C (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_S
	              (COMPOSITE-SCHEMA-318.PR
	               (KA (OVER.PRT ((ADV-A (IN.P (THREE.D (PLUR HOUR.N)))) COME.V)))
	               ?X_L ?X_R ?X_T))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G GOOD.A))
			(!R2 (?X_G TIME.N))
			(!R3 (?X_L MESS.N))
			(!R4 (?X_R PLACE.N))
			(!R5 (?X_R HOUSE.N))
			(!R6 (?X_O AGENT.N))
			(!R7 (?X_R (PERTAIN-TO ?X_S)))
			(!R8 (?X_S AGENT.N))
			(!R9 (NOT (?X_T AGENT.N)))
			(!R10 (NOT (?X_T ACTION.N)))
			(!R11 (NOT (?X_S = ?X_T)))
		)
		(:STEPS
			(?X_K (?X_R (BE.V ?X_L)))
			(?X_I (?X_S (CLEAN.V ?X_R)))
			(?X_F (?X_A ?X_G (HAVE.V ?X_R)))
			(?X_Q (?X_S GET.39.V ?X_T))
			(?X_N
	   (?X_O
	    (WANT.V (KA (OVER.PRT ((ADV-A (IN.P (THREE.D (PLUR HOUR.N)))) COME.V))))))
			(?X_B (?X_R (BE.V ?X_L)))
			(?X_C (?X_S (CLEAN.V ?X_R)))
			(?X_D (?X_A ?X_G (HAVE.V ?X_R)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_B)))
			(!W2 (?X_K (BEFORE ?X_C)))
			(!W3 (?X_K (BEFORE ?X_D)))
			(!W4 (?X_I (BEFORE ?X_C)))
			(!W5 (?X_I (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
			(!W7 (?X_Q (BEFORE ?X_N)))
			(!W8 (?X_Q (BEFORE ?X_B)))
			(!W9 (?X_Q (BEFORE ?X_C)))
			(!W10 (?X_Q (BEFORE ?X_D)))
			(!W11 (?X_N (BEFORE ?X_B)))
			(!W12 (?X_N (BEFORE ?X_C)))
			(!W13 (?X_N (BEFORE ?X_D)))
			(!W14 (?X_B (BEFORE ?X_C)))
			(!W15 (?X_B (BEFORE ?X_D)))
			(!W16 (?X_C (BEFORE ?X_D)))
		)
	)
	(
			"A place house of a agent is a mess."
			"A agent cleans a place house of a agent."
			"X_A has a place house of a agent."
			"A agent get.49s X_T."
			"A agent wants over in three hours coming."
			"A place house of a agent is a mess."
			"A agent cleans a place house of a agent."
			"X_A has a place house of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.16.V ?Y ?A) ** ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?Y AGENT.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?Y)))
			(!R5 (?X_A (SO.ADV THANKFUL.A)))
			(!R6 (?X_A HOMELESS.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?Y ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?E1 (?X_A (((ADV-A (FOR.P (K HELP.N))) ASK.V) ?Y ?A)))
			(?E2 (?Y (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_B (?X_A (((ADV-A (FOR.P (K HELP.N))) ASK.V) ?Y ?A)))
			(?X_B (?X_A (TELL.V ?Y ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (GIVE.11.V ?X_B ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_B MAN.N))
			(!R4 (?X_B (SO.ADV THANKFUL.A)))
			(!R5 (?X_B HOMELESS.A))
			(!R6 (?X_C HELP.V))
			(!R7 (?X_C HAND.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (HAVE.V ?X_C))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?X_C))
			(?I2 (NOT (?X_B HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A HAVE.V ?X_C)))
			(?P2 (?X_B HAVE.V ?X_C))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (TO.P ?X_B)) (GIVE.11.V ?X_C))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-319.PR ?Y ?A ?X_H ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_G STREET.N))
			(!R2 (NOT (?X_H = ?Y)))
			(!R3 (?A ACTION.N))
			(!R4 (?Y AGENT.N))
			(!R5 (?X_I HELP.V))
			(!R6 (?X_I HAND.N))
			(!R7 (?X_H MAN.N))
			(!R8 (?X_H (SO.ADV THANKFUL.A)))
			(!R9 (?X_H HOMELESS.A))
			(!R10 (NOT (?X_I AGENT.N)))
			(!R11 (?X_J AGENT.N))
		)
		(:STEPS
			(?X_F (?X_H ((ADV-A (ON.P ?X_G)) BE.V)))
			(?X_D (?X_H REQUEST_ACTION.16.V ?Y ?A))
			(?X_B (?X_J (GIVE.11.V ?X_H ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man so thankful homeless is on a street."
			"A man so thankful homeless request action.74s a agent a action."
			"A agent give.65s a man so thankful homeless a help hand."
	)
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.22.V ?X_C ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C PUPPY.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_C SAD.A))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_A (K NEW.A) PET.N))
			(!R9 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_E (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_E (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_E (?X_B (((ADV-A (AS.P ?X_A)) TAKE.V) ?X_C)))
			(?X_E (?X_B CARRY.V ?X_C))
			(?X_E (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?P1 POSTCOND-OF ?X_E))
			(!W3 (?X_E (RIGHT-AFTER ?X_D)))
			(!W4 (?X_E (SAME-TIME ?X_G)))
			(!W5 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.23.V ?X_C ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_C PUPPY.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_C SAD.A))
			(!R7 (?X_A (K NEW.A) PET.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
			(!R9 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_D (?X_B (((ADV-A (AS.P ?X_A)) TAKE.V) ?X_C)))
			(?X_D (?X_B CARRY.V ?X_C))
			(?X_D (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (BEFORE ?X_E)))
			(!W4 (?X_F (SAME-TIME ?X_E)))
			(!W5 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.32.V) ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_D DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_D)))
			(!R5 (?X_D POUND.N))
			(!R6 (?X_A (K NEW.A) PET.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?X_D)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?X_D))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?X_D)))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? ?X_D))
	     ((ADV-A (TO.P ?X_D))
	      ((ADV-A (FOR.P (KA ((ADV-A (FOR.P ?X_B)) LOOK.V)))) GO.32.V)))))
			(?X_E
	   (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.32.V))))
			(?X_E (?X_C ((ADV-A (DESTINATION_PREP.? ?X_D)) GO.32.V) ?X_D))
			(?X_E (?X_C GO.32.V))
			(?X_E (?X_C GO.32.V ?X_D))
			(?X_E (?X_C (LOCATION_ADV.? GO.32.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-320.PR (KA (GET.V ?X_L)) ?X_P ?L2 ?X_N)) ** ?E)
		(:ROLES
			(!R1 (?X_M (K NEW.A) PET.N))
			(!R2 (?X_L NEW.A))
			(!R3 (?X_L PET.N))
			(!R4 (?X_M (PERTAIN-TO ?X_O)))
			(!R5 (?X_N DESTINATION.N))
			(!R6 (?X_N POUND.N))
			(!R7 (?X_O AGENT.N))
			(!R8 (?X_P PUPPY.N))
			(!R9 (?X_P SMALLER-THAN.N ?X_O))
			(!R10 (?X_P SAD.A))
			(!R11 (?L2 DESTINATION.N))
			(!R12 (?L2 HOME.N))
		)
		(:STEPS
			(?X_K (?X_O (WANT.V (KA (GET.V ?X_L)))))
			(?X_C (?X_O TRANSPORT_OBJECT.23.V ?X_P ?L2))
			(?X_I (?X_O ((ADV-A (FROM.P ?L1)) GO.32.V) ?X_N))
			(?X_G (?X_O (SEE.V ?X_P)))
			(?X_E (?X_O (DEEPLY.ADV ((ADV-A (FOR.P ?X_P)) FEEL.V))))
			(?X_A (?X_O TRANSPORT_OBJECT.22.V ?X_P ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_G)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_A)))
			(!W5 (?X_C (BEFORE ?X_A)))
			(!W6 (?X_I (BEFORE ?X_G)))
			(!W7 (?X_I (BEFORE ?X_E)))
			(!W8 (?X_I (BEFORE ?X_A)))
			(!W9 (?X_G (BEFORE ?X_E)))
			(!W10 (?X_G (BEFORE ?X_A)))
			(!W11 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A agent wants getting a new pet."
			"A agent transport object.77s a puppy sad a destination home."
			"A agent go.93s a destination pound from L1."
			"A agent sees a puppy sad."
			"A agent feels deeply for a puppy sad."
			"A agent transport object.76s a puppy sad a destination home."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) FLY.4.V)
	              (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B BUTTERFLY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V))))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V))))))))
			(!R5 (?X_C ((ADV-A (AFTER.P ?X_B)) RUN.V)))
			(!R6 (?X_A GARDEN.N))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V
	     (KA
	      ((ADV-A (AT.P (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V))))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V)))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V))))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.? (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V)))))))
	     FLY.4.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A
	       (DESTINATION_PREP.? (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V)))))))
	      FLY.4.V))))
			(?X_D
	   (?X_B
	    ((ADV-A
	      (DESTINATION_PREP.? (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V)))))))
	     FLY.4.V)
	    (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V)))))))
			(?X_D (?X_B FLY.4.V))
			(?X_D
	   (?X_B ((CAN.AUX FLY.4.V) (K (FASTER.ADV (THAN.P (?X_C (CAN.AUX RUN.V))))))))
			(?X_D (?X_B (LOCATION_ADV.? FLY.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_F)))
			(!W7 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) COME.7.V) (KE (?X_D (LIKE.V ?X_E))))
	             ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KE (?X_D (LIKE.V ?X_E))) DESTINATION.N))
			(!R4 (NOT (?L1 = (KE (?X_D (LIKE.V ?X_E))))))
			(!R5 (?X_C (PLUR BUTTERFLY.N)))
			(!R6 (?X_D ((ADV-A (AFTER.P ?X_B)) RUN.V)))
			(!R7 (?X_E (PLUR FLOWER.N)))
			(!R8 (?X_A (PERTAIN-TO ?X_D)))
			(!R9 (?X_A GARDEN.N))
			(!R10 (?X_B BUTTERFLY.N))
			(!R11 ((KE (?X_D (LIKE.V ?X_E))) THERE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P (KE (?X_D (LIKE.V ?X_E))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KE (?X_D (LIKE.V ?X_E)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KE (?X_D (LIKE.V ?X_E))))))
		)
		(:PARAPHRASES
			(?X_F
	   (?X_C ((ADV-A (DESTINATION_PREP.? (KE (?X_D (LIKE.V ?X_E))))) COME.7.V)))
			(?X_F
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KE (?X_D (LIKE.V ?X_E))))) COME.7.V))))
			(?X_F
	   (?X_C ((ADV-A (DESTINATION_PREP.? (KE (?X_D (LIKE.V ?X_E))))) COME.7.V)
	    (KE (?X_D (LIKE.V ?X_E)))))
			(?X_F (?X_C COME.7.V))
			(?X_F (?X_C (COME.7.V (KE (?X_D (LIKE.V ?X_E))))))
			(?X_F (?X_C (LOCATION_ADV.? COME.7.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_H)))
			(!W7 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-321.PR (KE (?X_Q (CAN.AUX RUN.V)))
	               (KE
	                ((K (L X (AND (X MANY.A) (X (PLUR FLOWER.N))))) (IN.P ?X_K)))
	               (K (FASTER.ADV (THAN.P (?X_Q (CAN.AUX RUN.V)))))
	               (KE (?X_Q (LIKE.V ?X_R)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K GARDEN.N))
			(!R2 (?X_K (PERTAIN-TO ?X_Q)))
			(!R3 (?X_N AGENT.N))
			(!R4 (?X_O BUTTERFLY.N))
			(!R5 (?X_Q ((ADV-A (AFTER.P ?X_O)) RUN.V)))
			(!R6 ((K (FASTER.ADV (THAN.P (?X_Q (CAN.AUX RUN.V))))) DESTINATION.N))
			(!R7 (?X_P (PLUR BUTTERFLY.N)))
			(!R8 ((KE (?X_Q (LIKE.V ?X_R))) DESTINATION.N))
			(!R9 ((KE (?X_Q (LIKE.V ?X_R))) THERE.N))
			(!R10 (?X_R (PLUR FLOWER.N)))
		)
		(:STEPS
			(?X_M (NOT (?X_N THINK.V)))
			(?X_J (?X_O ((FASTER.ADV THAN.P) (KE (?X_Q (CAN.AUX RUN.V))))))
			(?X_H
	   (?X_O ((ADV-A (FROM.P ?L1)) FLY.4.V)
	    (K (FASTER.ADV (THAN.P (?X_Q (CAN.AUX RUN.V)))))))
			(?X_B
	   (?X_Q
	    (HAS.V (KE ((K (L X (AND (X MANY.A) (X (PLUR FLOWER.N))))) (IN.P ?X_K))))))
			(?X_D (?X_P (KA (THERE.ADV COME.V)) (BECAUSE.P (KE (?X_Q (LIKE.V ?X_R))))))
			(?X_F (?X_P ((ADV-A (FROM.P ?L1)) COME.7.V) (KE (?X_Q (LIKE.V ?X_R)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_J)))
			(!W2 (?X_M (BEFORE ?X_H)))
			(!W3 (?X_M (BEFORE ?X_B)))
			(!W4 (?X_M (BEFORE ?X_D)))
			(!W5 (?X_M (BEFORE ?X_F)))
			(!W6 (?X_J (BEFORE ?X_B)))
			(!W7 (?X_J (BEFORE ?X_D)))
			(!W8 (?X_J (BEFORE ?X_F)))
			(!W9 (?X_H (BEFORE ?X_B)))
			(!W10 (?X_H (BEFORE ?X_D)))
			(!W11 (?X_H (BEFORE ?X_F)))
			(!W12 (?X_B (BEFORE ?X_D)))
			(!W13 (?X_B (BEFORE ?X_F)))
		)
	)
	(
			"A agent thinks not."
			"A butterfly is faster than."
			"A butterfly fly.95s faster than a after a butterfly run can run from L1."
			"A after a butterfly run has many flower in a garden of a after a butterfly run."
			"A butterflys are because."
			"A butterflys come.97 a after a butterfly run likes a flowers from L1."
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_B)) FIND.64.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D SHOW.N))
			(!R4 (?X_B BAND.N))
			(!R5 (?X_B (PERTAIN-TO ?X_C)))
			(!R6 (?X_A HEART.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-322.PR
	               (K (L X (AND (X (VERY.ADV FEW.A)) (X (PLUR FAN.N)))))
	               (KA (HOLD.V ?X_L)) ?X_K ?X_L))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K HEART.N))
			(!R2 (?X_K (PERTAIN-TO ?X_M)))
			(!R3 (?X_L SHOW.N))
			(!R4 (?X_N AGENT.N))
			(!R5 (?X_M BAND.N))
			(!R6 (?X_M (PERTAIN-TO ?X_N)))
		)
		(:STEPS
			(?X_H (?X_M (HAVE.V (K (L X (AND (X (VERY.ADV FEW.A)) (X (PLUR FAN.N))))))))
			(?X_F (?X_M (TRY.V (KA (HOLD.V ?X_L)))))
			(?X_D (?X_M ((STILL.ADV (OUT.PRT PLAY.V)) ?X_K)))
			(?X_B (?X_M ((STILL.ADV (OUT.PRT PLAY.V)) ?X_K)))
			(?X_J (?X_N (((ADV-A (IN.P ?X_M)) FIND.64.V) ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_D)))
			(!W3 (?X_H (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A band of a agent has few fan."
			"A band of a agent tries holding a show."
			"A band of a agent plays a heart of a band of a agent still out."
			"A band of a agent plays a heart of a band of a agent still out."
			"A agent find.129s a show in a band of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) STROLL.1.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) STROLL.1.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) STROLL.1.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) STROLL.1.V) ?L2))
			(?X_C (?X_B ((ADV-A (THROUGH.P ?X_A)) STROLL.1.V)))
			(?X_C (?X_B STROLL.1.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? STROLL.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.65.V (KE (?X_B FUNNY.A))) ** ?X_D)
		(:ROLES
			(!R1 (?X_A CAT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((KE (?X_B FUNNY.A)) ENTITY.N))
			(!R4 (?X_B THING.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((KE (?X_B FUNNY.A)) (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P (KE (?X_B FUNNY.A)))) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT ((KE (?X_B FUNNY.A)) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (KE (?X_B FUNNY.A))))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT ((KE (?X_B FUNNY.A)) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (KE (?X_B FUNNY.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-323.PR ?X_H (K PINK.A)
	               (KA ((ADV-A (WITH.P (K PINK.A))) PLAY.V)) ?L2
	               (KE (?X_O FUNNY.A))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H (K PINK.A) BALL.N))
			(!R2 (?X_H (ON.P ?X_I)))
			(!R3 (?X_N HOUSE.N))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_O THING.N))
			(!R6 ((KE (?X_O FUNNY.A)) ENTITY.N))
			(!R7 (?X_P CAT.N))
		)
		(:STEPS
			(?X_M (?X_P ((ADV-A (FROM.P ?L1)) STROLL.1.V) ?L2))
			(?X_K (?X_P FIND.65.V (KE (?X_O FUNNY.A))))
			(?X_G (?X_A (BE.V ?X_H)))
			(?X_E (?X_P (SWAT.V (K PINK.A))))
			(?X_C (?X_P (LIKE.V (KA ((ADV-A (WITH.P (K PINK.A))) PLAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_K)))
			(!W2 (?X_M (BEFORE ?X_G)))
			(!W3 (?X_M (BEFORE ?X_E)))
			(!W4 (?X_M (BEFORE ?X_C)))
			(!W5 (?X_K (BEFORE ?X_G)))
			(!W6 (?X_K (BEFORE ?X_E)))
			(!W7 (?X_K (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A cat stroll.137s a destination from L1."
			"A cat find.142s a thing funny."
			"X_A is a on X_I."
			"A cat swats pink."
			"A cat likes with pink playing."
	)
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-324.PR ?X_F ?X_L ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_A TOP.N))
			(!R2 (?X_F SPIN.V))
			(!R3 (?X_F (PLUR TOP.N)))
			(!R4 (?X_F (ON.P ?X_G)))
			(!R5 (?X_L (K LARGE.A) TOP.N))
			(!R6 (?X_L (PERTAIN-TO ?X_N)))
			(!R7 (?X_M (K SMALL.A) TOP.N))
			(!R8 (?X_M (PERTAIN-TO ?X_N)))
		)
		(:STEPS
			(?X_C (?X_A SPIN.V))
			(?X_E (?X_N (SPIN.V ?X_F)))
			(?X_I (?X_N (SPIN.V ?X_F)))
			(?X_K (?X_N (SPIN.V ?X_L)))
			(?X_P (?X_N (SPIN.V ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_I)))
			(!W3 (?X_C (BEFORE ?X_K)))
			(!W4 (?X_C (BEFORE ?X_P)))
			(!W5 (?X_E (BEFORE ?X_I)))
			(!W6 (?X_E (BEFORE ?X_K)))
			(!W7 (?X_E (BEFORE ?X_P)))
			(!W8 (?X_I (BEFORE ?X_K)))
			(!W9 (?X_I (BEFORE ?X_P)))
			(!W10 (?X_K (BEFORE ?X_P)))
		)
	)
	(
			"A top spins."
			"X_N spins a spin tops on X_G."
			"X_N spins a spin tops on X_G."
			"X_N spins a of X_N."
			"X_N spins a of X_N."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.31.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B OLD.A))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.31.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.31.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.31.V) ?L2))
			(?X_C (?X_B (AWAY.PRT RUN.31.V)))
			(?X_C (?X_B RUN.31.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RUN.31.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.62.V) (K BLIND.A)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K BLIND.A) DESTINATION.N))
			(!R4 (NOT (?L1 = (K BLIND.A))))
			(!R5 (?X_B OLD.A))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K BLIND.A))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K BLIND.A)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K BLIND.A))))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (K BLIND.A))) GO.62.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (K BLIND.A))) GO.62.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (K BLIND.A))) GO.62.V) (K BLIND.A)))
			(?X_C (?X_B GO.62.V))
			(?X_C (?X_B GO.62.V (K BLIND.A)))
			(?X_C (?X_B (LOCATION_ADV.? GO.62.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (DURING ?X_E)))
			(!W7 (?X_D (CONSEC ?X_C)))
			(!W8 (?X_D (DURING ?X_E)))
			(!W9 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.66.V
	              (K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B))) ENTITY.N))
			(!R4 (?X_B DOG.N))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
			(!R6 (?X_B OLD.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B))) (AT.P ?L)))
			(?I3
	   (?X_A
	    ((ADV-A (FOR.P (K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B)))))
	     SEARCH.V)))
			(?I4
	   (NOT
	    (?X_A
	     (KNOW.V
	      (THAT
	       ((K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B))) (AT.P ?L)))))))
			(?I5
	   (NOT (?X_A (HAVE.V (K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B)))))))
		)
		(:POSTCONDS
			(?P1
	   (?X_A
	    (KNOW.V
	     (THAT ((K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B))) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_B))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-325.PR ?X_I ?X_N ?L2 (K BLIND.A)
	               (K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_O)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I TIME.N))
			(!R2 (?X_I LONG.A))
			(!R3 (?L2 DESTINATION.N))
			(!R4 ((K BLIND.A) DESTINATION.N))
			(!R5 (?X_O DOG.N))
			(!R6 (?X_O (PERTAIN-TO ?X_N)))
			(!R7 (?X_O OLD.A))
			(!R8 (?X_N AGENT.N))
			(!R9 ((K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_O))) ENTITY.N))
		)
		(:STEPS
			(?X_K (?X_O ((ADV-A (FROM.P ?L1)) RUN.31.V) ?L2))
			(?X_B (?X_O ((ADV-A (FROM.P ?L1)) GO.62.V) (K BLIND.A)))
			(?X_H (?X_N ?X_O (HAVE.V ?X_I)))
			(?X_F (?X_N FIND.66.V (K ((ADV-A (FOR.P (K (PLUR YEAR.N)))) (FOR.P ?X_O)))))
			(?X_D
	   (?X_A
	    ((LONGER.ADV
	      (MUCH.ADV ((ADV-A (FOR.P (KA ((ADV-A (OVER.P ?X_A)) GET.V)))) TAKE.V)))
	     ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_B)))
			(!W2 (?X_K (BEFORE ?X_H)))
			(!W3 (?X_K (BEFORE ?X_F)))
			(!W4 (?X_K (BEFORE ?X_D)))
			(!W5 (?X_B (BEFORE ?X_H)))
			(!W6 (?X_B (BEFORE ?X_F)))
			(!W7 (?X_B (BEFORE ?X_D)))
			(!W8 (?X_H (BEFORE ?X_F)))
			(!W9 (?X_H (BEFORE ?X_D)))
			(!W10 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A dog old of a agent run.170s a destination from L1."
			"A dog old of a agent go.172s blind from L1."
			"A agent has a time long."
			"A agent find.173s for years for a dog old of a agent."
			"X_A takes a agent longer much for over X_A getting."
		adding constraint (WE$0$198.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.24.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B PARK.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_B WATER.N))
			(!R7 (?L2 THERE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A (TAKE.V ?X_B)))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A BRING.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_D (AFTER ?X_C)))
			(!W4 (?X_D (AT-ABOUT ?X_E)))
			(!W5 (?X_F (AT-ABOUT ?X_E)))
			(!W6 (?X_F (AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.24.V ?X_B ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B PARK.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_B WATER.N))
			(!R7 (?L2 THERE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) TAKE.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) CARRY.V) ?X_B))
			(?X_C (?X_A ((ADV-A (TO.P ?L2)) BRING.V) ?X_B))
			(?X_C (?X_A (TAKE.V ?X_B)))
			(?X_C (?X_A CARRY.V ?X_B))
			(?X_C (?X_A BRING.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?P1 POSTCOND-OF ?X_C))
			(!W3 (?X_D (AFTER ?X_C)))
			(!W4 (?X_D (AT-ABOUT ?X_E)))
			(!W5 (?X_F (AT-ABOUT ?X_E)))
			(!W6 (?X_F (AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.63.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B PARK.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B DESTINATION.N))
			(!R6 (?X_B WATER.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.63.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.63.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.63.V) ?X_B))
			(?X_C (?X_A GO.63.V))
			(?X_C (?X_A GO.63.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.63.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_H)) GET.40.V) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?X_A PARK.N))
			(!R5 (NOT (?X_B = ?O)))
			(!R6 (?X_A WATER.N))
			(!R7 (?X_H THERE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?O))))))
			(?G2 (?X_B (NEED.V ?O)))
			(?G3 (?X_B (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?O)))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 (?O (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
			(!W7 (?X_F (AT-ABOUT ?X_E)))
			(!W8 (?X_F (AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (AT.P ?X_H)) GET.40.V) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?X_A PARK.N))
			(!R5 (NOT (?X_B = ?O)))
			(!R6 (?X_A WATER.N))
			(!R7 (?X_H THERE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V ?O))))))
			(?G2 (?X_B (NEED.V ?O)))
			(?G3 (?X_B (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V ?O)))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 (?O (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
			(!W7 (?X_F (AT-ABOUT ?X_E)))
			(!W8 (?X_F (AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-326.PR ?L2 ?X_L ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_D WILD.A))
			(!R2 (?X_D DAY.N))
			(!R3 (?X_L SMALLER-THAN.N ?X_M))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?L2 THERE.N))
			(!R6 (NOT (?O AGENT.N)))
			(!R7 (NOT (?O ACTION.N)))
			(!R8 (NOT (?X_M = ?O)))
			(!R9 (?X_L DESTINATION.N))
			(!R10 (?X_L PARK.N))
			(!R11 (?X_L WATER.N))
			(!R12 (?X_M AGENT.N))
		)
		(:STEPS
			(E192.SK (?X_M TRANSPORT_OBJECT.24.V ?X_L ?L2))
			(E192.SK (?X_M (((ADV-A (AT.P ?X_H)) GET.40.V) ?O)))
			(E191.SK (?X_M TRANSPORT_OBJECT.24.V ?X_L ?L2))
			(E191.SK (?X_M (((ADV-A (AT.P ?X_H)) GET.40.V) ?O)))
			(?X_F (?X_M ((ADV-A (FROM.P ?L1)) GO.63.V) ?X_L))
			(?X_C ((ADV-E (DURING ?X_D)) (?X_A BE.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_C)))
			(!W2 (E192.SK BEFORE E191.SK))
		)
	)
	(
			"A agent transport object.177s a destination park water a destination there."
			"A agent get.190s O at X_H."
			"A agent transport object.177s a destination park water a destination there."
			"A agent get.190s O at X_H."
			"A agent go.179s a destination park water from L1."
			"X_A is DURING a wild day."
		adding constraint (THEY$12$213.SK AGENT.N)
		adding constraint (SHE$38$214.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C TRANSPORT_OBJECT.25.V ?X_D ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_D FAMILY.N))
			(!R3 (?X_D SMALLER-THAN.N ?X_C))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_E FARM.N))
			(!R6 (?X_E DESTINATION.N))
			(!R7 (?X_D (PERTAIN-TO ?X_C)))
			(!R8 (?X_A (PLUR KID.N)))
			(!R9 (?X_A (PERTAIN-TO ?X_C)))
			(!R10 (?X_B (PERTAIN-TO ?X_C)))
			(!R11 (?X_B DAUGHTER.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D ((ADV-A (AT.P ?X_E)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_D ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_C (HAVE.V ?X_D)))
		)
		(:POSTCONDS
			(?P1 (?X_D ((ADV-A (AT.P ?X_E)) BE.V)))
		)
		(:PARAPHRASES
			(?X_F (?X_C (((ADV-A (TO.P ?X_E)) TAKE.V) ?X_D)))
			(?X_F (?X_C ((ADV-A (TO.P ?X_E)) CARRY.V) ?X_D))
			(?X_F (?X_C ((ADV-A (TO.P ?X_E)) BRING.V) ?X_D))
			(?X_F (?X_C (LOCATION_ADV.? TAKE.V) ?X_D))
			(?X_F (?X_C (LOCATION_ADV.? CARRY.V) ?X_D))
			(?X_F (?X_C (LOCATION_ADV.? BRING.V) ?X_D))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?P1 POSTCOND-OF ?X_F))
			(!W3 (?X_F (SAME-TIME ?X_I)))
			(!W4 (?X_F (RIGHT-AFTER ?X_G)))
			(!W5 (?X_H (BEFORE ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D TAKE.24.V ?X_E) ** ?X_H)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (NOT (?X_E ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_D = ?X_E)))
			(!R6 (?X_E FAMILY.N))
			(!R7 (?X_E (PERTAIN-TO ?X_D)))
			(!R8 (?X_C FARM.N))
			(!R9 (?X_A DAUGHTER.N))
			(!R10 (?X_A (PERTAIN-TO ?X_D)))
			(!R11 (?X_B (PERTAIN-TO ?X_D)))
			(!R12 (?X_B (PLUR KID.N)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
			(?X_F (?X_D (((ADV-A (TO.P ?X_C)) NEED.V) ?X_E)))
			(?G3 (?X_D (WANT.V ?X_E)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D HAVE.V ?X_E)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_E (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_D HAVE.V ?X_E))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_H))
			(!W2 (?I2 PRECOND-OF ?X_H))
			(!W3 (?I3 PRECOND-OF ?X_H))
			(!W4 (?P1 POSTCOND-OF ?X_H))
			(!W5 (?X_H (BEFORE ?X_I)))
			(!W6 (?X_F (SAME-TIME ?X_I)))
			(!W7 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_R (COMPOSITE-SCHEMA-327.PR ?X_N ?X_K ?X_F ?X_S ?X_T)) ** ?E)
		(:ROLES
			(!R1 (?X_F FUN.N))
			(!R2 (?X_F TIME.N))
			(!R3 (?X_K PIG.N))
			(!R4 (?X_R DAUGHTER.N))
			(!R5 (?X_N GREAT.A))
			(!R6 (?X_N TIME.N))
			(!R7 (?X_Q (PLUR KID.N)))
			(!R8 (?X_Q (PERTAIN-TO ?X_U)))
			(!R9 (?X_R (PERTAIN-TO ?X_U)))
			(!R10 (NOT (?X_T AGENT.N)))
			(!R11 (NOT (?X_T ACTION.N)))
			(!R12 (NOT (?X_U = ?X_T)))
			(!R13 (?X_S DESTINATION.N))
			(!R14 (?X_S FARM.N))
			(!R15 (?X_T SMALLER-THAN.N ?X_U))
			(!R16 (?X_T (PERTAIN-TO ?X_U)))
			(!R17 (?X_T FAMILY.N))
			(!R18 (?X_U AGENT.N))
		)
		(:STEPS
			(?X_M (?X_Q (HAVE.V ?X_N)))
			(?X_J (?X_R ((THEN.ADV TOUCH.V) ?X_K)))
			(?X_P (?X_U TAKE.24.V ?X_T))
			(?X_A (?X_U TRANSPORT_OBJECT.25.V ?X_T ?X_S))
			(?X_B (?X_Q (HAVE.V ?X_N)))
			(?X_C (?X_R ((THEN.ADV TOUCH.V) ?X_K)))
			(?X_H (?X_R LAUGH.V))
			(?X_E (?X_R (HAVE.V ?X_F)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_B)))
			(!W2 (?X_M (BEFORE ?X_C)))
			(!W3 (?X_M (BEFORE ?X_H)))
			(!W4 (?X_M (BEFORE ?X_E)))
			(!W5 (?X_J (BEFORE ?X_C)))
			(!W6 (?X_J (BEFORE ?X_H)))
			(!W7 (?X_J (BEFORE ?X_E)))
			(!W8 (?X_P (BEFORE ?X_A)))
			(!W9 (?X_P (BEFORE ?X_B)))
			(!W10 (?X_P (BEFORE ?X_C)))
			(!W11 (?X_P (BEFORE ?X_H)))
			(!W12 (?X_P (BEFORE ?X_E)))
			(!W13 (?X_A (BEFORE ?X_B)))
			(!W14 (?X_A (BEFORE ?X_C)))
			(!W15 (?X_A (BEFORE ?X_H)))
			(!W16 (?X_A (BEFORE ?X_E)))
			(!W17 (?X_B (BEFORE ?X_C)))
			(!W18 (?X_B (BEFORE ?X_H)))
			(!W19 (?X_B (BEFORE ?X_E)))
			(!W20 (?X_C (BEFORE ?X_H)))
			(!W21 (?X_C (BEFORE ?X_E)))
			(!W22 (?X_H (BEFORE ?X_E)))
		)
	)
	(
			"A kids of a agent have a great time."
			"A daughter of a agent touches a pig then."
			"A agent take.201s a family of a agent."
			"A agent transport object.196s a family of a agent a destination farm."
			"A kids of a agent have a great time."
			"A daughter of a agent touches a pig then."
			"A daughter of a agent laughs."
			"A daughter of a agent has a fun time."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) ROW.3.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.3.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.3.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) ROW.3.V) ?L2))
			(?X_B (?X_A (CAN.AUX ((ADV-A (WITH.P (TWO.D (PLUR OAR.N)))) ROW.3.V))))
			(?X_B (?X_A ROW.3.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? ROW.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) ROW.4.V) (K NICE.A)) ** ?X_F)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K NICE.A) DESTINATION.N))
			(!R4 (NOT (?L1 = (K NICE.A))))
			(!R5 ((K NICE.A) (WITH.P ?X_E)))
			(!R6 (?X_E (HAS.V (SET-OF ?X_A ?X_B))))
			(!R7 (?X_C (K NICE.A) BOAT.N))
			(!R8 (?X_E (HAS.V ?X_C)))
			(!R9 (?X_D POND.N))
			(!R10 (?X_C (ON.P ?X_D)))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P (K NICE.A))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P (K NICE.A)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P (K NICE.A))))
		)
		(:PARAPHRASES
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? (K NICE.A))) ROW.4.V)))
			(?X_F
	   (?X_E
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (K NICE.A))) ROW.4.V))))
			(?X_F (?X_E ((ADV-A (DESTINATION_PREP.? (K NICE.A))) ROW.4.V) (K NICE.A)))
			(?X_F (?X_E ROW.4.V))
			(?X_F (?X_E ((CAN.AUX ROW.4.V) (K NICE.A))))
			(?X_F (?X_E (LOCATION_ADV.? ROW.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-328.PR ?X_E ?L2 (K NICE.A))) ** ?E)
		(:ROLES
			(!R1 (?X_E BOAT.N))
			(!R2 (?X_N (HAS.V (SET-OF ?X_J ?X_K))))
			(!R3 (?X_L (K NICE.A) BOAT.N))
			(!R4 (?X_N (HAS.V ?X_L)))
			(!R5 (?X_M POND.N))
			(!R6 (?X_L (ON.P ?X_M)))
			(!R7 (?X_N AGENT.N))
			(!R8 ((K NICE.A) DESTINATION.N))
			(!R9 ((K NICE.A) (WITH.P ?X_N)))
			(!R10 (?X_O AGENT.N))
			(!R11 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_N ((ADV-A (FROM.P ?L1)) ROW.4.V) (K NICE.A)))
			(?X_G (?X_N (CAN.AUX ((ADV-A (WITH.P (TWO.D (PLUR OAR.N)))) ROW.V))))
			(?X_D (?X_O ((CAN.AUX ROW.V) ?X_E)))
			(?X_B (?X_O ((ADV-A (FROM.P ?L1)) ROW.3.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_D)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_D)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A has X_J and X_K agent has a on a pond row.222s nice from L1."
			"A has X_J and X_K agent has a on a pond rows can with two oars."
			"A agent rows a boat can."
			"A agent row.223s a destination from L1."
	)
)



(
	(EPI-SCHEMA (((K SUSIE.N)
	              (COMPOSITE-SCHEMA-329.PR (KE (?X_F HOUSE.N))
	               (K (TO.P (?X_F HOUSE.N))) (K SUSIE.N)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F SISTER.N))
			(!R2 (?X_F (PERTAIN-TO (K SUSIE.N))))
			(!R3 (?X_G YELL.V))
		)
		(:STEPS
			(?X_E ((K SUSIE.N) (TO.P (KE (?X_F HOUSE.N)))))
			(?X_A ((K SUSIE.N) (GO.V (K (TO.P (?X_F HOUSE.N))))))
			(?X_B (?X_G ((MUCH.ADV FOR.P) (K SUSIE.N))))
			(?X_C (?X_G TO.P))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
			(!W2 (?X_E (BEFORE ?X_B)))
			(!W3 (?X_E (BEFORE ?X_C)))
			(!W4 (?X_A (BEFORE ?X_B)))
			(!W5 (?X_A (BEFORE ?X_C)))
			(!W6 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"Susie is to."
			"Susie goes to a sister of susie house."
			"A yell is much for."
			"A yell is to."
		adding constraint (SHE$4$285.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (TO.P ?X_A)) GIVE.12.V) ?X_D ?O)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MOTHER.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (?X_D KITTEN.N))
			(!R4 (?X_C (IS.V (KE ((K KIND.N) (TO.P ?X_D))))))
			(!R5 (?X_D PRETTY.A))
			(!R6 (?X_D (PLUR KITTEN.N)))
			(!R7 (?X_A AGENT.N))
			(!R8 (?X_D (PERTAIN-TO ?X_A)))
			(!R9 (?X_C (PERTAIN-TO ?X_B)))
			(!R10 (?X_B FEMALE.A))
			(!R11 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?O))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?O))
			(?I2 (NOT (?X_D HAVE.V ?O)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?O)))
			(?P2 (?X_D HAVE.V ?O))
		)
		(:PARAPHRASES
			(?X_F (?X_C ((ADV-A (TO.P ?X_D)) (GIVE.12.V ?O))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (RIGHT-AFTER ?X_E)))
			(!W2 (?X_F (SAME-TIME ?X_H)))
			(!W3 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (TO.P ?X_A)) GIVE.13.V) ?X_D ?O)) ** ?X_E)
		(:ROLES
			(!R1 (?X_C MOTHER.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (?X_D KITTEN.N))
			(!R4 (?X_C (IS.V (KE ((K KIND.N) (TO.P ?X_D))))))
			(!R5 (?X_A AGENT.N))
			(!R6 (?X_D (PERTAIN-TO ?X_A)))
			(!R7 (?X_D PRETTY.A))
			(!R8 (?X_D (PLUR KITTEN.N)))
			(!R9 (?X_C (PERTAIN-TO ?X_B)))
			(!R10 (?X_B FEMALE.A))
			(!R11 (?X_B AGENT.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D (HAVE.V ?O))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?O))
			(?I2 (NOT (?X_D HAVE.V ?O)))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C HAVE.V ?O)))
			(?P2 (?X_D HAVE.V ?O))
		)
		(:PARAPHRASES
			(?X_E (?X_C ((ADV-A (TO.P ?X_D)) (GIVE.13.V ?O))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (SAME-TIME ?X_H)))
			(!W2 (?X_E (RIGHT-AFTER ?X_F)))
			(!W3 (?X_G (BEFORE ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E (COMPOSITE-SCHEMA-330.PR ?X_F ?X_G ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_D FEMALE.A))
			(!R2 (?X_D AGENT.N))
			(!R3 (?X_E (PERTAIN-TO ?X_D)))
			(!R4 (?X_F AGENT.N))
			(!R5 (?X_E (IS.V (KE ((K KIND.N) (TO.P ?X_G))))))
			(!R6 (?X_E MOTHER.N))
			(!R7 (?X_G (PERTAIN-TO ?X_F)))
			(!R8 (?X_G PRETTY.A))
			(!R9 (NOT (?O AGENT.N)))
		)
		(:STEPS
			(?X_C (?X_E ?X_G (TO.P ?X_F)))
			(?X_A (?X_E (((ADV-A (TO.P ?X_F)) GIVE.12.V) ?X_G ?O)))
			(?X_A (?X_E (((ADV-A (TO.P ?X_F)) GIVE.13.V) ?X_G ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_A)))
		)
	)
	(
			"A is kind to a pretty of a agent mother of a female agent is to."
			"A is kind to a pretty of a agent mother of a female agent give.245s a pretty of a agent O to a agent."
			"A is kind to a pretty of a agent mother of a female agent give.246s a pretty of a agent O to a agent."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RUN.32.V) (K (OVER.PRT (TO.P ?X_C))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (OVER.PRT (TO.P ?X_C))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (OVER.PRT (TO.P ?X_C))))))
			(!R5 (?X_B BIG.A))
			(!R6 (?X_C (PLUR KID.N)))
			(!R7 (?X_A (PERTAIN-TO ?X_A)))
			(!R8 (?X_A FRIEND.N))
			(!R9 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K (OVER.PRT (TO.P ?X_C))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K (OVER.PRT (TO.P ?X_C)))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K (OVER.PRT (TO.P ?X_C))))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K (OVER.PRT (TO.P ?X_C))))) RUN.32.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (OVER.PRT (TO.P ?X_C))))) RUN.32.V))))
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K (OVER.PRT (TO.P ?X_C))))) RUN.32.V)
	    (K (OVER.PRT (TO.P ?X_C)))))
			(?X_D (?X_B RUN.32.V))
			(?X_D (?X_B RUN.32.V (K (OVER.PRT (TO.P ?X_C)))))
			(?X_D (?X_B (LOCATION_ADV.? RUN.32.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_A)) FIND.67.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D FRIEND.N))
			(!R4 (?X_C BIG.A))
			(!R5 (?X_A YARD.N))
			(!R6 (?X_D (PERTAIN-TO ?X_D)))
			(!R7 (?X_D (PERTAIN-TO ?X_B)))
			(!R8 (?X_B (PLUR KID.N)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (IN.P ?X_A)) FIND.19.V) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B DOG.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C ENTITY.N))
			(!R4 (?X_B BIG.A))
			(!R5 (?X_A YARD.N))
			(!R6 (?X_C (PLUR HAND.N)))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-331.PR (KE (?X_K HOUSE.N)) (K HOME.N)
	               (K (OVER.PRT (TO.P ?X_O))) ?X_K ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_K (PERTAIN-TO ?X_O)))
			(!R2 (?X_K (PERTAIN-TO ?X_K)))
			(!R3 (?X_K FRIEND.N))
			(!R4 (?X_L YARD.N))
			(!R5 (?X_M (PLUR HAND.N)))
			(!R6 (?X_N DOG.N))
			(!R7 (?X_N BIG.A))
			(!R8 (?X_O (PLUR KID.N)))
			(!R9 ((K (OVER.PRT (TO.P ?X_O))) DESTINATION.N))
		)
		(:STEPS
			(?X_J (?X_K HOUSE.N))
			(?X_A ((TWO.D (PLUR KID.N)) (VISIT.V (KE (?X_K HOUSE.N)))))
			(?X_H (NOT (?X_K (BE.V (K HOME.N)))))
			(?X_B (NOT (?X_K (BE.V (K HOME.N)))))
			(?X_F (?X_N (((ADV-A (IN.P ?X_L)) FIND.67.V) ?X_K)))
			(?X_F (?X_N (((ADV-A (IN.P ?X_L)) FIND.19.V) ?X_M)))
			(?X_D (?X_N ((ADV-A (FROM.P ?L1)) RUN.32.V) (K (OVER.PRT (TO.P ?X_O)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_B)))
			(!W3 (?X_J (BEFORE ?X_F)))
			(!W4 (?X_J (BEFORE ?X_D)))
			(!W5 (?X_A (BEFORE ?X_B)))
			(!W6 (?X_A (BEFORE ?X_F)))
			(!W7 (?X_A (BEFORE ?X_D)))
			(!W8 (?X_H (BEFORE ?X_B)))
			(!W9 (?X_H (BEFORE ?X_F)))
			(!W10 (?X_H (BEFORE ?X_D)))
			(!W11 (?X_B (BEFORE ?X_F)))
			(!W12 (?X_B (BEFORE ?X_D)))
			(!W13 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A of a of X_K friend of a kids friend of a kids is house."
			"Two kids visit a of a of X_K friend of a kids friend of a kids house."
			"A of a of X_K friend of a kids friend of a kids is home not."
			"A of a of X_K friend of a kids friend of a kids is home not."
			"A dog big find.288s a of a of X_K friend of a kids friend of a kids in a yard."
			"A dog big find.289s a hands in a yard."
			"A dog big run.275s over to a kids from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) RETURN.1.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A CITY.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?X_A = ?L2)))
			(!R5 (?X_A NEW.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RETURN.1.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?L2)) RETURN.1.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RETURN.1.V) ?L2))
			(?X_C (?X_B (OFTEN.ADV RETURN.1.V)))
			(?X_C (?X_B RETURN.1.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? RETURN.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) MOVE.1.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B CITY.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B DESTINATION.N))
			(!R6 (?X_B NEW.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) MOVE.1.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) MOVE.1.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) MOVE.1.V) ?X_B))
			(?X_C (?X_A MOVE.1.V))
			(?X_C (?X_A MOVE.1.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? MOVE.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.26.V ?X_B ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B CHURCH.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_C CITY.N))
			(!R6 (?X_C DESTINATION.N))
			(!R7 (?X_C NEW.A))
			(!R8 (?X_B BLACK.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?X_C)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?X_C)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_C)) TAKE.V) ?X_B)))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) CARRY.V) ?X_B))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) BRING.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A TRANSPORT_OBJECT.27.V ?X_B ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B LOT.N))
			(!R3 (?X_B SMALLER-THAN.N ?X_A))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?X_C CITY.N))
			(!R6 (?X_C DESTINATION.N))
			(!R7 (?X_C NEW.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B ((ADV-A (AT.P ?X_C)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_B ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_A (HAVE.V ?X_B)))
		)
		(:POSTCONDS
			(?P1 (?X_B ((ADV-A (AT.P ?X_C)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_A (((ADV-A (TO.P ?X_C)) TAKE.V) ?X_B)))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) CARRY.V) ?X_B))
			(?X_D (?X_A ((ADV-A (TO.P ?X_C)) BRING.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? TAKE.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? CARRY.V) ?X_B))
			(?X_D (?X_A (LOCATION_ADV.? BRING.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (TO.P ?X_A)) INFORM.6.V) ?Y ?I)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?Y AGENT.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_A NEW.A))
			(!R6 (?X_A CITY.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?Y (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?Y (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_C (?X_B TELL.V ?Y ?I))
			(?X_C (?X_B LET.V ?Y (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-332.PR (KA ((ADV-A (TO.P ?X_I)) GO.V)) ?L2 ?X_I
	               ?X_J ?X_L ?Y ?I))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I SMALLER-THAN.N ?X_K))
			(!R2 (?X_I CHURCH.N))
			(!R3 (?X_I BLACK.A))
			(!R4 (?X_L DESTINATION.N))
			(!R5 (?X_J SMALLER-THAN.N ?X_K))
			(!R6 (?X_J LOT.N))
			(!R7 (NOT (?I ACTION.N)))
			(!R8 (?Y AGENT.N))
			(!R9 (?I INFORMATION.N))
			(!R10 (?X_K AGENT.N))
			(!R11 (?X_L CITY.N))
			(!R12 (?X_L NEW.A))
			(!R13 (NOT (?X_L = ?L2)))
			(!R14 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_H (?X_K ((ADV-A (FROM.P ?L1)) MOVE.1.V) ?X_L))
			(?X_H (?X_K TRANSPORT_OBJECT.26.V ?X_I ?X_L))
			(?X_H (?X_K TRANSPORT_OBJECT.27.V ?X_J ?X_L))
			(?X_H (?X_K (((ADV-A (TO.P ?X_L)) INFORM.6.V) ?Y ?I)))
			(?X_B (?X_A CHURCH.N))
			(?X_F (?X_K (TRY.V (KA ((ADV-A (TO.P ?X_I)) GO.V)))))
			(?X_D (?X_K ((ADV-A (FROM.P ?X_L)) RETURN.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_B)))
			(!W2 (?X_H (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_D)))
			(!W4 (?X_B (BEFORE ?X_F)))
			(!W5 (?X_B (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent move.293s a destination city new from L1."
			"A agent transport object.296s a church black a destination city new."
			"A agent transport object.297s a lot a destination city new."
			"A agent inform.306s a agent a information to a destination city new."
			"X_A is church."
			"A agent tries to a church black going."
			"A agent return.295s a destination from a destination city new."
		adding constraint (THEY$6$332.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((CAN.AUX ((ADV-A (IN.P ?X_A)) FIND.68.V)) ?X_C)) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C AGENT.N))
			(!R4 (?X_A HAY.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_G
	              (COMPOSITE-SCHEMA-333.PR
	               (K (L X (AND (X NICE.A) (X WHITE.A) (X (PLUR EGG.N))))) ?X_G))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F AGENT.N))
			(!R2 (?X_G AGENT.N))
			(!R3 (?X_H HAY.N))
		)
		(:STEPS
			(?X_E (?X_G (LAY.V (K (L X (AND (X NICE.A) (X WHITE.A) (X (PLUR EGG.N))))))))
			(?X_C (?X_F ((CAN.AUX ((ADV-A (IN.P ?X_H)) FIND.68.V)) ?X_G)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E BEFORE ?X_C))
		)
	)
	(
			"A agent lays nice white egg."
			"A agent find.309s a agent can in a hay."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) LEAVE.3.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C WINDOW.N))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
			(!R7 (?X_A CAT.N))
			(!R8 (?X_A (PERTAIN-TO ?X_B)))
			(!R9 (?X_C OPEN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.3.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.3.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.3.V) ?X_C))
			(?X_D (?X_B LEAVE.3.V))
			(?X_D (?X_B (LEAVE.3.V ?X_C)))
			(?X_D (?X_B (LOCATION_ADV.? LEAVE.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (BEFORE ?X_E)))
			(!W7 (?X_F (SAME-TIME ?X_E)))
			(!W8 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) LEAVE.4.V) ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C WINDOW.N))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_A CAT.N))
			(!R9 (?X_C OPEN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_E (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.4.V)))
			(?X_E
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.4.V))))
			(?X_E (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.4.V) ?X_C))
			(?X_E (?X_B LEAVE.4.V))
			(?X_E (?X_B (LEAVE.4.V ?X_C)))
			(?X_E (?X_B (LOCATION_ADV.? LEAVE.4.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (RIGHT-AFTER ?X_D)))
			(!W7 (?X_E (SAME-TIME ?X_G)))
			(!W8 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.7.V)) ** ?X_G)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 (?X_C CAT.N))
			(!R5 (?X_C (PERTAIN-TO ?X_B)))
			(!R6 (?X_A WINDOW.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA (FIND.V ?X_C)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?LX)))
			(?I2 (?X_C (AT.P ?LO)))
			(?I3 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (FIND.V ?X_C)))
		)
		(:PARAPHRASES
			(?X_G (?X_B ((ADV-A (FOR.P ?X_C)) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_G (?X_B ((ADV-A (FOR.P ?X_C)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_G))
			(!W2 (?X_G (RIGHT-AFTER ?X_D)))
			(!W3 (?X_G (SAME-TIME ?X_F)))
			(!W4 (?X_E (BEFORE ?X_F)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_G))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (FOR.P ?X_A)) FIND.69.V) ?X_D)) ** ?X_H)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D HOUSE.N))
			(!R4 (?X_A CAT.N))
			(!R5 (?X_A (PERTAIN-TO ?X_C)))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_B WINDOW.N))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (RIGHT-AFTER ?X_E)))
			(!W3 (?X_H (SAME-TIME ?X_G)))
			(!W4 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (FOR.P ?X_A)) FIND.70.V) ?X_D)) ** ?X_H)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D PERSON.N))
			(!R4 (?X_A CAT.N))
			(!R5 (?X_A (PERTAIN-TO ?X_C)))
			(!R6 (?X_B WINDOW.N))
			(!R7 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_H))
			(!W2 (?X_H (RIGHT-AFTER ?X_E)))
			(!W3 (?X_H (SAME-TIME ?X_G)))
			(!W4 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_H))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_U
	              (COMPOSITE-SCHEMA-334.PR
	               (K (L X (AND (X OUT.P) (X (OF.P (THE.D HOUSE.N))))))
	               (K (PLUR POSTER.N)) ?X_T ?X_U ?X_Q ?X_R ?X_S))
	             ** ?E)
		(:ROLES
			(!R1 (?X_Q DESTINATION.N))
			(!R2 (?X_Q WINDOW.N))
			(!R3 (?X_Q (PERTAIN-TO ?X_U)))
			(!R4 (?X_Q OPEN.N))
			(!R5 (?X_R HOUSE.N))
			(!R6 (?X_S PERSON.N))
			(!R7 (?X_T CAT.N))
			(!R8 (?X_T (PERTAIN-TO ?X_U)))
			(!R9 (?X_U AGENT.N))
		)
		(:STEPS
			(?X_B (?X_T OUT.P))
			(?X_C (?X_T (OF.P ?X_R)))
			(?X_N (?X_U (FOR.P ?X_T)))
			(?X_L
	   (?X_U
	    ((UP.PRT ((ADV-A (FOR.P (KA (FIND.V ?X_T)))) PUT.V)) (K (PLUR POSTER.N)))))
			(?X_J (?X_S ?X_U (WITH.P ?X_T)))
			(?X_P (?X_U ((ADV-A (FROM.P ?L1)) LEAVE.3.V) ?X_Q))
			(?X_D (?X_U ((ADV-A (FROM.P ?L1)) LEAVE.4.V) ?X_Q))
			(?X_E (?X_T (GET.V (K (L X (AND (X OUT.P) (X (OF.P (THE.D HOUSE.N)))))))))
			(?X_F (?X_U ((ADV-A (FOR.P ?X_T)) SEARCH.7.V)))
			(?X_F (?X_U (((ADV-A (FOR.P ?X_T)) FIND.69.V) ?X_R)))
			(?X_F (?X_U (((ADV-A (FOR.P ?X_T)) FIND.70.V) ?X_S)))
			(?X_G
	   (?X_U
	    ((UP.PRT ((ADV-A (FOR.P (KA (FIND.V ?X_T)))) PUT.V)) (K (PLUR POSTER.N)))))
			(?X_H (?X_S (((ADV-A (WITH.P ?X_T)) CALL.V) ?X_U)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_C)))
			(!W2 (?X_B (BEFORE ?X_F)))
			(!W3 (?X_B (BEFORE ?X_G)))
			(!W4 (?X_B (BEFORE ?X_H)))
			(!W5 (?X_C (BEFORE ?X_F)))
			(!W6 (?X_C (BEFORE ?X_G)))
			(!W7 (?X_C (BEFORE ?X_H)))
			(!W8 (?X_N (BEFORE ?X_F)))
			(!W9 (?X_N (BEFORE ?X_G)))
			(!W10 (?X_N (BEFORE ?X_H)))
			(!W11 (?X_L (BEFORE ?X_G)))
			(!W12 (?X_L (BEFORE ?X_H)))
			(!W13 (?X_J (BEFORE ?X_H)))
			(!W14 (?X_P (BEFORE ?X_D)))
			(!W15 (?X_P (BEFORE ?X_E)))
			(!W16 (?X_P (BEFORE ?X_F)))
			(!W17 (?X_P (BEFORE ?X_G)))
			(!W18 (?X_P (BEFORE ?X_H)))
			(!W19 (?X_D (BEFORE ?X_E)))
			(!W20 (?X_D (BEFORE ?X_F)))
			(!W21 (?X_D (BEFORE ?X_G)))
			(!W22 (?X_D (BEFORE ?X_H)))
			(!W23 (?X_E (BEFORE ?X_F)))
			(!W24 (?X_E (BEFORE ?X_G)))
			(!W25 (?X_E (BEFORE ?X_H)))
			(!W26 (?X_F (BEFORE ?X_G)))
			(!W27 (?X_F (BEFORE ?X_H)))
			(!W28 (?X_G (BEFORE ?X_H)))
		)
	)
	(
			"A cat of a agent is out."
			"A cat of a agent is of."
			"A agent is for."
			"A agent puts posters up for finding a cat of a agent."
			"A person is with."
			"A agent leave.335s a destination window open of a agent from L1."
			"A agent leave.336s a destination window open of a agent from L1."
			"A cat of a agent gets out of."
			"A agent search.323s for a cat of a agent."
			"A agent find.327s a house for a cat of a agent."
			"A agent find.329s a person for a cat of a agent."
			"A agent puts posters up for finding a cat of a agent."
			"A person calls a agent with a cat of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (IN.P ?X_A)) FIND.71.V) ?O)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_A (OF.P (K WATER.N))))
			(!R5 (?X_A GLASS.N))
			(!R6 (?X_A WATER.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?O (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?O (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?O))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?O (AT.P ?L))))))
			(?P2 (?X_B (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.41.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N))))) **
	             ?X_B)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT ((KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))) AGENT.N)))
			(!R3 (NOT ((KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))))))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT (?X_A (HAVE.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N))))))))))
			(?G2 (?X_A (NEED.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))))))
			(?G3 (?X_A (WANT.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N
	              (COMPOSITE-SCHEMA-335.PR ?X_B ?X_M ?O
	               (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_M (OF.P (K WATER.N))))
			(!R2 (?X_M GLASS.N))
			(!R3 (?X_M WATER.N))
			(!R4 (?O ENTITY.N))
			(!R5 (?X_N MAN.N))
			(!R6 (NOT ((KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))) AGENT.N)))
			(!R7 (NOT ((KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))) ACTION.N)))
			(!R8 (NOT (?X_N = (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N)))))))
		)
		(:STEPS
			(?X_L (?X_N (POUR.V ?X_M)))
			(?X_J (?X_N (((ADV-A (IN.P ?X_M)) FIND.71.V) ?O)))
			(?X_H (?X_A (BE.V ?X_B)))
			(?X_F (?X_N ((OUT.PRT POUR.V) ?X_M)))
			(?X_D (?X_N GET.41.V (KE ((K WATER.N) (IN.P (ANOTHER.D GLASS.N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_J)))
			(!W2 (?X_L (BEFORE ?X_H)))
			(!W3 (?X_L (BEFORE ?X_F)))
			(!W4 (?X_L (BEFORE ?X_D)))
			(!W5 (?X_J (BEFORE ?X_H)))
			(!W6 (?X_J (BEFORE ?X_F)))
			(!W7 (?X_J (BEFORE ?X_D)))
			(!W8 (?X_H (BEFORE ?X_F)))
			(!W9 (?X_H (BEFORE ?X_D)))
			(!W10 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A man pours a of water glass water."
			"A man find.351s a entity in a of water glass water."
			"X_A is X_B."
			"A man pours a of water glass water out."
			"A man get.354s water in another glass."
		adding constraint (ME$0$391.SK AGENT.N)
		adding constraint (WE$22$392.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-336.PR ?X_H ?X_G ?X_I (K YOUNG.A) ?X_L ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F AGENT.N))
			(!R2 (?X_H FRIEND.N))
			(!R3 (?X_H (PERTAIN-TO ?X_F)))
			(!R4 (?X_G (K YOUNG.A) SON.N))
			(!R5 (?X_G (PERTAIN-TO ?X_H)))
			(!R6 (?X_I CUTE.A))
			(!R7 (?X_I LITTLE.A))
			(!R8 (?X_I BOY.N))
			(!R9 (?X_L (PLUR TOY.N)))
			(!R10 (?X_O AGENT.N))
			(!R11 (?X_P GREAT.A))
			(!R12 (?X_P VISIT.N))
		)
		(:STEPS
			(?X_C (?X_H ((ADV-A (FOR.P (KA (VISIT.V ?X_F)))) COME.V)))
			(?X_E (?X_H (BRING.V ?X_G ?X_H)))
			(?X_A (?X_H (((ADV-A (WITH.P ?X_H)) BRING.V) ?X_G)))
			(?X_K ((K YOUNG.A) (BE.V ?X_I)))
			(?X_N (?X_O (((ADV-A (FOR.P (KA (PLAY.V WITH.P)))) GIVE.V) (K YOUNG.A) ?X_L)))
			(?X_R (?X_O (HAVE.V ?X_P)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_A)))
			(!W3 (?X_C (BEFORE ?X_K)))
			(!W4 (?X_C (BEFORE ?X_N)))
			(!W5 (?X_C (BEFORE ?X_R)))
			(!W6 (?X_E (BEFORE ?X_A)))
			(!W7 (?X_E (BEFORE ?X_K)))
			(!W8 (?X_E (BEFORE ?X_N)))
			(!W9 (?X_E (BEFORE ?X_R)))
			(!W10 (?X_A (BEFORE ?X_K)))
			(!W11 (?X_A (BEFORE ?X_N)))
			(!W12 (?X_A (BEFORE ?X_R)))
			(!W13 (?X_K (BEFORE ?X_N)))
			(!W14 (?X_K (BEFORE ?X_R)))
			(!W15 (?X_N (BEFORE ?X_R)))
		)
	)
	(
			"A friend of a agent comes for visiting a agent."
			"A friend of a agent brings a of a friend of X_F a friend of a agent."
			"A friend of a agent brings a of a friend of X_F with a friend of a agent."
			"Young is a cute little boy."
			"A agent gives young a toys for playing with."
			"A agent has a great visit."
		adding constraint (THEY$15$424.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B GET.42.V (K (L X (AND (X OUT.P) (X (OF.P ?X_D)))))) ** ?X_E)
		(:ROLES
			(!R1 (?X_B DAD.N))
			(!R2 (NOT ((K (L X (AND (X OUT.P) (X (OF.P ?X_D))))) AGENT.N)))
			(!R3 (NOT ((K (L X (AND (X OUT.P) (X (OF.P ?X_D))))) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_B = (K (L X (AND (X OUT.P) (X (OF.P ?X_D))))))))
			(!R6 (?X_D CAR.N))
			(!R7 (?X_D (PERTAIN-TO ?X_B)))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1
	   (?X_B
	    (WANT.V (THAT (?X_B (HAVE.V (K (L X (AND (X OUT.P) (X (OF.P ?X_D)))))))))))
			(?G2 (?X_B (NEED.V (K (L X (AND (X OUT.P) (X (OF.P ?X_D))))))))
			(?G3 (?X_B (WANT.V (K (L X (AND (X OUT.P) (X (OF.P ?X_D))))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K (L X (AND (X OUT.P) (X (OF.P ?X_D))))))))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 ((K (L X (AND (X OUT.P) (X (OF.P ?X_D))))) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K (L X (AND (X OUT.P) (X (OF.P ?X_D)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (SAME-TIME ?X_G)))
			(!W6 (?X_E (RIGHT-AFTER ?X_F)))
			(!W7 (?X_H (BEFORE ?X_G)))
			(!W8 (?X_J (DURING ?X_H)))
			(!W9 (?X_I (DURING ?X_H)))
			(!W10 (?X_I (CONSEC ?X_J)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-337.PR (K HOME.N) ?X_L ?X_O
	               (K (L X (AND (X OUT.P) (X (OF.P ?X_L)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G HOUSE.N))
			(!R2 (?X_L CAR.N))
			(!R3 (?X_P DAD.N))
			(!R4 (?X_L (PERTAIN-TO ?X_P)))
			(!R5 (?X_O NEWSPAPER.N))
			(!R6 (?X_P (PERTAIN-TO ?X_Q)))
		)
		(:STEPS
			(?X_N (?X_O (OUTSIDE.ADV BE.V)))
			(?X_K (?X_P (((ADV-A (FROM.P (K WORK.N))) GET.V) (K HOME.N))))
			(?X_B (?X_P OUT.P))
			(?X_C (?X_P (OF.P ?X_L)))
			(?X_D (?X_P GET.42.V (K (L X (AND (X OUT.P) (X (OF.P ?X_L)))))))
			(?X_I (?X_P ((UP.PRT PICK.V) ?X_O)))
			(?X_F (?X_P (((ADV-A (INSIDE.P ?X_G)) TAKE.V) ?X_O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_N (BEFORE ?X_K)))
			(!W2 (?X_N (BEFORE ?X_D)))
			(!W3 (?X_N (BEFORE ?X_I)))
			(!W4 (?X_N (BEFORE ?X_F)))
			(!W5 (?X_K (BEFORE ?X_D)))
			(!W6 (?X_K (BEFORE ?X_I)))
			(!W7 (?X_K (BEFORE ?X_F)))
			(!W8 (?X_B (BEFORE ?X_C)))
			(!W9 (?X_B (BEFORE ?X_I)))
			(!W10 (?X_B (BEFORE ?X_F)))
			(!W11 (?X_C (BEFORE ?X_I)))
			(!W12 (?X_C (BEFORE ?X_F)))
			(!W13 (?X_D (BEFORE ?X_I)))
			(!W14 (?X_D (BEFORE ?X_F)))
			(!W15 (?X_I (BEFORE ?X_F)))
		)
	)
	(
			"A newspaper is outside."
			"A dad of X_Q gets home from work."
			"A dad of X_Q is out."
			"A dad of X_Q is of."
			"A dad of X_Q get.389s out of."
			"A dad of X_Q picks a newspaper up."
			"A dad of X_Q takes a newspaper inside a house."
		adding constraint (I$0$455.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_F ((ADV-A (FROM.P ?L1)) RUN.33.V) ?L2) ** ?X_G)
		(:ROLES
			(!R1 (?X_F AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_F (KA LET.V) ((ADV-A (OF.P ?X_A)) GO.V)))
			(!R6 (?X_E DOG.N))
			(!R7 (?X_E (PERTAIN-TO ?X_F)))
			(!R8 (?X_D (PERTAIN-TO ?X_F)))
			(!R9 (?X_D THIGH.N))
			(!R10 (?X_A LEASH.N))
			(!R11 (?X_B SCAR.N))
			(!R12 (?X_F ((STILL.ADV HAVE.V) ?X_B)))
			(!R13 (?X_C CUT.N))
			(!R14 (?X_C (ON.P ?X_D)))
		)
		(:GOALS
			(?G1 (?X_F (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_F (AT.P ?L1)))
			(?I2 (NOT (?X_F (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_F (AT.P ?L1))))
			(?P2 (?X_F (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_G (?X_F ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.33.V)))
			(?X_G
	   (?X_F ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.33.V))))
			(?X_G (?X_F ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.33.V) ?L2))
			(?X_G (?X_F ((ADV-A (AFTER.P ?X_E)) RUN.33.V)))
			(?X_G (?X_F RUN.33.V ?L2))
			(?X_G (?X_F (LOCATION_ADV.? RUN.33.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_G))
			(!W2 (?I2 BEFORE ?X_G))
			(!W3 (?P1 AFTER ?X_G))
			(!W4 (?P2 AFTER ?X_G))
			(!W5 (?G1 CAUSE-OF ?X_G))
			(!W6 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_E ((ADV-A (FROM.P ?L1)) WALK.10.V) ?X_F) ** ?X_G)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_F DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_F)))
			(!R5 (?X_E (KA LET.V) ((ADV-A (OF.P ?X_B)) GO.V)))
			(!R6 (?X_F (PERTAIN-TO ?X_E)))
			(!R7 (?X_F DOG.N))
			(!R8 (?X_A SCAR.N))
			(!R9 (?X_E ((STILL.ADV HAVE.V) ?X_A)))
			(!R10 (?X_B LEASH.N))
			(!R11 (?X_D (PERTAIN-TO ?X_E)))
			(!R12 (?X_D THIGH.N))
			(!R13 (?X_C CUT.N))
			(!R14 (?X_C (ON.P ?X_D)))
		)
		(:GOALS
			(?G1 (?X_E (WANT.V (KA ((ADV-A (AT.P ?X_F)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_E (AT.P ?L1)))
			(?I2 (NOT (?X_E (AT.P ?X_F))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_E (AT.P ?L1))))
			(?P2 (?X_E (AT.P ?X_F)))
		)
		(:PARAPHRASES
			(?X_G (?X_E ((ADV-A (DESTINATION_PREP.? ?X_F)) WALK.10.V)))
			(?X_G
	   (?X_E ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_F)) WALK.10.V))))
			(?X_G (?X_E ((ADV-A (DESTINATION_PREP.? ?X_F)) WALK.10.V) ?X_F))
			(?X_G (?X_E WALK.10.V))
			(?X_G (?X_E WALK.10.V ?X_F))
			(?X_G (?X_E (LOCATION_ADV.? WALK.10.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_G))
			(!W2 (?I2 BEFORE ?X_G))
			(!W3 (?P1 AFTER ?X_G))
			(!W4 (?P2 AFTER ?X_G))
			(!W5 (?G1 CAUSE-OF ?X_G))
			(!W6 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (((ADV-A (FROM.P ?X_A)) GET.43.V) ?X_G)) ** ?X_H)
		(:ROLES
			(!R1 (?X_F AGENT.N))
			(!R2 (NOT (?X_G AGENT.N)))
			(!R3 (NOT (?X_G ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_F = ?X_G)))
			(!R6 (?X_F (KA LET.V) ((ADV-A (OF.P ?X_D)) GO.V)))
			(!R7 (?X_G CUT.N))
			(!R8 (?X_A BRANCH.N))
			(!R9 (?X_F ((STILL.ADV HAVE.V) ?X_B)))
			(!R10 (?X_B SCAR.N))
			(!R11 (?X_C (PERTAIN-TO ?X_F)))
			(!R12 (?X_C DOG.N))
			(!R13 (?X_D LEASH.N))
			(!R14 (?X_G (ON.P ?X_E)))
			(!R15 (?X_E THIGH.N))
			(!R16 (?X_E (PERTAIN-TO ?X_F)))
		)
		(:GOALS
			(?G1 (?X_F (WANT.V (THAT (?X_F (HAVE.V ?X_G))))))
			(?G2 (?X_F (NEED.V ?X_G)))
			(?G3 (?X_F (WANT.V ?X_G)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_F HAVE.V ?X_G)))
			(?I2 (?X_F (AT.P ?L)))
			(?I3 (?X_G (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_F HAVE.V ?X_G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_H))
			(!W2 (?I2 PRECOND-OF ?X_H))
			(!W3 (?I3 PRECOND-OF ?X_H))
			(!W4 (?P1 POSTCOND-OF ?X_H))
			(!W5 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-338.PR ?L2 ?X_J ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_L (KA LET.V) ((ADV-A (OF.P ?X_H)) GO.V)))
			(!R2 (?X_G SCAR.N))
			(!R3 (?X_L ((STILL.ADV HAVE.V) ?X_G)))
			(!R4 (?X_H LEASH.N))
			(!R5 (?X_I THIGH.N))
			(!R6 (?X_I (PERTAIN-TO ?X_L)))
			(!R7 (?X_M (ON.P ?X_I)))
			(!R8 (?X_J DESTINATION.N))
			(!R9 (?X_J (PERTAIN-TO ?X_L)))
			(!R10 (?X_J DOG.N))
			(!R11 (?L2 DESTINATION.N))
			(!R12 (?X_L AGENT.N))
			(!R13 (?X_M CUT.N))
			(!R14 (?X_K BRANCH.N))
			(!R15 (NOT (?X_M AGENT.N)))
			(!R16 (NOT (?X_M ACTION.N)))
			(!R17 (NOT (?X_L = ?X_M)))
		)
		(:STEPS
			(?X_F (?X_L ((ADV-A (FROM.P ?L1)) WALK.10.V) ?X_J))
			(?X_D (?X_L ((ADV-A (FROM.P ?L1)) RUN.33.V) ?L2))
			(?X_B (?X_L (((ADV-A (FROM.P ?X_K)) GET.43.V) ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent still have a scar walk.403s a destination dog of a agent still have a scar from L1."
			"A agent still have a scar run.402s a destination from L1."
			"A agent still have a scar get.423s a cut on a thigh of a agent still have X_G from a branch."
		adding constraint (THEY$20$468.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FALL.9.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.9.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.9.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) FALL.9.V) ?L2))
			(?X_B (?X_A ((ADV-A (IN.P (K LOVE.N))) FALL.9.V)))
			(?X_B (?X_A FALL.9.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? FALL.9.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.44.V (K (PASV MARRY.V))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K (PASV MARRY.V)) AGENT.N)))
			(!R3 (NOT ((K (PASV MARRY.V)) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K (PASV MARRY.V)))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (K (PASV MARRY.V))))))))
			(?G2 (?X_A (NEED.V (K (PASV MARRY.V)))))
			(?G3 (?X_A (WANT.V (K (PASV MARRY.V)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K (PASV MARRY.V)))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K (PASV MARRY.V)) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K (PASV MARRY.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-339.PR (KA (START.V ?X_K)) ?X_H ?L2
	               (K (PASV MARRY.V))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H GREAT.A))
			(!R2 (?X_H GIRL.N))
			(!R3 (?X_K FAMILY.N))
			(!R4 (?L2 DESTINATION.N))
			(!R5 (?X_L AGENT.N))
			(!R6 (NOT ((K (PASV MARRY.V)) AGENT.N)))
			(!R7 (NOT ((K (PASV MARRY.V)) ACTION.N)))
			(!R8 (NOT (?X_L = (K (PASV MARRY.V)))))
		)
		(:STEPS
			(?X_J (?X_A (WANT.V (KA (START.V ?X_K)))))
			(?X_G (?X_A (MEET.V ?X_H)))
			(?X_E (?X_L ((ADV-A (FROM.P ?L1)) FALL.9.V) ?L2))
			(?X_C (?X_L GET.44.V (K (PASV MARRY.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"X_A wants starting a family."
			"X_A meets a great girl."
			"A agent fall.432s a destination from L1."
			"A agent get.440s PASV marries."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.38.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_B SONG.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.38.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-340.PR ?X_N ?X_O ?X_C ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_C NAME.N))
			(!R2 (?X_C (OF.P ?X_D)))
			(!R3 (?X_J (IMPINGES-ON ?X_K)))
			(!R4 (?X_N RADIO.N))
			(!R5 (?X_P OBJECT.N))
			(!R6 (?X_P SONG.N))
			(!R7 (?X_O MAN.N))
			(!R8 (NOT (?X_P ACTION.N)))
			(!R9 (NOT (?X_P AGENT.N)))
		)
		(:STEPS
			(?X_M (?X_P ((ADV-A (ON.P ?X_N)) PLAY.V)))
			(?X_J (NOT (?X_O ((BEFORE.ADV HAVE.V) ?X_P))))
			(?X_F (?X_O (CALL.V ?X_N)))
			(?X_B (?X_N (TELL.V ?X_O ?X_C)))
			(?X_H (?X_O LIKE.38.V ?X_P))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_J)))
			(!W2 (?X_M (BEFORE ?X_F)))
			(!W3 (?X_M (BEFORE ?X_B)))
			(!W4 (?X_J (BEFORE ?X_F)))
			(!W5 (?X_J (BEFORE ?X_B)))
			(!W6 (?X_F (BEFORE ?X_B)))
		)
	)
	(
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?X_C)) GO.37.V) ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C FARM.N))
			(!R3 (?X_E DESTINATION.N))
			(!R4 (NOT (?X_C = ?X_E)))
			(!R5 (?X_E AUCTION.N))
			(!R6 (?X_A (PERTAIN-TO ?X_D)))
			(!R7 (?X_A ?X_B (PLUR GOAT.N)))
			(!R8 (?X_B (PLUR GOAT.N)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?X_E)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?X_C)))
			(?I2 (NOT (?X_D (AT.P ?X_E))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?X_C))))
			(?P2 (?X_D (AT.P ?X_E)))
		)
		(:PARAPHRASES
			(?X_F (?X_D ((ADV-A (DESTINATION_PREP.? ?X_E)) ((ADV-A (TO.P ?X_E)) GO.37.V))))
			(?X_F
	   (?X_D ((ADV-A (FROM.P ?X_C)) ((ADV-A (DESTINATION_PREP.? ?X_E)) GO.37.V))))
			(?X_F (?X_D ((ADV-A (DESTINATION_PREP.? ?X_E)) GO.37.V) ?X_E))
			(?X_F (?X_D GO.37.V))
			(?X_F (?X_D GO.37.V ?X_E))
			(?X_F (?X_D (LOCATION_ADV.? GO.37.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_F))
			(!W2 (?I2 BEFORE ?X_F))
			(!W3 (?P1 AFTER ?X_F))
			(!W4 (?P2 AFTER ?X_F))
			(!W5 (?G1 CAUSE-OF ?X_F))
			(!W6 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-341.PR (KA (START.V ?X_J)) ?X_G ?X_K ?X_M ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G (PLUR GOAT.N)))
			(!R2 (?X_K ?X_G (PLUR GOAT.N)))
			(!R3 (?X_J FARM.N))
			(!R4 (?X_K (PERTAIN-TO ?X_L)))
			(!R5 (?X_N DESTINATION.N))
			(!R6 (?X_N AUCTION.N))
			(!R7 (?X_M FARM.N))
			(!R8 (?X_L AGENT.N))
			(!R9 (NOT (?X_M = ?X_N)))
		)
		(:STEPS
			(?X_A (?X_L (WANT.V (KA (START.V ?X_J)))))
			(?X_D (?X_L ?X_M (WITH.P ?X_K)))
			(?X_I (?X_L ((ADV-A (FROM.P ?X_M)) GO.37.V) ?X_N))
			(?X_F (?X_L (BUY.V ?X_G)))
			(?X_B (?X_L (((ADV-A (WITH.P ?X_K)) START.V) ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_I)))
			(!W2 (?X_A (BEFORE ?X_F)))
			(!W3 (?X_A (BEFORE ?X_B)))
			(!W4 (?X_D (BEFORE ?X_B)))
			(!W5 (?X_I (BEFORE ?X_F)))
			(!W6 (?X_I (BEFORE ?X_B)))
			(!W7 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A agent wants starting a farm."
			"A agent is with."
			"A agent go.1s a destination auction from a farm."
			"A agent buys a goats."
			"A agent starts a farm with a of a agent."
		adding constraint (WE$4$37.SK AGENT.N)
		adding constraint (WE$35$38.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-342.PR ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_C APPLE.N))
			(!R2 (?X_C TREE.N))
			(!R3 (?X_H INTEREST.N))
			(!R4 (?X_I LITTLE.A))
			(!R5 (?X_I BOY.N))
			(!R6 (?X_H (PERTAIN-TO ?X_I)))
			(!R7 (?X_J APPLE.N))
			(!R8 (?X_J FALL.N))
		)
		(:STEPS
			(?X_A (?X_I ((ADV-A (UNDER.P ?X_C)) SIT.V)))
			(?X_E (?X_I (SEE.V ?X_J)))
			(?X_G (?X_H SOAR.V))
			(?X_B (?X_H SOAR.V))
			(?X_L (?X_I (((ADV-A (FOR.P (K (PLUR YEAR.N)))) STUDY.V) ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_E)))
			(!W2 (?X_A (BEFORE ?X_G)))
			(!W3 (?X_A (BEFORE ?X_B)))
			(!W4 (?X_A (BEFORE ?X_L)))
			(!W5 (?X_E (BEFORE ?X_G)))
			(!W6 (?X_E (BEFORE ?X_B)))
			(!W7 (?X_E (BEFORE ?X_L)))
			(!W8 (?X_G (BEFORE ?X_B)))
			(!W9 (?X_G (BEFORE ?X_L)))
			(!W10 (?X_B (BEFORE ?X_L)))
		)
	)
	(
			"A little boy sits under a apple tree."
			"A little boy sees a apple fall."
			"A interest of a little boy soars."
			"A interest of a little boy soars."
			"A little boy studies a apple fall for years."
	)
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.17.V ?X_B ?A) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B MOTHER.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_B)))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
			(!R6 (?X_A (SO.ADV HAPPY.A)))
			(!R7 (?X_A HAPPY.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_B ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?X_C (?X_A (ASK.V ?X_B ?A)))
			(?E2 (?X_B (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_E (?X_A (ASK.V ?X_B ?A)))
			(?X_E (?X_A (TELL.V ?X_B ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?X_C))
			(!W2 (?X_C CAUSE-OF ?E2))
			(!W3 (?X_E (SAME-TIME ?X_D)))
			(!W4 (?X_E (RIGHT-AFTER ?X_F)))
			(!W5 (?X_C (BEFORE ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A INFORM.7.V ?X_B ?I) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_B MOTHER.N))
			(!R3 (?I INFORMATION.N))
			(!R4 (NOT (?I ACTION.N)))
			(!R5 (?X_A (SO.ADV HAPPY.A)))
			(!R6 (?X_A HAPPY.A))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (KNOW.V ?I))))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V ?I)))
		)
		(:PARAPHRASES
			(?X_C (?X_A TELL.V ?X_B ?I))
			(?X_C (?X_A LET.V ?X_B (KA (KNOW.V ?I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-343.PR ?X_A ?X_L ?A ?X_M ?I)) ** ?E)
		(:ROLES
			(!R1 (?X_L GREAT.A))
			(!R2 (?X_L FAMILY.N))
			(!R3 (?X_L DOG.N))
			(!R4 (NOT (?X_N = ?X_M)))
			(!R5 (?A ACTION.N))
			(!R6 (?X_M MOTHER.N))
			(!R7 (?X_M (PERTAIN-TO ?X_N)))
			(!R8 (?X_N AGENT.N))
			(!R9 (NOT (?I ACTION.N)))
			(!R10 (?I INFORMATION.N))
		)
		(:STEPS
			(?X_K (?X_N (WANT.V ?X_L)))
			(?X_G (?X_M (SAY.V ?X_A)))
			(?X_B (?X_N REQUEST_ACTION.17.V ?X_M ?A))
			(?X_B (?X_N INFORM.7.V ?X_M ?I))
			(?X_C (?X_M (SAY.V ?X_A)))
			(?X_E (?X_N (GET.V ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_B)))
			(!W2 (?X_K (BEFORE ?X_C)))
			(!W3 (?X_K (BEFORE ?X_E)))
			(!W4 (?X_G (BEFORE ?X_C)))
			(!W5 (?X_G (BEFORE ?X_E)))
			(!W6 (?X_B (BEFORE ?X_C)))
			(!W7 (?X_B (BEFORE ?X_E)))
			(!W8 (?X_C (BEFORE ?X_E)))
		)
	)
	(
			"A agent wants a great family dog."
			"A mother of a agent says X_A."
			"A agent request action.21s a mother of a agent a action."
			"A agent inform.29s a mother of a agent a information."
			"A mother of a agent says X_A."
			"A agent gets a great family dog."
		Individual NEW$14$55.SK needs Skolemization
		Individual ONE$32$64.SK needs Skolemization
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.39.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_B IPAD.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.39.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((REALLY.ADV LIKE.40.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B OBJECT.N))
			(!R5 (?X_B IPAD.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.40.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((BACK.ADV GET.30.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B IPAD.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?X_H (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
			(!W7 (?X_F (AT-ABOUT ?X_E)))
			(!W8 (?X_F (AFTER ?X_G)))
			(!W9 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((BACK.ADV GET.45.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B IPAD.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?X_H (?X_A ((REALLY.ADV WANT.V) ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
			(!W7 (?X_F (AT-ABOUT ?X_E)))
			(!W8 (?X_F (AFTER ?X_G)))
			(!W9 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-344.PR
	               (K
	                (L X (AND (X IPAD.N) (X (HAS-DET.PR (IND A.D))) (X NEWER.A))))
	               ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J STORE.N))
			(!R2 (?X_P OBJECT.N))
			(!R3 (?X_P IPAD.N))
			(!R4 (?X_O AGENT.N))
			(!R5 (NOT (?X_P AGENT.N)))
			(!R6 (NOT (?X_P ACTION.N)))
			(!R7 (NOT (?X_O = ?X_P)))
		)
		(:STEPS
			(?X_B (?X_O (BACK.ADV GET.V)))
			(?X_N (?X_O LIKE.39.V ?X_P))
			(?X_L (?X_O ((REALLY.ADV LIKE.40.V) ?X_P)))
			(?X_I (?X_O ((ADV-A (TO.P ?X_J)) GO.V)))
			(?X_E
	   (?X_O
	    (HAVE.V (K (L X (AND (X IPAD.N) (X (HAS-DET.PR (IND A.D))) (X NEWER.A)))))))
			(?X_C (?X_O ((BACK.ADV GET.30.V) ?X_P)))
			(?X_C (?X_O ((BACK.ADV GET.45.V) ?X_P)))
			(?X_G
	   (?X_O
	    (HAVE.V (K (L X (AND (X IPAD.N) (X (HAS-DET.PR (IND A.D))) (X NEWER.A)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_E)))
			(!W2 (?X_N (BEFORE ?X_L)))
			(!W3 (?X_N (BEFORE ?X_I)))
			(!W4 (?X_N (BEFORE ?X_E)))
			(!W5 (?X_N (BEFORE ?X_G)))
			(!W6 (?X_L (BEFORE ?X_I)))
			(!W7 (?X_L (BEFORE ?X_E)))
			(!W8 (?X_L (BEFORE ?X_G)))
			(!W9 (?X_I (BEFORE ?X_E)))
			(!W10 (?X_I (BEFORE ?X_G)))
			(!W11 (?X_C (BEFORE ?X_G)))
		)
	)
	(
			"A agent gets back."
			"A agent like.43s a object ipad."
			"A agent like.44s a object ipad really."
			"A agent goes to a store."
			"A agent has ipad HAS-DET newer."
			"A agent get.45s a object ipad back."
			"A agent get.46s a object ipad back."
			"A agent has ipad HAS-DET newer."
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (IN.P ?X_A)) FIND.72.V) ?X_C)) ** ?X_G)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_C LIFE.N))
			(!R4 (?X_C ROUGH.A))
			(!R5 (NOT (?X_B (LIKE.V (KA ((ADV-A (ABOUT.P ?X_C)) TALK.V))))))
			(!R6 (?X_A (OF.P (K (PLUR ROOM.N)))))
			(!R7 (?X_A CORNER.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?L)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?L))))))
			(?X_D (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_G))
			(!W2 (?X_D (AT-ABOUT ?X_E)))
			(!W3 (?X_G (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_G))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-345.PR ?X_H ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_G (OF.P (K (PLUR ROOM.N)))))
			(!R2 (?X_G CORNER.N))
			(!R3 (?X_I ROUGH.A))
			(!R4 (?X_I LIFE.N))
			(!R5 (?X_H AGENT.N))
			(!R6 (NOT (?X_H (LIKE.V (KA ((ADV-A (ABOUT.P ?X_I)) TALK.V))))))
		)
		(:STEPS
			(?X_F (?X_H (HAVE.V ?X_I)))
			(?X_D (?X_H ((OFTEN.ADV HIDE.V) ?X_H)))
			(?X_B (?X_H (((ADV-A (IN.P ?X_G)) FIND.72.V) ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_B)))
		)
	)
	(
			"A agent has a rough life."
			"A agent hides a agent often."
			"A agent find.69s a rough life in a of rooms corner."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) BECOME.5.V) (K (TOO.ADV HOT.A))) **
	             ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (TOO.ADV HOT.A)) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (TOO.ADV HOT.A)))))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A JACKET.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K (TOO.ADV HOT.A)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K (TOO.ADV HOT.A))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K (TOO.ADV HOT.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (K (TOO.ADV HOT.A)))) BECOME.5.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (TOO.ADV HOT.A)))) BECOME.5.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K (TOO.ADV HOT.A)))) BECOME.5.V)
	    (K (TOO.ADV HOT.A))))
			(?X_C (?X_B BECOME.5.V))
			(?X_C (?X_B ((SOON.ADV BECOME.5.V) (K (TOO.ADV HOT.A)))))
			(?X_C (?X_B (LOCATION_ADV.? BECOME.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((OFF.ADV TAKE.25.V) ?X_B)) ** ?X_E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_B JACKET.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?X_C (?X_A ((OFF.ADV NEED.V) ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (BEFORE ?X_F)))
			(!W6 (?X_C (SAME-TIME ?X_F)))
			(!W7 (?X_C (RIGHT-AFTER ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((OFF.ADV TAKE.26.V) ?X_B)) ** ?X_E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B JACKET.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?X_C (?X_A ((OFF.ADV NEED.V) ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_E))
			(!W2 (?I2 PRECOND-OF ?X_E))
			(!W3 (?I3 PRECOND-OF ?X_E))
			(!W4 (?P1 POSTCOND-OF ?X_E))
			(!W5 (?X_E (RIGHT-AFTER ?X_F)))
			(!W6 (?X_E (SAME-TIME ?X_D)))
			(!W7 (?X_C (BEFORE ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-346.PR (K (TOO.ADV HOT.A)) ?X_M)) ** ?E)
		(:ROLES
			(!R1 ((K (TOO.ADV HOT.A)) DESTINATION.N))
			(!R2 (?X_M JACKET.N))
			(!R3 (?X_M (PERTAIN-TO ?X_L)))
			(!R4 (?X_L MAN.N))
			(!R5 (NOT (?X_M AGENT.N)))
			(!R6 (NOT (?X_M ACTION.N)))
			(!R7 (NOT (?X_L = ?X_M)))
		)
		(:STEPS
			(?X_K (?X_L ((ON.PRT PUT.V) ?X_M)))
			(?X_B (?X_L ((ON.PRT PUT.V) ?X_M)))
			(?X_I (?X_L ((ADV-A (FROM.P ?L1)) BECOME.5.V) (K (TOO.ADV HOT.A))))
			(?X_G (?X_L ((OFF.ADV TAKE.25.V) ?X_M)))
			(?X_C (?X_L ((OFF.ADV TAKE.26.V) ?X_M)))
			(?X_E (?X_L ((ADV-A (ON.P ?X_A)) PUT.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_B)))
			(!W2 (?X_K (BEFORE ?X_I)))
			(!W3 (?X_K (BEFORE ?X_C)))
			(!W4 (?X_K (BEFORE ?X_E)))
			(!W5 (?X_B (BEFORE ?X_I)))
			(!W6 (?X_B (BEFORE ?X_C)))
			(!W7 (?X_B (BEFORE ?X_E)))
			(!W8 (?X_I (BEFORE ?X_C)))
			(!W9 (?X_I (BEFORE ?X_E)))
			(!W10 (?X_G (BEFORE ?X_C)))
			(!W11 (?X_G (BEFORE ?X_E)))
			(!W12 (?X_C (BEFORE ?X_E)))
		)
	)
	(
			"A man puts a jacket of a man on."
			"A man puts a jacket of a man on."
			"A man become.84s too hot from L1."
			"A man take.76s a jacket of a man off."
			"A man take.78s a jacket of a man off."
			"A man puts on X_A."
		adding constraint (ME$22$120.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D (MAY.AUX ((ADV-A (WITH.P ?X_B)) PLAY.20.V))) ** ?X_E)
		(:ROLES
			(!R1 (?X_D BABY.N))
			(!R2 (?X_C TOY.N))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_B DOLL.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_A AGENT.N))
			(!R9 (?X_C (PERTAIN-TO ?X_A)))
			(!R10 (?X_C (K BIG.A) HAT.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?X_G (?X_D ((MAY.AUX HAVE.V) ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_D EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (WITH.P ?X_C)) PLAY.20.V)))
			(?X_E (?X_D PLAY.20.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D (MAY.AUX ((ADV-A (WITH.P ?X_A)) PLAY.21.V))) ** ?X_G)
		(:ROLES
			(!R1 (?X_D BABY.N))
			(!R2 (?X_C TOY.N))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_C (K BIG.A) HAT.N))
			(!R7 (?X_C (PERTAIN-TO ?X_B)))
			(!R8 (?X_B AGENT.N))
			(!R9 (?X_A DOLL.N))
			(!R10 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?X_E (?X_D ((MAY.AUX HAVE.V) ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_D EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_G (?X_D ((ADV-A (WITH.P ?X_C)) PLAY.21.V)))
			(?X_G (?X_D PLAY.21.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-347.PR ?X_K ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_L (K BIG.A) HAT.N))
			(!R2 (?X_K BIRD.N))
			(!R3 (?X_M AGENT.N))
			(!R4 (?X_O (PERTAIN-TO ?X_M)))
			(!R5 (?X_L (PERTAIN-TO ?X_M)))
			(!R6 (?X_N BABY.N))
			(!R7 (?X_O DOLL.N))
		)
		(:STEPS
			(?X_J (?X_K (CAN.AUX FLY.V)))
			(?X_H (NOT (?X_N ((CAN.AUX HAVE.V) ?X_K))))
			(?X_F (NOT (?X_N (CAN.AUX FLY.V))))
			(?X_D (?X_N (MAY.AUX ((ADV-A (WITH.P ?X_O)) PLAY.20.V))))
			(?X_D (?X_N (MAY.AUX ((ADV-A (WITH.P ?X_O)) PLAY.21.V))))
			(?X_B (?X_N ((MAY.AUX HAVE.V) ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_F)))
			(!W4 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A bird flies can."
			"A baby has a bird not can."
			"A baby flies not can."
			"A baby play.89s may with a doll of a agent."
			"A baby play.91s may with a doll of a agent."
			"A baby has a of a agent may."
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (AT.P ?X_A)) FIND.73.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C MAN.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D HAT.N))
			(!R4 (?X_A LABEL.N))
			(!R5 (?X_B (K HEAD.N) ITCH.N))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-348.PR ?X_M (K WOOL.N)
	               (KE (?X_P (BE.V (K WOOL.N))))
	               (KE (?X_O (NOT (LIKE.P (K WOOL.N))))) ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_M (K HEAD.N) ITCH.N))
			(!R2 (?X_M (PERTAIN-TO ?X_O)))
			(!R3 (?X_N LABEL.N))
			(!R4 (?X_O MAN.N))
			(!R5 (?X_P HAT.N))
		)
		(:STEPS
			(?X_L (?X_O ((ADV-A (ON.P ?X_P)) PUT.V)))
			(?X_A (?X_P (MAKE.V ?X_M)))
			(?X_J (?X_P (MAKE.V ?X_M)))
			(?X_F (?X_P (BE.V (K WOOL.N))))
			(?X_D (?X_N (SAY.V (KE (?X_P (BE.V (K WOOL.N)))))))
			(?X_B (?X_O (DECIDE.V (KE (?X_O (NOT (LIKE.P (K WOOL.N))))))))
			(?X_H (?X_O (((ADV-A (AT.P ?X_N)) FIND.73.V) ?X_P)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_A)))
			(!W2 (?X_L (BEFORE ?X_J)))
			(!W3 (?X_L (BEFORE ?X_F)))
			(!W4 (?X_L (BEFORE ?X_D)))
			(!W5 (?X_L (BEFORE ?X_B)))
			(!W6 (?X_A (BEFORE ?X_J)))
			(!W7 (?X_A (BEFORE ?X_F)))
			(!W8 (?X_A (BEFORE ?X_D)))
			(!W9 (?X_A (BEFORE ?X_B)))
			(!W10 (?X_J (BEFORE ?X_F)))
			(!W11 (?X_J (BEFORE ?X_D)))
			(!W12 (?X_J (BEFORE ?X_B)))
			(!W13 (?X_F (BEFORE ?X_D)))
			(!W14 (?X_F (BEFORE ?X_B)))
			(!W15 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A man puts on a hat."
			"A hat makes a of a man."
			"A hat makes a of a man."
			"A hat is wool."
			"A label says a hat is wool."
			"A man decides a man not like wool."
			"A man find.114s a hat at a label."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) PASS.1.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B GIRL.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_B LITTLE.A))
			(!R6 (?X_A END.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) PASS.1.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) PASS.1.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) PASS.1.V) ?L2))
			(?X_C (?X_B (AWAY.PRT ((ADV-A (AT.P ?X_A)) PASS.1.V))))
			(?X_C (?X_B PASS.1.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? PASS.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B GET.46.V (K OLD.A)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B GIRL.N))
			(!R2 (NOT ((K OLD.A) AGENT.N)))
			(!R3 (NOT ((K OLD.A) ACTION.N)))
			(!R4 (?X_A END.N))
			(!R5 (NOT (?X_B = (K OLD.A))))
			(!R6 (?X_B LITTLE.A))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_B (HAVE.V (K OLD.A)))))))
			(?G2 (?X_B (NEED.V (K OLD.A))))
			(?G3 (?X_B (WANT.V (K OLD.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B HAVE.V (K OLD.A))))
			(?I2 (?X_B (AT.P ?X_A)))
			(?I3 ((K OLD.A) (AT.P ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_B HAVE.V (K OLD.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-349.PR ?X_H ?L2 (K OLD.A))) ** ?E)
		(:ROLES
			(!R1 (?X_C END.N))
			(!R2 (?X_H FAMILY.N))
			(!R3 (NOT ((K OLD.A) AGENT.N)))
			(!R4 (NOT ((K OLD.A) ACTION.N)))
			(!R5 (NOT (?X_K = (K OLD.A))))
			(!R6 (?X_K LITTLE.A))
			(!R7 (?X_K GIRL.N))
			(!R8 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_J (?X_K (UP.PRT GROW.V)))
			(?X_G (?X_K (HAVE.V ?X_H)))
			(?X_E (?X_K GET.46.V (K OLD.A)))
			(?X_B (?X_K ((ADV-A (FROM.P ?L1)) PASS.1.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_B)))
			(!W6 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A little girl grows up."
			"A little girl has a family."
			"A little girl get.124s old."
			"A little girl pass.120s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_M (COMPOSITE-SCHEMA-350.PR ?X_K (K (VERY.ADV COLD.A)) ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_K (PLUR LEAF.N)))
			(!R2 (?X_F WINTER.N))
			(!R3 (?X_M TREE.N))
			(!R4 (?X_K (PERTAIN-TO ?X_M)))
			(!R5 (?X_L (PLUR BRANCH.N)))
			(!R6 (?X_L (PERTAIN-TO ?X_M)))
		)
		(:STEPS
			(?X_B (?X_M (LOSE.V ?X_K)))
			(?X_E (?X_M (LOSE.V ?X_K)))
			(?X_H (?X_F ?X_A (BECOME.V (K (VERY.ADV COLD.A)))))
			(?X_J (?X_L FREEZE.V))
			(?X_C (?X_M (LOSE.V ?X_L)))
			(?X_O (?X_M (LOSE.V ?X_L)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_E)))
			(!W2 (?X_B (BEFORE ?X_H)))
			(!W3 (?X_B (BEFORE ?X_J)))
			(!W4 (?X_B (BEFORE ?X_C)))
			(!W5 (?X_B (BEFORE ?X_O)))
			(!W6 (?X_E (BEFORE ?X_H)))
			(!W7 (?X_E (BEFORE ?X_J)))
			(!W8 (?X_E (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_O)))
			(!W10 (?X_H (BEFORE ?X_J)))
			(!W11 (?X_H (BEFORE ?X_C)))
			(!W12 (?X_H (BEFORE ?X_O)))
			(!W13 (?X_J (BEFORE ?X_C)))
			(!W14 (?X_J (BEFORE ?X_O)))
			(!W15 (?X_C (BEFORE ?X_O)))
		)
	)
	(
			"A tree loses a leafs of a tree."
			"A tree loses a leafs of a tree."
			"A winter becomes very cold."
			"A branchs of a tree freeze."
			"A tree loses a branchs of a tree."
			"A tree loses a branchs of a tree."
	)
)



(
	(EPI-SCHEMA ((?X_F
	              (COMPOSITE-SCHEMA-351.PR (KE (?X_A (OF.P ?X_E)))
	               (K (ON.P (?X_A (OF.P ?X_E)))) (K ROLL.N)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E (PLUR SIDE.N)))
			(!R2 (?X_F (HAS.V (SIX.D (PLUR SIDE.N)))))
			(!R3 (?X_F CUBE.N))
			(!R4 (?X_E (PERTAIN-TO ?X_F)))
		)
		(:STEPS
			(?X_D (?X_F (ON.P (KE (?X_A (OF.P ?X_E))))))
			(?X_B (?X_F (STAND.V (K (ON.P (?X_A (OF.P ?X_E)))))))
			(?X_H (?X_F (CANNOT.V (K ROLL.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
			(!W2 (?X_D (BEFORE ?X_H)))
			(!W3 (?X_B (BEFORE ?X_H)))
		)
	)
	(
			"A has six sides cube is on."
			"A has six sides cube stands on X_A of a sides of a has six sides cube."
			"A has six sides cube cannots roll."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) RETURN.2.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A BIRD.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RETURN.2.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RETURN.2.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) RETURN.2.V) ?L2))
			(?X_C (?X_B RETURN.2.V))
			(?X_C (?X_B RETURN.2.V ?L2))
			(?X_C (?X_B RETURN.2.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.28.V ?X_C ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?X_C CAGE.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A BIRD.N))
			(!R8 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_D (?X_B (TAKE.V ?X_C)))
			(?X_D (?X_B CARRY.V ?X_C))
			(?X_D (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B TRANSPORT_OBJECT.29.V ?X_C ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?X_C BROTHER.N))
			(!R3 (?X_C SMALLER-THAN.N ?X_B))
			(!R4 (?L1 LOCATION.N))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (?X_A BIRD.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
			(!R8 (?X_C (PERTAIN-TO ?X_C)))
			(!R9 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C ((ADV-A (AT.P ?L2)) BE.V))))))
		)
		(:PRECONDS
			(?I1 (?X_C ((ADV-A (AT.P ?L1)) BE.V)))
			(?I2 (?X_B (HAVE.V ?X_C)))
		)
		(:POSTCONDS
			(?P1 (?X_C ((ADV-A (AT.P ?L2)) BE.V)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) TAKE.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) CARRY.V) ?X_C))
			(?X_D (?X_B ((ADV-A (TO.P ?L2)) BRING.V) ?X_C))
			(?X_D (?X_B (TAKE.V ?X_C)))
			(?X_D (?X_B CARRY.V ?X_C))
			(?X_D (?X_B BRING.V ?X_C))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?P1 POSTCOND-OF ?X_D))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) LEAVE.5.V) (K SCHOOL.N)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B BOY.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K SCHOOL.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K SCHOOL.N))))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
			(!R6 (?X_A BIRD.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K SCHOOL.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K SCHOOL.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K SCHOOL.N))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (K SCHOOL.N)))
	     ((ADV-A (FOR.P (K SCHOOL.N))) LEAVE.5.V))))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K SCHOOL.N))) LEAVE.5.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K SCHOOL.N))) LEAVE.5.V) (K SCHOOL.N)))
			(?X_C (?X_B LEAVE.5.V))
			(?X_C (?X_B LEAVE.5.V (K SCHOOL.N)))
			(?X_C (?X_B (LOCATION_ADV.? LEAVE.5.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_Q (COMPOSITE-SCHEMA-352.PR ?X_O ?X_P ?L2 (K SCHOOL.N))) ** ?E)
		(:ROLES
			(!R1 (?X_N BIRD.N))
			(!R2 (?X_N (PERTAIN-TO ?X_Q)))
			(!R3 ((K SCHOOL.N) DESTINATION.N))
			(!R4 (?X_O CAGE.N))
			(!R5 (?X_O SMALLER-THAN.N ?X_Q))
			(!R6 (?X_P BROTHER.N))
			(!R7 (?X_P SMALLER-THAN.N ?X_Q))
			(!R8 (?X_P (PERTAIN-TO ?X_P)))
			(!R9 (?X_Q BOY.N))
			(!R10 (?L2 DESTINATION.N))
			(!R11 (?L2 HOME.N))
		)
		(:STEPS
			(?X_M (?X_Q (LOCK.V ?X_O)))
			(?X_C (?X_Q (CATCH.V ?X_P)))
			(?X_K (?X_Q ((ADV-A (FROM.P ?L1)) LEAVE.5.V) (K SCHOOL.N)))
			(?X_I (?X_Q ((ADV-A (FROM.P ?L1)) RETURN.2.V) ?L2))
			(?X_I (?X_Q TRANSPORT_OBJECT.28.V ?X_O ?L2))
			(?X_I (?X_Q TRANSPORT_OBJECT.29.V ?X_P ?L2))
			(?X_G (?X_O UNLOCK.V))
			(?X_E (?X_O UNLOCK.V))
			(?X_A (?X_Q (KA CATCH.V) ?X_P ((ADV-A (WITH.P ?X_N)) PLAY.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_M (BEFORE ?X_K)))
			(!W2 (?X_M (BEFORE ?X_I)))
			(!W3 (?X_M (BEFORE ?X_G)))
			(!W4 (?X_M (BEFORE ?X_E)))
			(!W5 (?X_M (BEFORE ?X_A)))
			(!W6 (?X_C (BEFORE ?X_A)))
			(!W7 (?X_K (BEFORE ?X_I)))
			(!W8 (?X_K (BEFORE ?X_G)))
			(!W9 (?X_K (BEFORE ?X_E)))
			(!W10 (?X_K (BEFORE ?X_A)))
			(!W11 (?X_I (BEFORE ?X_G)))
			(!W12 (?X_I (BEFORE ?X_E)))
			(!W13 (?X_I (BEFORE ?X_A)))
			(!W14 (?X_G (BEFORE ?X_A)))
			(!W15 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A boy locks a cage."
			"A boy catches a brother of a brother of X_P."
			"A boy leave.177s school from L1."
			"A boy return.175s a destination home from L1."
			"A boy transport object.171s a cage a destination home."
			"A boy transport object.172s a brother of a brother of X_P a destination home."
			"A cage unlocks."
			"A cage unlocks."
			"A boy plays with a bird of a boy."
	)
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-353.PR
	               (K (L X (AND (X RID.A) (X (OF.P (THE.D DOG.N))))))
	               (KE (?X_K OUTSIDE.A))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_B CAGE.N))
			(!R2 (?X_G FAMILY.N))
			(!R3 (?X_J NEXT.A))
			(!R4 (?X_J FAMILY.N))
			(!R5 (?X_K DOG.N))
		)
		(:STEPS
			(?X_D (?X_K ((ADV-A (IN.P ?X_B)) BE.V)))
			(?X_F ((ADV-E (DURING (ALL.D DAY.N))) (?X_K HOWL.V)))
			(?X_I (?X_G (GET.V (K (L X (AND (X RID.A) (X (OF.P (THE.D DOG.N)))))))))
			(?X_M (?X_J (LET.V (KE (?X_K OUTSIDE.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_F)))
			(!W2 (?X_D (BEFORE ?X_I)))
			(!W3 (?X_D (BEFORE ?X_M)))
			(!W4 (?X_F (BEFORE ?X_I)))
			(!W5 (?X_F (BEFORE ?X_M)))
			(!W6 (?X_I (BEFORE ?X_M)))
		)
	)
	(
			"A dog is in a cage."
			"A dog howls DURING all day."
			"A family gets rid of."
			"A next family lets a dog outside."
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.41.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))) ACTION.N)))
			(!R3 (NOT ((K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))) AGENT.N)))
			(!R4 ((K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))) OBJECT.N))
			(!R5 (?X_A (PLUR FRIEND.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:POSTCONDS
			(?P1
	   (?X_B
	    (WANT.V (KA (HAVE.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))))))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N)))))))
			(?X_D (?X_B (WANT.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))))))
			(?X_D (?X_B (LIKE.41.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))))))
			(?X_D (?X_B (LOVE.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-354.PR ?X_D
	               (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N)))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D LARGE.A))
			(!R2 (?X_D FIGHT.N))
			(!R3 (?X_G (PLUR FRIEND.N)))
			(!R4 (?X_G (PERTAIN-TO ?X_K)))
			(!R5 (?X_J HOT.A))
			(!R6 (?X_J DAY.N))
			(!R7 ((K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))) OBJECT.N))
			(!R8 (?X_K AGENT.N))
			(!R9 (NOT ((K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))) ACTION.N)))
			(!R10 (NOT ((K (L X (AND (X WATER.N) (X (PLUR BALLOON.N))))) AGENT.N)))
		)
		(:STEPS
			(?X_I ((ADV-E (DURING ?X_J)) (?X_A BE.V)))
			(?X_C (?X_G (HAVE.V ?X_D)))
			(?X_F (?X_K LIKE.41.V (K (L X (AND (X WATER.N) (X (PLUR BALLOON.N)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_C)))
		)
	)
	(
			"X_A is DURING a hot day."
			"A friends of a agent have a large fight."
			"A agent like.213s water balloon."
		adding constraint (I$7$256.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.64.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A (EAGER.A (KA (TRY.V ?X_B)))))
			(!R6 (?X_B (IN.P (K TOWN.N))))
			(!R7 (?X_B NEW.A))
			(!R8 (?X_B RESTAURANT.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.64.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.64.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.64.V) ?X_B))
			(?X_C (?X_A GO.64.V))
			(?X_C (?X_A GO.64.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.64.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-355.PR (K GOOD.A) ?X_F)) ** ?E)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_E (EAGER.A (KA (TRY.V ?X_F)))))
			(!R3 (?X_F DESTINATION.N))
			(!R4 (?X_F (IN.P (K TOWN.N))))
			(!R5 (?X_F NEW.A))
			(!R6 (?X_F RESTAURANT.N))
		)
		(:STEPS
			(?X_D (?X_F (LOOK.V (K GOOD.A))))
			(?X_B (?X_E ((ADV-A (FROM.P ?L1)) GO.64.V) ?X_F))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A destination in town new restaurant looks good."
			"A agent eager trying a destination in town new restaurant go.223s a destination in town new restaurant from L1."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) RUN.34.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.34.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.34.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.34.V) ?L2))
			(?X_B (?X_A (OFF.PRT RUN.34.V)))
			(?X_B (?X_A RUN.34.V ?L2))
			(?X_B (?X_A (LOCATION_ADV.? RUN.34.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-356.PR
	               (KE (AND (?X_L (PASV STICK.V)) (?X_L (IN.P ?X_J)))) ?X_L
	               (KE (?X_A LIFE.N)) ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_J TREE.N))
			(!R2 (?X_K (HOME.ADV WALK.V)))
			(!R3 (?X_L DOG.N))
			(!R4 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_K (SEE.V (KE (AND (?X_L (PASV STICK.V)) (?X_L (IN.P ?X_J)))))))
			(?X_G (?X_K (((ADV-A (FROM.P ?X_J)) FREE.V) ?X_L)))
			(?X_E (?X_L ((ADV-A (FROM.P ?L1)) RUN.34.V) ?L2))
			(?X_C (?X_K (SAVE.V (KE (?X_A LIFE.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_G)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_E)))
			(!W5 (?X_G (BEFORE ?X_C)))
			(!W6 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A home walk sees and a dog PASV sticks a dog in a tree."
			"A home walk frees a dog from a tree."
			"A dog run.239s a destination from L1."
			"A home walk saves X_A life."
		adding constraint (I$0$285.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (FOR.P ?X_B)) FIND.74.V) ?X_B)) ** ?X_G)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B CAT.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?X_C (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_G))
			(!W2 (?X_C (AT-ABOUT ?X_D)))
			(!W3 (?X_G (AT-ABOUT ?X_F)))
			(!W4 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_G))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.8.V)) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?LX LOCATION.N))
			(!R3 (?LO LOCATION.N))
			(!R4 (?X_B CAT.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (FIND.V ?X_B)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?LX)))
			(?I2 (?X_B (AT.P ?LO)))
			(?I3 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?LO)))))))
		)
		(:POSTCONDS
			(?P1 (?X_A (FIND.V ?X_B)))
		)
		(:PARAPHRASES
			(?X_E (?X_A ((ADV-A (FOR.P ?X_B)) LOOK.V)))
		)
		(:PARAPHRASES
			(?X_E (?X_A ((ADV-A (FOR.P ?X_B)) LOOK.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?I3<- ?P1) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.47.V (K MAD.A)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K MAD.A) AGENT.N)))
			(!R3 (NOT ((K MAD.A) ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = (K MAD.A))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V (K MAD.A)))))))
			(?G2 (?X_A (NEED.V (K MAD.A))))
			(?G3 (?X_A (WANT.V (K MAD.A))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V (K MAD.A))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 ((K MAD.A) (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V (K MAD.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_B))
			(!W2 (?I2 PRECOND-OF ?X_B))
			(!W3 (?I3 PRECOND-OF ?X_B))
			(!W4 (?P1 POSTCOND-OF ?X_B))
			(!W5 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-357.PR (KA (GET.V ?X_L)) ?X_L (K MAD.A))) **
	             ?E)
		(:ROLES
			(!R1 (NOT ((K MAD.A) AGENT.N)))
			(!R2 (NOT ((K MAD.A) ACTION.N)))
			(!R3 (NOT (?X_K = (K MAD.A))))
			(!R4 (?X_K AGENT.N))
			(!R5 (?X_L CAT.N))
		)
		(:STEPS
			(?X_J (?X_K (HAVE.V ?X_L)))
			(?X_H (?X_K (LOVE.V ?X_L)))
			(?X_F (?X_K GET.47.V (K MAD.A)))
			(?X_B (?X_K (TRY.V (KA (GET.V ?X_L)))))
			(?X_D (?X_K (((ADV-A (FOR.P ?X_L)) FIND.74.V) ?X_L)))
			(?X_D (?X_K ((ADV-A (FOR.P ?X_L)) SEARCH.8.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_J (BEFORE ?X_D)))
			(!W5 (?X_H (BEFORE ?X_F)))
			(!W6 (?X_H (BEFORE ?X_B)))
			(!W7 (?X_H (BEFORE ?X_D)))
			(!W8 (?X_F (BEFORE ?X_B)))
			(!W9 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A agent has a cat."
			"A agent loves a cat."
			"A agent get.254s mad."
			"A agent tries getting a cat."
			"A agent find.253s a cat for a cat."
			"A agent search.250s for a cat."
		adding constraint (I$0$321.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-358.PR ?X_I (SET-OF ?X_I ?X_M) (SET-OF ?X_M ?X_I)
	               ?X_M))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I BOY.N))
			(!R2 (?X_L AGENT.N))
			(!R3 (?X_M GIRL.N))
		)
		(:STEPS
			(?X_B (?X_L (SEE.V ?X_M)))
			(?X_D (?X_L (SEE.V ?X_I)))
			(?X_F (?X_L (SEE.V (SET-OF ?X_I ?X_M))))
			(?X_H (?X_I ((CAN.AUX SEE.V) ?X_M)))
			(?X_K (?X_L ((CAN.AUX SEE.V) (SET-OF ?X_M ?X_I))))
			(?X_O (?X_L ((CAN.AUX SEE.V) ?X_M)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_D)))
			(!W2 (?X_B (BEFORE ?X_F)))
			(!W3 (?X_B (BEFORE ?X_H)))
			(!W4 (?X_B (BEFORE ?X_K)))
			(!W5 (?X_B (BEFORE ?X_O)))
			(!W6 (?X_D (BEFORE ?X_F)))
			(!W7 (?X_D (BEFORE ?X_H)))
			(!W8 (?X_D (BEFORE ?X_K)))
			(!W9 (?X_D (BEFORE ?X_O)))
			(!W10 (?X_F (BEFORE ?X_H)))
			(!W11 (?X_F (BEFORE ?X_K)))
			(!W12 (?X_F (BEFORE ?X_O)))
			(!W13 (?X_H (BEFORE ?X_K)))
			(!W14 (?X_H (BEFORE ?X_O)))
			(!W15 (?X_K (BEFORE ?X_O)))
		)
	)
	(
			"A agent sees a girl."
			"A agent sees a boy."
			"A agent sees a boy and a girl."
			"A boy sees a girl can."
			"A agent sees a girl and a boy can."
			"A agent sees a girl can."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.65.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B FARMER.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A (PLUR BOOT.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?L2 OUTSIDE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.65.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.65.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.65.V) ?L2))
			(?X_C (?X_B GO.65.V))
			(?X_C (?X_B GO.65.V ?L2))
			(?X_C (?X_B GO.65.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.66.V)
	              (K (BACK.ADV (TO.P (K BED.N)))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_B FARMER.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K (BACK.ADV (TO.P (K BED.N)))) DESTINATION.N))
			(!R4 (NOT (?L1 = (K (BACK.ADV (TO.P (K BED.N)))))))
			(!R5 (?X_A (PLUR BOOT.N)))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1
	   (?X_B (WANT.V (KA ((ADV-A (AT.P (K (BACK.ADV (TO.P (K BED.N)))))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K (BACK.ADV (TO.P (K BED.N))))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K (BACK.ADV (TO.P (K BED.N)))))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (K (BACK.ADV (TO.P (K BED.N)))))) GO.66.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K (BACK.ADV (TO.P (K BED.N)))))) GO.66.V))))
			(?X_C
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (K (BACK.ADV (TO.P (K BED.N)))))) GO.66.V)
	    (K (BACK.ADV (TO.P (K BED.N))))))
			(?X_C (?X_B GO.66.V))
			(?X_C (?X_B GO.66.V (K (BACK.ADV (TO.P (K BED.N))))))
			(?X_C (?X_B (LOCATION_ADV.? GO.66.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((UP.PRT ((ADV-A (IN.P ?X_A)) GET.48.V)) ?O)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C FARMER.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?O)))
			(!R6 (?X_A MORNING.N))
			(!R7 (?X_B (PERTAIN-TO ?X_C)))
			(!R8 (?X_B (PLUR BOOT.N)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?O))))))
			(?G2 (?X_C (NEED.V ?O)))
			(?G3 (?X_C (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?O)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-359.PR ?X_M ?X_F ?L2
	               (K (BACK.ADV (TO.P (K BED.N)))) ?O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F COW.N))
			(!R2 (?X_M (PLUR BOOT.N)))
			(!R3 (?X_M (PERTAIN-TO ?X_O)))
			(!R4 (?X_N MORNING.N))
			(!R5 (NOT (?O AGENT.N)))
			(!R6 (NOT (?O ACTION.N)))
			(!R7 (NOT (?X_O = ?O)))
			(!R8 (?L2 DESTINATION.N))
			(!R9 (?L2 OUTSIDE.N))
			(!R10 (?X_O FARMER.N))
			(!R11 ((K (BACK.ADV (TO.P (K BED.N)))) DESTINATION.N))
		)
		(:STEPS
			(?X_J (?X_O (PUT.V ?X_M)))
			(?X_L (?X_O ((UP.PRT ((ADV-A (IN.P ?X_N)) GET.48.V)) ?O)))
			(?X_A (?X_O (KA PUT.V) ?X_M ON.P))
			(?X_H (?X_O ((ADV-A (FROM.P ?L1)) GO.65.V) ?L2))
			(?X_E (?X_O (MILK.V ?X_F)))
			(?X_C (?X_O ((ADV-A (FROM.P ?L1)) GO.66.V) (K (BACK.ADV (TO.P (K BED.N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_A)))
			(!W2 (?X_J (BEFORE ?X_H)))
			(!W3 (?X_J (BEFORE ?X_E)))
			(!W4 (?X_J (BEFORE ?X_C)))
			(!W5 (?X_L (BEFORE ?X_A)))
			(!W6 (?X_L (BEFORE ?X_H)))
			(!W7 (?X_L (BEFORE ?X_E)))
			(!W8 (?X_L (BEFORE ?X_C)))
			(!W9 (?X_A (BEFORE ?X_H)))
			(!W10 (?X_A (BEFORE ?X_E)))
			(!W11 (?X_A (BEFORE ?X_C)))
			(!W12 (?X_H (BEFORE ?X_E)))
			(!W13 (?X_H (BEFORE ?X_C)))
			(!W14 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A farmer puts a boots of a farmer."
			"A farmer get.280s O up in a morning."
			"A farmer is on."
			"A farmer go.283s a destination outside from L1."
			"A farmer milks a cow."
			"A farmer go.282s back to bed from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-360.PR ?X_D)) ** ?E)
		(:ROLES
			(!R1 (?X_B (PLUR BOAT.N)))
			(!R2 (?X_A (IN.P ?X_B)))
			(!R3 (?X_D LARGE.A))
			(!R4 (?X_D NET.N))
			(!R5 (?X_B (HAVE.V ?X_D)))
			(!R6 (?X_B (((ADV-A (INTO.P ?X_C)) DRIP.V) ?X_D)))
			(!R7 (?X_D (IN.P ?X_E)))
		)
		(:STEPS
			(?X_G (?X_B (CARRY.V ?X_D)))
		)
	)
	(
			"A boats have a large net in X_E into X_C dripping a large net in X_E carry a large net in X_E."
	)
)



(
	(EPI-SCHEMA ((?X_B (COMPOSITE-SCHEMA-361.PR ?X_A)) ** ?E)
		(:ROLES
			(!R1 (?X_A STRAY.A))
			(!R2 (?X_A CAT.N))
			(!R3 (?X_A (AT.P ?X_B)))
		)
		(:STEPS
			(?X_D (?X_B (NOTICE.V ?X_A)))
		)
	)
	(
			"X_B notices a stray cat at X_B."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.3.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C POND.N))
			(!R6 (?X_A ROD.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) GO.3.V))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.3.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.3.V) ?X_C))
			(?X_D (?X_B GO.3.V))
			(?X_D (?X_B GO.3.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.3.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-362.PR ?X_I ?X_N ?X_D ?X_P)) ** ?E)
		(:ROLES
			(!R1 (?X_D BOOT.N))
			(!R2 (?X_I FISH.N))
			(!R3 (?X_N ROD.N))
			(!R4 (?X_N (PERTAIN-TO ?X_O)))
			(!R5 (?X_O AGENT.N))
			(!R6 (?X_P DESTINATION.N))
			(!R7 (?X_P POND.N))
		)
		(:STEPS
			(?X_K (?X_O (CAST.V ?X_N ?X_P)))
			(?X_M (?X_O ((ADV-A (FROM.P ?L1)) GO.3.V) ?X_P))
			(?X_A (?X_O (((ADV-A (IN.P ?X_P)) CAST.V) ?X_N)))
			(?X_H (?X_O (CATCH.V ?X_I)))
			(?X_F (?X_O ((UP.ADV PULL.V) ?X_N)))
			(?X_C (?X_N ((ACTUALLY.ADV BE.V) ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_A)))
			(!W2 (?X_K (BEFORE ?X_H)))
			(!W3 (?X_K (BEFORE ?X_F)))
			(!W4 (?X_K (BEFORE ?X_C)))
			(!W5 (?X_M (BEFORE ?X_A)))
			(!W6 (?X_M (BEFORE ?X_H)))
			(!W7 (?X_M (BEFORE ?X_F)))
			(!W8 (?X_M (BEFORE ?X_C)))
			(!W9 (?X_A (BEFORE ?X_H)))
			(!W10 (?X_A (BEFORE ?X_F)))
			(!W11 (?X_A (BEFORE ?X_C)))
			(!W12 (?X_H (BEFORE ?X_F)))
			(!W13 (?X_H (BEFORE ?X_C)))
			(!W14 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent casts a rod of a agent a destination pond."
			"A agent go.317s a destination pond from L1."
			"A agent casts a rod of a agent in a destination pond."
			"A agent catches a fish."
			"A agent pulls a rod of a agent up."
			"A rod of a agent is a boot actually."
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) RUN.35.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D DOG.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_D BLACK.A))
			(!R6 (?X_B (K BLACK.A) DOG.N))
			(!R7 (?X_D (IS.V ?X_B)))
			(!R8 (?X_A BLACK.A))
			(!R9 (?X_A LARGE.A))
			(!R10 (?X_D (IS.V ?X_A)))
			(!R11 (?X_A DOG.N))
			(!R12 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.35.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.35.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) RUN.35.V) ?L2))
			(?X_E (?X_D RUN.35.V))
			(?X_E (?X_D RUN.35.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? RUN.35.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-363.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_C DOG.N))
			(!R2 (?X_C LARGE.A))
			(!R3 (?X_C BLACK.A))
			(!R4 (?X_F (IS.V ?X_C)))
			(!R5 (?X_D (K BLACK.A) DOG.N))
			(!R6 (?X_F (IS.V ?X_D)))
			(!R7 (?X_D (PERTAIN-TO ?X_E)))
			(!R8 (?X_F DOG.N))
			(!R9 (?X_F BLACK.A))
			(!R10 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_B (?X_F ((ADV-A (FROM.P ?L1)) RUN.35.V) ?L2))
		)
	)
	(
			"A dog black is a dog large black is a of X_E run.330s a destination from L1."
		adding constraint (THEY$24$405.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.22.V (KA ((ADV-A (IN.P ?X_C)) PLAY.V))) **
	             ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 ((KA ((ADV-A (IN.P ?X_C)) PLAY.V)) ACTION.N))
			(!R3 (?X_C SNOW.N))
			(!R4 (?X_A HOUSE.N))
			(!R5 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_B (THINK.V (THAT ((KA ((ADV-A (IN.P ?X_C)) PLAY.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B (WANT.V (KA ((ADV-A (IN.P ?X_C)) PLAY.V)))))
			(?X_D (?X_B (LIKE.V (KA ((ADV-A (IN.P ?X_C)) PLAY.V)))))
			(?X_D (?X_B (LOVE.V (KA ((ADV-A (IN.P ?X_C)) PLAY.V)))))
			(?X_D (?X_B (ENJOY.V (KA ((ADV-A (IN.P ?X_C)) PLAY.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C PLAY.22.V) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A SNOWMAN.N))
			(!R7 (?X_B HOUSE.N))
			(!R8 (?X_B (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (WITH.P ?T)) PLAY.22.V)))
			(?X_D (?X_C PLAY.22.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (IN.P ?X_A)) PLAY.23.V)) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?X_C TOY.N))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_A SNOW.N))
			(!R7 (?X_B HOUSE.N))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_C SNOWMAN.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_D HAVE.V ?X_C))
		)
		(:POSTCONDS
			(?P1 (?X_D EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (WITH.P ?X_C)) PLAY.23.V)))
			(?X_E (?X_D PLAY.23.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_A)) PLAY.24.V) ?O)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (?X_A SNOW.N))
			(!R4 (?X_B (PERTAIN-TO ?X_C)))
			(!R5 (?X_B HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?O EXIST.V)))))
			(?G2 (?X_C (WANT.V (KA (HAVE.V ?O)))))
		)
		(:PRECONDS
			(?I1 (NOT (?O EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?O EXIST.V))
			(?P2 (?X_C (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B MAKE.13.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_C SNOWMAN.N))
			(!R4 (?X_A (PERTAIN-TO ?X_B)))
			(!R5 (?X_A HOUSE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C EXIST.V)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_C EXIST.V))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-364.PR (KA ((ADV-A (IN.P ?X_J)) PLAY.V)) ?O ?X_L))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I HOUSE.N))
			(!R2 (?X_I (PERTAIN-TO ?X_K)))
			(!R3 ((KA ((ADV-A (IN.P ?X_J)) PLAY.V)) ACTION.N))
			(!R4 (?X_J SNOW.N))
			(!R5 (NOT (?O AGENT.N)))
			(!R6 (?X_L SNOWMAN.N))
			(!R7 (?X_K AGENT.N))
			(!R8 (NOT (?X_L AGENT.N)))
		)
		(:STEPS
			(?X_H (?X_K ENJOY_ACTION.22.V (KA ((ADV-A (IN.P ?X_J)) PLAY.V))))
			(?X_F (?X_K (OUTSIDE.ADV GO.V)))
			(?X_D (?X_K ((ADV-A (IN.P ?X_J)) PLAY.23.V)))
			(?X_D (?X_K (((ADV-A (IN.P ?X_J)) PLAY.24.V) ?O)))
			(?X_B (?X_K PLAY.22.V))
			(?X_B (?X_K MAKE.13.V ?X_L))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_D)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent enjoy action.365s in a snow playing."
			"A agent goes outside."
			"A agent play.359s in a snow."
			"A agent play.362s O in a snow."
			"A agent play.358s."
			"A agent make.363s a snowman."
	)
)



(
	(EPI-SCHEMA ((?X_A REQUEST_ACTION.18.V ?X_C ?A) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?X_C BROTHER.N))
			(!R3 (?A ACTION.N))
			(!R4 (NOT (?X_A = ?X_C)))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
			(!R6 (?X_B DOLL.N))
			(!R7 (?X_C (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V ?X_C ?A)))
			(?G2 (?X_A (WANT.V (THAT (?X_A (DO.V ?A))))))
		)
		(:STEPS
			(?E1 (?X_A ((BACK.ADV ((ADV-A (FOR.P ?X_B)) ASK.V)) ?X_C ?A)))
			(?E2 (?X_C (DO.V ?A)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((BACK.ADV ((ADV-A (FOR.P ?X_B)) ASK.V)) ?X_C ?A)))
			(?X_D (?X_A (TELL.V ?X_C ?A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?E2))
			(!W3 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (WITH.P ?X_B)) PLAY.25.V)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_B DOLL.N))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_A BROTHER.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (WITH.P ?X_B)) PLAY.25.V)))
			(?X_D (?X_C PLAY.25.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_E)))
			(!W2 (?X_F (SAME-TIME ?X_E)))
			(!W3 (?X_F (RIGHT-AFTER ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (WITH.P ?X_B)) PLAY.26.V)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_B DOLL.N))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
			(!R6 (?X_B (PERTAIN-TO ?X_C)))
			(!R7 (?X_A (PERTAIN-TO ?X_C)))
			(!R8 (?X_A BROTHER.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_C HAVE.V ?X_B))
		)
		(:POSTCONDS
			(?P1 (?X_C EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (WITH.P ?X_B)) PLAY.26.V)))
			(?X_D (?X_C PLAY.26.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (SAME-TIME ?X_G)))
			(!W2 (?X_D (RIGHT-AFTER ?X_E)))
			(!W3 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-365.PR ?X_J ?X_L ?A)) ** ?E)
		(:ROLES
			(!R1 (?X_J DOLL.N))
			(!R2 (?X_J (PERTAIN-TO ?X_K)))
			(!R3 (NOT (?X_J AGENT.N)))
			(!R4 (?X_K AGENT.N))
			(!R5 (?X_L BROTHER.N))
			(!R6 (?X_L (PERTAIN-TO ?X_K)))
			(!R7 (NOT (?X_K = ?X_L)))
			(!R8 (?A ACTION.N))
		)
		(:STEPS
			(?X_I (?X_K ((ADV-A (WITH.P ?X_J)) PLAY.25.V)))
			(?X_A (?X_K ((ADV-A (WITH.P ?X_J)) PLAY.26.V)))
			(?X_G (?X_K ((ADV-A (FOR.P (KA CRY.V))) START.V)))
			(?X_E (?X_K REQUEST_ACTION.18.V ?X_L ?A))
			(?X_C (?X_K ((AWAY.ADV (RIGHT.ADV (BACK.ADV NEED.V))) ?X_J)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_A)))
			(!W2 (?X_I (BEFORE ?X_G)))
			(!W3 (?X_I (BEFORE ?X_E)))
			(!W4 (?X_I (BEFORE ?X_C)))
			(!W5 (?X_A (BEFORE ?X_G)))
			(!W6 (?X_A (BEFORE ?X_E)))
			(!W7 (?X_A (BEFORE ?X_C)))
			(!W8 (?X_G (BEFORE ?X_E)))
			(!W9 (?X_G (BEFORE ?X_C)))
			(!W10 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent play.373s with a doll of a agent."
			"A agent play.374s with a doll of a agent."
			"A agent starts for crying."
			"A agent request action.371s a brother of a agent a action."
			"A agent needs a doll of a agent away right back."
		adding constraint (HE$7$446.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B (((ADV-A (OUTSIDE.P ?X_A)) PLAY.27.V) ?X_C)) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C AGENT.N)))
			(!R3 (?X_A DAY.N))
			(!R4 (?X_C HOUR.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (?X_C EXIST.V)))))
			(?G2 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_C EXIST.V))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L
	              (COMPOSITE-SCHEMA-366.PR (KA (MORE.ADV ACTIVE.A))
	               (KA (BE.V (K (L X (AND (X MORE.A) (X FIT.N)))))) ?X_N))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I HOUSE.N))
			(!R2 (?X_L AGENT.N))
			(!R3 (?X_M DAY.N))
			(!R4 (?X_N HOUR.N))
			(!R5 (NOT (?X_N AGENT.N)))
		)
		(:STEPS
			(?X_K (?X_A (WANT.V (KA (MORE.ADV ACTIVE.A)))))
			(?X_H (?X_L (MOSTLY.ADV ((ADV-A (AROUND.P ?X_I)) SIT.V))))
			(?X_F (?X_L (WANT.V (KA (BE.V (K (L X (AND (X MORE.A) (X FIT.N)))))))))
			(?X_D (?X_L (((ADV-A (OUTSIDE.P ?X_M)) PLAY.27.V) ?X_N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_H)))
			(!W2 (?X_K (BEFORE ?X_F)))
			(!W3 (?X_H (BEFORE ?X_F)))
		)
	)
	(
			"X_A wants more active."
			"A agent sits mostly around a house."
			"A agent wants being more fit."
			"A agent play.386s a hour outside a day."
		adding constraint (I$8$462.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.67.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B CASINO.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.67.V))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.67.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.67.V) ?X_B))
			(?X_C (?X_A GO.67.V))
			(?X_C (?X_A GO.67.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.67.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.75.V (KE (?X_B JEALOUS.A))) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((KE (?X_B JEALOUS.A)) ENTITY.N))
			(!R4 (?X_B LITTLE.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((KE (?X_B JEALOUS.A)) (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P (KE (?X_B JEALOUS.A)))) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT ((KE (?X_B JEALOUS.A)) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (KE (?X_B JEALOUS.A))))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT ((KE (?X_B JEALOUS.A)) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (KE (?X_B JEALOUS.A)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-367.PR ?X_C ?X_L (KE (?X_N JEALOUS.A)))) ** ?E)
		(:ROLES
			(!R1 (?X_C LITTLE.A))
			(!R2 (?X_C MONEY.N))
			(!R3 (?X_F FUN.N))
			(!R4 (?X_F NIGHT.N))
			(!R5 (?X_K AGENT.N))
			(!R6 (?X_L DESTINATION.N))
			(!R7 (?X_L CASINO.N))
			(!R8 (?X_N LITTLE.A))
			(!R9 (?X_M AGENT.N))
			(!R10 ((KE (?X_N JEALOUS.A)) ENTITY.N))
		)
		(:STEPS
			(?X_J (?X_K ((ADV-A (FROM.P ?L1)) GO.67.V) ?X_L))
			(?X_H (?X_M FIND.75.V (KE (?X_N JEALOUS.A))))
			(?X_E ((ADV-E (DURING ?X_F)) (?X_K HAVE.V)))
			(?X_B (?X_K ((TOO.ADV WIN.V) ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_B)))
			(!W4 (?X_H (BEFORE ?X_E)))
			(!W5 (?X_H (BEFORE ?X_B)))
			(!W6 (?X_E (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.397s a destination casino from L1."
			"A agent find.393s a little jealous."
			"A agent has DURING a fun night."
	)
)



(
	(EPI-SCHEMA ((?X_A REPLACE.1.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B BULB.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-368.PR ?X_L (KE (?X_B ROOM.N)) ?X_O)) ** ?E)
		(:ROLES
			(!R1 (?X_L NOISE.N))
			(!R2 (?X_M LIGHT.N))
			(!R3 (?X_O BULB.N))
			(!R4 (?X_N MAN.N))
			(!R5 (NOT (?X_O AGENT.N)))
		)
		(:STEPS
			(?X_C (?X_N ((ADV-A (ON.P ?X_M)) TURN.V)))
			(?X_K (?X_O (MAKE.V ?X_L)))
			(?X_I (?X_M (OUT.PRT GO.V)))
			(?X_E (?X_A (FILL.V (KE (?X_B ROOM.N)))))
			(?X_G (?X_N REPLACE.1.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_K)))
			(!W2 (?X_C (BEFORE ?X_I)))
			(!W3 (?X_C (BEFORE ?X_E)))
			(!W4 (?X_K (BEFORE ?X_I)))
			(!W5 (?X_K (BEFORE ?X_E)))
			(!W6 (?X_I (BEFORE ?X_E)))
		)
	)
	(
			"A man turns on a light."
			"A bulb makes a noise."
			"A light goes out."
			"X_A fills X_B room."
			"A man replace.1s a bulb."
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.20.V
	              (KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2
	   ((KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))) ACTION.N))
			(!R3 (?X_B (PLUR PUPPY.N)))
			(!R4 (?X_B FULL.A))
			(!R5 (?X_B (OF.P (K FUN.N))))
		)
		(:PRECONDS
			(?I1
	   (?X_A
	    (THINK.V
	     (THAT
	      ((KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A
	    (WANT.V (KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))))))
			(?X_C
	   (?X_A
	    (LIKE.V (KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))))))
			(?X_C
	   (?X_A
	    (LOVE.V (KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))))))
			(?X_C
	   (?X_A
	    (ENJOY.V (KA (SEE.V (?X_B ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B
	              (COMPOSITE-SCHEMA-369.PR
	               (KA (SEE.V (?X_A ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V))))))
	             ** ?E)
		(:ROLES
			(!R1
	   ((KA (SEE.V (?X_A ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V)))) ACTION.N))
			(!R2 (?X_A (PLUR PUPPY.N)))
			(!R3 (?X_A FULL.A))
			(!R4 (?X_A (OF.P (K FUN.N))))
			(!R5 (?X_B AGENT.N))
		)
		(:STEPS
			(E33.SK
	   (?X_B ENJOY_ACTION.20.V
	    (KA (SEE.V (?X_A ((ADV-A (WITH.P (EACH.D OTHER.A))) PLAY.V))))))
		)
	)
	(
			"A agent enjoy action.19s seeing a puppys full of fun with each other play."
		adding constraint (I$0$51.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A FIND.76.V (K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C)))) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 ((K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C))) ENTITY.N))
			(!R4 (?X_C DESK.N))
			(!R5 (?X_C (PERTAIN-TO ?X_A)))
			(!R6 (?X_B PEN.N))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 ((K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C))) (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P (K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C))))) SEARCH.V)))
			(?I4
	   (NOT
	    (?X_A (KNOW.V (THAT ((K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C))) (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V (K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C)))))))
		)
		(:POSTCONDS
			(?P1
	   (?X_A (KNOW.V (THAT ((K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C))) (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V (K ((ADV-A (FOR.P ?X_B)) (IN.P ?X_C))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-370.PR ?X_E
	               (K ((ADV-A (FOR.P ?X_J)) (IN.P ?X_H)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E PEN.N))
			(!R2 (?X_E CAP.N))
			(!R3 (?X_I AGENT.N))
			(!R4 ((K ((ADV-A (FOR.P ?X_J)) (IN.P ?X_H))) ENTITY.N))
			(!R5 (?X_H DESK.N))
			(!R6 (?X_H (PERTAIN-TO ?X_I)))
			(!R7 (?X_J PEN.N))
		)
		(:STEPS
			(?X_D (?X_I ((ONLY.ADV SEE.V) ?X_E)))
			(?X_B (?X_I ((AWAY.ADV THROW.V) ?X_E)))
			(?X_G (?X_I FIND.76.V (K ((ADV-A (FOR.P ?X_J)) (IN.P ?X_H)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent sees a pen cap only."
			"A agent throws a pen cap away."
			"A agent find.46s for a pen in a desk of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-371.PR ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (?X_B ICE.N))
		)
		(:STEPS
			(?X_D (?X_A (BREAK.V ?X_B)))
		)
	)
	(
			"A man breaks a ice."
		adding constraint (I$0$70.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.68.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B STORE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.68.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.68.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.68.V) ?X_B))
			(?X_C (?X_A GO.68.V))
			(?X_C (?X_A GO.68.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.68.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B EAT.10.V ?X_A) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A FOOD.N))
			(!R3 (?X_A WHOLE.A))
			(!R4 (?X_A CAN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_C))
			(!W2 (?I1 BEFORE ?X_C))
			(!W3 (?X_C CAUSE-OF ?P1))
			(!W4 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-372.PR ?X_E ?X_H ?X_J)) ** ?E)
		(:ROLES
			(!R1 (?X_E (PLUR ALMOND.N)))
			(!R2 (?X_E (SO.ADV GOOD.A)))
			(!R3 (?X_H DESTINATION.N))
			(!R4 (?X_H STORE.N))
			(!R5 (?X_I AGENT.N))
			(!R6 (?X_J FOOD.N))
			(!R7 (?X_J WHOLE.A))
			(!R8 (?X_J CAN.N))
		)
		(:STEPS
			(?X_G (?X_I ((ADV-A (FROM.P ?L1)) GO.68.V) ?X_H))
			(?X_D (?X_I (SEE.V ?X_E)))
			(?X_B (?X_I EAT.10.V ?X_J))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent go.61s a destination store from L1."
			"A agent sees a almonds so good."
			"A agent eat.66s a food whole can."
	)
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.23.V (KA (BACK.ADV GO.V))) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (BACK.ADV GO.V)) ACTION.N))
			(!R3 (?X_A HUNGRY.A))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (BACK.ADV GO.V)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_B (?X_A (WANT.V (KA (BACK.ADV GO.V)))))
			(?X_B (?X_A (LIKE.V (KA (BACK.ADV GO.V)))))
			(?X_B (?X_A (LOVE.V (KA (BACK.ADV GO.V)))))
			(?X_B (?X_A (ENJOY.V (KA (BACK.ADV GO.V)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-373.PR ?X_E (KA (BACK.ADV GO.V)))) ** ?E)
		(:ROLES
			(!R1 (?X_E TASTE.N))
			(!R2 (?X_E GOOD.A))
			(!R3 ((KA (BACK.ADV GO.V)) ACTION.N))
			(!R4 (?X_F AGENT.N))
			(!R5 (?X_F HUNGRY.A))
		)
		(:STEPS
			(?X_D (?X_F (TRY.V ?X_E)))
			(?X_B (?X_F ENJOY_ACTION.23.V (KA (BACK.ADV GO.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D BEFORE ?X_B))
		)
	)
	(
			"A agent hungry tries a taste good."
			"A agent hungry enjoy action.72s back go."
	)
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-374.PR (K (PLUR GLASS.N)) ?X_R ?X_Q
	               (KE ((K (PLUR GLASS.N)) (SAVE.V ?X_Q)))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E ROCK.N))
			(!R2 (?X_P MAN.N))
			(!R3 (?X_R FRIEND.N))
			(!R4 (?X_R (PERTAIN-TO ?X_P)))
			(!R5 (?X_Q EYE.N))
			(!R6 (?X_Q (PERTAIN-TO ?X_R)))
		)
		(:STEPS
			(?X_D (?X_P (WEAR.V (K (PLUR GLASS.N)))))
			(?X_G (?X_E (HIT.V (K (PLUR GLASS.N)))))
			(?X_I ((K (PLUR GLASS.N)) BREAK.V))
			(?X_A (?X_P (SHOW.V ?X_R)))
			(?X_K (?X_P (SHOW.V ?X_R)))
			(?X_M ((K (PLUR GLASS.N)) (SAVE.V ?X_Q)))
			(?X_O (?X_R (SAY.V (KE ((K (PLUR GLASS.N)) (SAVE.V ?X_Q))))))
			(?X_B (?X_R (SAY.V (KE ((K (PLUR GLASS.N)) (SAVE.V ?X_Q))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_G)))
			(!W2 (?X_D (BEFORE ?X_I)))
			(!W3 (?X_D (BEFORE ?X_A)))
			(!W4 (?X_D (BEFORE ?X_K)))
			(!W5 (?X_D (BEFORE ?X_M)))
			(!W6 (?X_D (BEFORE ?X_O)))
			(!W7 (?X_D (BEFORE ?X_B)))
			(!W8 (?X_G (BEFORE ?X_I)))
			(!W9 (?X_G (BEFORE ?X_A)))
			(!W10 (?X_G (BEFORE ?X_K)))
			(!W11 (?X_G (BEFORE ?X_M)))
			(!W12 (?X_G (BEFORE ?X_O)))
			(!W13 (?X_G (BEFORE ?X_B)))
			(!W14 (?X_I (BEFORE ?X_A)))
			(!W15 (?X_I (BEFORE ?X_K)))
			(!W16 (?X_I (BEFORE ?X_M)))
			(!W17 (?X_I (BEFORE ?X_O)))
			(!W18 (?X_I (BEFORE ?X_B)))
			(!W19 (?X_A (BEFORE ?X_K)))
			(!W20 (?X_A (BEFORE ?X_M)))
			(!W21 (?X_A (BEFORE ?X_O)))
			(!W22 (?X_A (BEFORE ?X_B)))
			(!W23 (?X_K (BEFORE ?X_M)))
			(!W24 (?X_K (BEFORE ?X_O)))
			(!W25 (?X_K (BEFORE ?X_B)))
			(!W26 (?X_M (BEFORE ?X_O)))
			(!W27 (?X_M (BEFORE ?X_B)))
			(!W28 (?X_O (BEFORE ?X_B)))
		)
	)
	(
			"A man wears glasss."
			"A rock hits glasss."
			"Glasss break."
			"A man shows a friend of a man."
			"A man shows a friend of a man."
			"Glasss save a eye of a friend of X_P."
			"A friend of a man says glasss save a eye of a friend of X_P."
			"A friend of a man says glasss save a eye of a friend of X_P."
		adding constraint (ME$22$124.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A (COMPOSITE-SCHEMA-375.PR ?X_B)) ** ?E)
		(:ROLES
			(!R1 (?X_A LITTLE.A))
			(!R2 (?X_A DOG.N))
			(!R3 (?X_B BALL.N))
		)
		(:STEPS
			(?X_D (?X_A ((MAY.AUX HAVE.V) ?X_B)))
		)
	)
	(
			"A little dog has a ball may."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.69.V) (K FISHING.N)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K FISHING.N) DESTINATION.N))
			(!R4 (NOT (?L1 = (K FISHING.N))))
			(!R5 (?X_B MORE.A))
			(!R6 (?X_A LIMIT.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (K FISHING.N))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (K FISHING.N)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (K FISHING.N))))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? (K FISHING.N))) GO.69.V)))
			(?X_C
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K FISHING.N))) GO.69.V))))
			(?X_C
	   (?X_B ((ADV-A (DESTINATION_PREP.? (K FISHING.N))) GO.69.V) (K FISHING.N)))
			(?X_C (?X_B GO.69.V))
			(?X_C (?X_B GO.69.V (K FISHING.N)))
			(?X_C (?X_B (LOCATION_ADV.? GO.69.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.49.V
	              (K
	               (L X
	                (AND (X (PASV CATCH.V))
	                     (X
	                      (WITH.P
	                       (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N))))))))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2
	   (NOT
	    ((K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))
	     AGENT.N)))
			(!R3
	   (NOT
	    ((K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))
	     ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5
	   (NOT
	    (?X_A =
	     (K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N))))))))))))
			(!R6 (?X_A MALE.A))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT
	      (?X_A
	       (HAVE.V
	        (K
	         (L X
	          (AND (X (PASV CATCH.V))
	               (X
	                (WITH.P
	                 (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))))))))
			(?G2
	   (?X_A
	    (NEED.V
	     (K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N))))))))))))
			(?G3
	   (?X_A
	    (WANT.V
	     (K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N))))))))))))
		)
		(:PRECONDS
			(?I1
	   (NOT
	    (?X_A HAVE.V
	     (K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N))))))))))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3
	   ((K
	     (L X
	      (AND (X (PASV CATCH.V))
	           (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))
	    (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1
	   (?X_A HAVE.V
	    (K
	     (L X
	      (AND (X (PASV CATCH.V))
	           (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-376.PR ?X_L
	               (K (L X (AND (X MORE.A) (X (THAN.P ?X_L)))))
	               (ALL.D (L X (AND (X {REF}.N) (X (OF.P (THE.D FISH.N)))))) ?X_E
	               (K FISHING.N)
	               (K
	                (L X
	                 (AND (X (PASV CATCH.V))
	                      (X
	                       (WITH.P
	                        (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E FINE.N))
			(!R2 (?X_E BIG.A))
			(!R3 (?X_L LIMIT.N))
			(!R4 (?X_L (PERTAIN-TO ?X_M)))
			(!R5 ((K FISHING.N) DESTINATION.N))
			(!R6 (?X_M MAN.N))
			(!R7 (?X_M MORE.A))
			(!R8 (?X_N AGENT.N))
			(!R9 (?X_N MALE.A))
			(!R10
	   (NOT
	    ((K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))
	     AGENT.N)))
			(!R11
	   (NOT
	    ((K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))
	     ACTION.N)))
			(!R12
	   (NOT
	    (?X_N =
	     (K
	      (L X
	       (AND (X (PASV CATCH.V))
	            (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N))))))))))))
		)
		(:STEPS
			(?X_A (?X_M (THAN.P ?X_L)))
			(?X_K (?X_M ((ADV-A (FROM.P ?L1)) GO.69.V) (K FISHING.N)))
			(?X_B (?X_M (CATCH.V (K (L X (AND (X MORE.A) (X (THAN.P ?X_L))))))))
			(?X_I
	   (?X_M (KEEP.V (ALL.D (L X (AND (X {REF}.N) (X (OF.P (THE.D FISH.N)))))))))
			(?X_G
	   (?X_N GET.49.V
	    (K
	     (L X
	      (AND (X (PASV CATCH.V))
	           (X (WITH.P (K (L X (AND (X (TOO.ADV MANY.A)) (X FISH.N)))))))))))
			(?X_D (MUST.AUX-S (?X_N (PAY.V ?X_E))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_A (BEFORE ?X_I)))
			(!W2 (?X_A (BEFORE ?X_G)))
			(!W3 (?X_A (BEFORE ?X_D)))
			(!W4 (?X_K (BEFORE ?X_B)))
			(!W5 (?X_K (BEFORE ?X_I)))
			(!W6 (?X_K (BEFORE ?X_G)))
			(!W7 (?X_K (BEFORE ?X_D)))
			(!W8 (?X_B (BEFORE ?X_I)))
			(!W9 (?X_B (BEFORE ?X_G)))
			(!W10 (?X_B (BEFORE ?X_D)))
			(!W11 (?X_I (BEFORE ?X_G)))
			(!W12 (?X_I (BEFORE ?X_D)))
			(!W13 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A man more is than."
			"A man more go.114s fishing from L1."
			"A man more catches more than."
			"A man more keeps all of."
			"A agent male get.113s PASV catches with."
			"A agent male pays a fine big must."
		adding constraint (I$0$152.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) GO.70.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C ROAD.N))
			(!R6 (?X_A FRIEND.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_B CAR.N))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) GO.70.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.70.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) GO.70.V) ?L2))
			(?X_E (?X_D ((ADV-A (OFF.P ?X_C)) GO.70.V)))
			(?X_E (?X_D GO.70.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? GO.70.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((ADV-A (FROM.P ?L1)) GO.21.V) ?L2) ** ?X_E)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C ROAD.N))
			(!R6 (?X_A CAR.N))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_B FRIEND.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P ?L1)))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P ?L1))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) GO.21.V)))
			(?X_E
	   (?X_D ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.21.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) GO.21.V) ?L2))
			(?X_E (?X_D ((ADV-A (OFF.P ?X_C)) GO.21.V)))
			(?X_E (?X_D GO.21.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? GO.21.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-377.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_D ROAD.N))
			(!R2 (?X_K CAR.N))
			(!R3 (?X_G MALE.A))
			(!R4 (?X_G AGENT.N))
			(!R5 (?X_J FRIEND.N))
			(!R6 (?X_J (PERTAIN-TO ?X_L)))
			(!R7 (?X_K (PERTAIN-TO ?X_L)))
			(!R8 (?X_L AGENT.N))
			(!R9 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_I (?X_L (OUT.PRT ((ADV-A (WITH.P ?X_J)) HANG.V))))
			(?X_F
	   (?X_G ((ADV-A (IN.P (K (L X (AND (X FRONT.N) (X (OF.P ?X_K))))))) PULL.V)))
			(?X_C (?X_L ((ADV-A (FROM.P ?L1)) GO.70.V) ?L2))
			(?X_C (?X_L ((ADV-A (FROM.P ?L1)) GO.21.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_F)))
			(!W2 (?X_I (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_C)))
		)
	)
	(
			"A agent hangs out with a friend of a agent."
			"A male agent pulls in front of."
			"A agent go.131s a destination from L1."
			"A agent go.133s a destination from L1."
	)
)



(
	(EPI-SCHEMA ((?X_D ((IN.PRT ((ADV-A (FROM.P (K OUTSIDE.N))) COME.15.V)) ?L2))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_D SON.N))
			(!R2 ((K OUTSIDE.N) LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT ((K OUTSIDE.N) = ?L2)))
			(!R5 (?X_A AGENT.N))
			(!R6 (?X_D (PERTAIN-TO ?X_A)))
			(!R7 (?X_D (IS.V ?X_B)))
			(!R8 (?X_B LITTLE.A))
			(!R9 (?X_B CHILD.N))
			(!R10 (?X_C FRIEND.N))
			(!R11 (?X_C (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P (K OUTSIDE.N))))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P (K OUTSIDE.N)))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.15.V)))
			(?X_E
	   (?X_D
	    ((ADV-A (FROM.P (K OUTSIDE.N)))
	     ((ADV-A (DESTINATION_PREP.? ?L2)) COME.15.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.15.V) ?L2))
			(?X_E (?X_D COME.15.V))
			(?X_E (?X_D COME.15.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? COME.15.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D ((IN.PRT ((ADV-A (FROM.P (K OUTSIDE.N))) COME.16.V)) ?L2))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_D SON.N))
			(!R2 ((K OUTSIDE.N) LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT ((K OUTSIDE.N) = ?L2)))
			(!R5 (?X_A AGENT.N))
			(!R6 (?X_D (PERTAIN-TO ?X_A)))
			(!R7 (?X_B FRIEND.N))
			(!R8 (?X_B (PERTAIN-TO ?X_D)))
			(!R9 (?X_C CHILD.N))
			(!R10 (?X_D (IS.V ?X_C)))
			(!R11 (?X_C LITTLE.A))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_D (AT.P (K OUTSIDE.N))))
			(?I2 (NOT (?X_D (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_D (AT.P (K OUTSIDE.N)))))
			(?P2 (?X_D (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.16.V)))
			(?X_E
	   (?X_D
	    ((ADV-A (FROM.P (K OUTSIDE.N)))
	     ((ADV-A (DESTINATION_PREP.? ?L2)) COME.16.V))))
			(?X_E (?X_D ((ADV-A (DESTINATION_PREP.? ?L2)) COME.16.V) ?L2))
			(?X_E (?X_D COME.16.V))
			(?X_E (?X_D COME.16.V ?L2))
			(?X_E (?X_D (LOCATION_ADV.? COME.16.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (TOGETHER.ADV ((ADV-A (WITH.P (K (PLUR STICK.N)))) PLAY.28.V)))
	             ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?T TOY.N))
			(!R3 (NOT (?T AGENT.N)))
			(!R4 (?G GAME.N))
			(!R5 (NOT (?G AGENT.N)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA (EXPERIENCE.V (K PLEASURE.N))))))
		)
		(:PRECONDS
			(?I1 (?X_A HAVE.V ?T))
		)
		(:POSTCONDS
			(?P1 (?X_A EXPERIENCE.V (K PLEASURE.N)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (WITH.P ?T)) PLAY.28.V)))
			(?X_B (?X_A PLAY.28.V ?G))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-378.PR ?L2)) ** ?E)
		(:ROLES
			(!R1 (?X_G AGENT.N))
			(!R2 (?X_K (PERTAIN-TO ?X_G)))
			(!R3 (?X_H FRIEND.N))
			(!R4 (?X_H (PERTAIN-TO ?X_K)))
			(!R5 (?X_I LITTLE.A))
			(!R6 (?X_I CHILD.N))
			(!R7 (?X_K (IS.V ?X_I)))
			(!R8 (?X_J AGENT.N))
			(!R9 ((K OUTSIDE.N) LOCATION.N))
			(!R10 (?X_K SON.N))
			(!R11 (NOT ((K OUTSIDE.N) = ?L2)))
			(!R12 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_F (?X_K (OUTSIDE.ADV ((ADV-A (FOR.P (KA PLAY.V))) RUN.V))))
			(?X_D (?X_J (TOGETHER.ADV ((ADV-A (WITH.P (K (PLUR STICK.N)))) PLAY.28.V))))
			(?X_B (?X_K ((IN.PRT ((ADV-A (FROM.P (K OUTSIDE.N))) COME.15.V)) ?L2)))
			(?X_B (?X_K ((IN.PRT ((ADV-A (FROM.P (K OUTSIDE.N))) COME.16.V)) ?L2)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_F (BEFORE ?X_D)))
			(!W2 (?X_F (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A son of a agent is a little child runs outside for playing."
			"A agent play.175s together with sticks."
			"A son of a agent is a little child come.156s a destination in from outside."
			"A son of a agent is a little child come.158s a destination in from outside."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.42.V (K CHOCOLATE.N)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT ((K CHOCOLATE.N) ACTION.N)))
			(!R3 (NOT ((K CHOCOLATE.N) AGENT.N)))
			(!R4 ((K CHOCOLATE.N) OBJECT.N))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V (K CHOCOLATE.N))))))
		)
		(:PARAPHRASES
			(?X_B (?X_A WANT.V (K CHOCOLATE.N)))
			(?X_B (?X_A (WANT.V (K CHOCOLATE.N))))
			(?X_B (?X_A (LIKE.42.V (K CHOCOLATE.N))))
			(?X_B (?X_A (LOVE.V (K CHOCOLATE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_H
	              (COMPOSITE-SCHEMA-379.PR
	               (KA (L X (AND (X GO.V) (X (EAT.V (K CHOCOLATE.N)))))) (K BAD.A)
	               (K CHOCOLATE.N)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H AGENT.N))
			(!R2 (NOT ((K CHOCOLATE.N) ACTION.N)))
			(!R3 (NOT ((K CHOCOLATE.N) AGENT.N)))
			(!R4 ((K CHOCOLATE.N) OBJECT.N))
		)
		(:STEPS
			(?X_E
	   (?X_H
	    ((THEN.ADV DECIDE.V)
	     (KA (L X (AND (X GO.V) (X (EAT.V (K CHOCOLATE.N)))))))))
			(?X_C ((K CHOCOLATE.N) (TASTE.V (K BAD.A))))
			(?X_G (?X_H LIKE.42.V (K CHOCOLATE.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent decides go eating then."
			"Chocolate tastes bad."
			"A agent like.180s chocolate."
		adding constraint (THEY$14$237.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.71.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A ADVENTURE.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.71.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.71.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) GO.71.V) ?L2))
			(?X_C (?X_B (OFF.ADV ((ADV-A (ON.P ?X_A)) GO.71.V))))
			(?X_C (?X_B GO.71.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? GO.71.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) COME.17.V) ?L2) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?L2 HOME.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) COME.17.V)))
			(?X_B
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) COME.17.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? ?L2)) COME.17.V) ?L2))
			(?X_B (?X_A COME.17.V))
			(?X_B (?X_A COME.17.V ?L2))
			(?X_B (?X_A ((ADV-A (BEFORE.P (K DARK.N))) COME.17.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (OUTSIDE.P (KA PLAY.V))) FIND.77.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C SON.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D AGENT.N))
			(!R4 (?X_A (PERTAIN-TO ?X_C)))
			(!R5 (?X_A (K BEST.A) FRIEND.N))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (OUTSIDE.P (KA PLAY.V))) FIND.45.V) ?X_D)) ** ?X_F)
		(:ROLES
			(!R1 (?X_C SON.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_D ADVENTURE.N))
			(!R4 (?X_A (K BEST.A) FRIEND.N))
			(!R5 (?X_A (PERTAIN-TO ?X_C)))
			(!R6 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_C ((ADV-A (FOR.P ?X_D)) SEARCH.V)))
			(?I4 (NOT (?X_C (KNOW.V (THAT (?X_D (AT.P ?L)))))))
			(?I5 (NOT (?X_C (HAVE.V ?X_D))))
		)
		(:POSTCONDS
			(?P1 (?X_C (KNOW.V (THAT (?X_D (AT.P ?L))))))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_F))
			(!W2 (?X_F (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_F))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-380.PR ?X_H ?L2 ?X_O ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_H HOUSE.N))
			(!R2 (?X_K (K BEST.A) FRIEND.N))
			(!R3 (?X_K (PERTAIN-TO ?X_N)))
			(!R4 (?X_N (PERTAIN-TO ?X_L)))
			(!R5 (?X_M ADVENTURE.N))
			(!R6 (?X_N SON.N))
			(!R7 (?X_O AGENT.N))
			(!R8 (?L2 DESTINATION.N))
			(!R9 (?L2 HOME.N))
		)
		(:STEPS
			(?X_G (?X_K (BY.P ?X_H)))
			(?X_J (?X_N (((ADV-A (OUTSIDE.P (KA PLAY.V))) FIND.77.V) ?X_O)))
			(?X_J (?X_N (((ADV-A (OUTSIDE.P (KA PLAY.V))) FIND.45.V) ?X_M)))
			(?X_A (?X_K ((ADV-A (BY.P ?X_H)) COME.V)))
			(?X_E (?X_O ((ADV-A (FROM.P ?L1)) GO.71.V) ?L2))
			(?X_C (?X_O ((ADV-A (FROM.P ?L1)) COME.17.V) ?L2))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_A)))
			(!W2 (?X_G (BEFORE ?X_E)))
			(!W3 (?X_G (BEFORE ?X_C)))
			(!W4 (?X_J (BEFORE ?X_A)))
			(!W5 (?X_J (BEFORE ?X_E)))
			(!W6 (?X_J (BEFORE ?X_C)))
			(!W7 (?X_A (BEFORE ?X_E)))
			(!W8 (?X_A (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A of a son of X_L is by."
			"A son of X_L find.193s a agent outside playing."
			"A son of X_L find.194s a adventure outside playing."
			"A of a son of X_L comes by a house."
			"A agent go.183s a destination home from L1."
			"A agent come.182s a destination home from L1."
		adding constraint (I$18$248.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?X_A)) LEAVE.6.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B COW.N))
			(!R2 (?X_A FIELD.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?X_A = ?X_C)))
			(!R5 (?X_C BARN.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?X_A))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.6.V)))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?X_A)) ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.6.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) LEAVE.6.V) ?X_C))
			(?X_D (?X_B LEAVE.6.V))
			(?X_D (?X_B LEAVE.6.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? LEAVE.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.72.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A COW.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B FIELD.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B DESTINATION.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   (?X_A
	    ((ADV-A (DESTINATION_PREP.? ?X_B))
	     (OUT.ADV ((ADV-A (TO.P ?X_B)) GO.72.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.72.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.72.V) ?X_B))
			(?X_C (?X_A GO.72.V))
			(?X_C (?X_A GO.72.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.72.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B FIND.35.V ?X_C) ** ?X_E)
		(:ROLES
			(!R1 (?X_B COW.N))
			(!R2 (?X_A FIELD.N))
			(!R3 (?X_C SPOT.N))
			(!R4 (?X_C (OF.P (K GRASS.N))))
			(!R5 (?X_C GRASS.N))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?X_A)))
			(?I2 (?X_C (AT.P ?X_A)))
			(?I3 (?X_B ((ADV-A (FOR.P ?X_C)) SEARCH.V)))
			(?I4 (NOT (?X_B (KNOW.V (THAT (?X_C (AT.P ?X_A)))))))
			(?I5 (NOT (?X_B (HAVE.V ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (KNOW.V (THAT (?X_C (AT.P ?X_A))))))
			(?P2 (?X_B (HAVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-381.PR ?X_L ?X_M ?X_O)) ** ?E)
		(:ROLES
			(!R1 (?X_G (PLUR COW.N)))
			(!R2 (?X_G OTHER.A))
			(!R3 (?X_L DESTINATION.N))
			(!R4 (?X_L BARN.N))
			(!R5 (NOT (?X_M = ?X_L)))
			(!R6 (?X_M DESTINATION.N))
			(!R7 (?X_M FIELD.N))
			(!R8 (?X_N COW.N))
			(!R9 (?X_O (OF.P (K GRASS.N))))
			(!R10 (?X_O GRASS.N))
			(!R11 (?X_O SPOT.N))
		)
		(:STEPS
			(?X_K (?X_N ((ADV-A (FROM.P ?X_M)) LEAVE.6.V) ?X_L))
			(?X_I (?X_N ((ADV-A (FROM.P ?L1)) GO.72.V) ?X_M))
			(?X_A (?X_G OUT.P))
			(?X_B (?X_G (IN.P ?X_M)))
			(?X_F (?X_N FIND.35.V ?X_O))
			(?X_D (?X_N (EAT.V ?X_O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_I)))
			(!W2 (?X_K (BEFORE ?X_A)))
			(!W3 (?X_K (BEFORE ?X_B)))
			(!W4 (?X_K (BEFORE ?X_F)))
			(!W5 (?X_K (BEFORE ?X_D)))
			(!W6 (?X_I (BEFORE ?X_A)))
			(!W7 (?X_I (BEFORE ?X_B)))
			(!W8 (?X_I (BEFORE ?X_F)))
			(!W9 (?X_I (BEFORE ?X_D)))
			(!W10 (?X_A (BEFORE ?X_B)))
			(!W11 (?X_A (BEFORE ?X_F)))
			(!W12 (?X_A (BEFORE ?X_D)))
			(!W13 (?X_B (BEFORE ?X_F)))
			(!W14 (?X_B (BEFORE ?X_D)))
			(!W15 (?X_F (BEFORE ?X_D)))
		)
	)
	(
			"A cow leave.201s a destination barn from a destination field."
			"A cow go.200s a destination field from L1."
			"A cows other are out."
			"A cows other are in."
			"A cow find.212s a of grass grass spot."
			"A cow eats a of grass grass spot."
		adding constraint (ME$0$286.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C (COMPOSITE-SCHEMA-382.PR ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_C BROTHER.N))
			(!R2 (?X_C (PERTAIN-TO ?X_F)))
			(!R3 (?X_G SON.N))
			(!R4 (?X_G (PERTAIN-TO ?X_F)))
			(!R5 (?X_G (PERTAIN-TO ?X_H)))
			(!R6 (?X_I BALL.N))
		)
		(:STEPS
			(?X_B (?X_C (HAVE.V ?X_I)))
			(?X_E (?X_C (((ADV-A (TO.P ?X_G)) THROW.V) ?X_I)))
			(?X_K (?X_G ((UP.PRT PICK.V) ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_E)))
			(!W2 (?X_B (BEFORE ?X_K)))
			(!W3 (?X_E (BEFORE ?X_K)))
		)
	)
	(
			"A brother of X_F has a ball."
			"A brother of X_F throws a ball to a son of X_F of X_H."
			"A son of X_F of X_H picks a ball up."
	)
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (IN.P ?X_A)) GET.50.V) ?O)) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?O AGENT.N)))
			(!R3 (NOT (?O ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_C = ?O)))
			(!R6 (?X_A CAR.N))
			(!R7 (?X_B (PERTAIN-TO ?X_C)))
			(!R8 (?X_B STREET.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_C (HAVE.V ?O))))))
			(?G2 (?X_C (NEED.V ?O)))
			(?G3 (?X_C (WANT.V ?O)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_C HAVE.V ?O)))
			(?I2 (?X_C (AT.P ?L)))
			(?I3 (?O (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_C HAVE.V ?O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P
	              (COMPOSITE-SCHEMA-383.PR ?X_O ?X_N
	               (K (L X (AND (X OUT.P) (X (OF.P ?X_N))))) ?X_I ?O))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I RED.A))
			(!R2 (?X_I LIGHT.N))
			(!R3 (?X_N STREET.N))
			(!R4 (?X_N (PERTAIN-TO ?X_P)))
			(!R5 (?X_P AGENT.N))
			(!R6 (?X_O CAR.N))
			(!R7 (NOT (?O AGENT.N)))
			(!R8 (NOT (?O ACTION.N)))
			(!R9 (NOT (?X_P = ?O)))
		)
		(:STEPS
			(?X_B (?X_P OUT.P))
			(?X_C (?X_P (OF.P ?X_N)))
			(?X_M (?X_P (((ADV-A (IN.P ?X_O)) GET.50.V) ?O)))
			(?X_K (?X_P (START.V ?X_O)))
			(?X_D (?X_P (TURN.V (K (L X (AND (X OUT.P) (X (OF.P ?X_N))))))))
			(?X_H (?X_P (SEE.V ?X_I)))
			(?X_F (?X_P STOP.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_C)))
			(!W2 (?X_B (BEFORE ?X_H)))
			(!W3 (?X_B (BEFORE ?X_F)))
			(!W4 (?X_C (BEFORE ?X_H)))
			(!W5 (?X_C (BEFORE ?X_F)))
			(!W6 (?X_M (BEFORE ?X_K)))
			(!W7 (?X_M (BEFORE ?X_D)))
			(!W8 (?X_M (BEFORE ?X_H)))
			(!W9 (?X_M (BEFORE ?X_F)))
			(!W10 (?X_K (BEFORE ?X_D)))
			(!W11 (?X_K (BEFORE ?X_H)))
			(!W12 (?X_K (BEFORE ?X_F)))
			(!W13 (?X_D (BEFORE ?X_H)))
			(!W14 (?X_D (BEFORE ?X_F)))
			(!W15 (?X_H (BEFORE ?X_F)))
		)
	)
	(
			"A agent is out."
			"A agent is of."
			"A agent get.252s O in a car."
			"A agent starts a car."
			"A agent turns out of."
			"A agent sees a red light."
			"A agent stops."
		adding constraint (I$1$332.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) FALL.10.V) (K SICK.A)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((K SICK.A) DESTINATION.N))
			(!R4 (NOT (?L1 = (K SICK.A))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (K SICK.A))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (K SICK.A)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (K SICK.A))))
		)
		(:PARAPHRASES
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (K SICK.A))) FALL.10.V)))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (K SICK.A))) FALL.10.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (K SICK.A))) FALL.10.V) (K SICK.A)))
			(?X_B (?X_A FALL.10.V))
			(?X_B (?X_A ((THEN.ADV FALL.10.V) (K SICK.A))))
			(?X_B (?X_A (LOCATION_ADV.? FALL.10.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.73.V) (KA EAT.V)) ** ?X_B)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA EAT.V) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA EAT.V))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P (KA EAT.V))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P (KA EAT.V)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P (KA EAT.V))))
		)
		(:PARAPHRASES
			(?X_B
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A
	     ((ADV-A (DESTINATION_PREP.? (KA EAT.V)))
	      (OUT.PRT ((ADV-A (FOR.P (KA EAT.V))) GO.73.V))))))
			(?X_B
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? (KA EAT.V))) GO.73.V))))
			(?X_B (?X_A ((ADV-A (DESTINATION_PREP.? (KA EAT.V))) GO.73.V) (KA EAT.V)))
			(?X_B (?X_A GO.73.V))
			(?X_B (?X_A GO.73.V (KA EAT.V)))
			(?X_B (?X_A (LOCATION_ADV.? GO.73.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_B))
			(!W2 (?I2 BEFORE ?X_B))
			(!W3 (?P1 AFTER ?X_B))
			(!W4 (?P2 AFTER ?X_B))
			(!W5 (?G1 CAUSE-OF ?X_B))
			(!W6 (?X_B (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X FEED.13.V ?X_B ?X_A) ** ?E)
		(:ROLES
			(!R1 (?X AGENT.N))
			(!R2 (?X_B AGENT.N))
			(!R3 (?X_A FOOD.N))
			(!R4 (NOT (?X = ?X_B)))
			(!R5 (NOT (?X_B = ?X_A)))
			(!R6 (NOT (?X = ?X_A)))
			(!R7 (?X_A LOT.N))
		)
		(:GOALS
			(?G1 (?X (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
			(?G2 (?X (WANT.V (THAT (?X_B EAT.V ?X_A)))))
		)
		(:PRECONDS
			(?I1 (?X HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:STEPS
			(?X_C (?X_B EAT.V ?X_A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C AFTER ?E))
			(!W2 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R4 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
			(!N5 (!R6 NECESSARY-TO-DEGREE 1.0))
			(!N6 (!E NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B EAT.11.V ?X_A) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?X_A FOOD.N))
			(!R3 (?X_A LOT.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (THAT (NOT (?X_B HUNGRY.A))))))
		)
		(:PRECONDS
			(?I1 (?X_B HAVE.V ?X_A))
			(?I2 (?X_B HUNGRY.A))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (HAVE.V ?X_A))))
			(?P2 (NOT (?X_B HUNGRY.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?P1 AFTER ?X_C))
			(!W2 (?I1 BEFORE ?X_C))
			(!W3 (?X_C CAUSE-OF ?P1))
			(!W4 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J (COMPOSITE-SCHEMA-384.PR (K SICK.A) (KA EAT.V) ?X_J ?X_I)) ** ?E)
		(:ROLES
			(!R1 ((KA EAT.V) DESTINATION.N))
			(!R2 (NOT (?X = ?X_J)))
			(!R3 (NOT (?X_J = ?X_I)))
			(!R4 (NOT (?X = ?X_I)))
			(!R5 (?X AGENT.N))
			(!R6 (?X_I FOOD.N))
			(!R7 (?X_I LOT.N))
			(!R8 ((K SICK.A) DESTINATION.N))
			(!R9 (?X_J AGENT.N))
		)
		(:STEPS
			(?X_H (?X_J ((ADV-A (FROM.P ?L1)) GO.73.V) (KA EAT.V)))
			(?E_1 (?X FEED.13.V ?X_J ?X_I))
			(?X_F (?X_J EAT.11.V ?X_I))
			(?X_B (?X_A POINT.N))
			(?X_D (?X_J ((ADV-A (FROM.P ?L1)) FALL.10.V) (K SICK.A)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_H (BEFORE ?X_F)))
			(!W2 (?X_H (BEFORE ?X_B)))
			(!W3 (?X_H (BEFORE ?X_D)))
			(!W4 (?E_1 (BEFORE ?X_F)))
			(!W5 (?E_1 (BEFORE ?X_B)))
			(!W6 (?E_1 (BEFORE ?X_D)))
			(!W7 (?X_F (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"A agent go.255s eating from L1."
			"A agent feed.257s a agent a food lot."
			"A agent eat.256s a food lot."
			"X_A is point."
			"A agent fall.254s sick from L1."
		adding constraint (ME$25$356.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_D TAKE.27.V ?X_E) ** ?X_F)
		(:ROLES
			(!R1 (?X_D AGENT.N))
			(!R2 (NOT (?X_E AGENT.N)))
			(!R3 (NOT (?X_E ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_D = ?X_E)))
			(!R6 (?X_A (PLUR FIELD.N)))
			(!R7 (?X_B WAGON.N))
			(!R8 (?X_B RED.A))
			(!R9 (?X_B (PERTAIN-TO ?X_D)))
			(!R10 (?X_C (HAS.V ?X_B)))
			(!R11 (?X_C LITTLE.A))
			(!R12 (?X_C BOY.N))
		)
		(:GOALS
			(?G1 (?X_D (WANT.V (THAT (?X_D (HAVE.V ?X_E))))))
			(?G2 (?X_D (NEED.V ?X_E)))
			(?G3 (?X_D (WANT.V ?X_E)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D HAVE.V ?X_E)))
			(?I2 (?X_D (AT.P ?L)))
			(?I3 (?X_E (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_D HAVE.V ?X_E))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_F))
			(!W2 (?I2 PRECOND-OF ?X_F))
			(!W3 (?I3 PRECOND-OF ?X_F))
			(!W4 (?P1 POSTCOND-OF ?X_F))
			(!W5 (?X_F (AFTER ?X_G)))
			(!W6 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F
	              (COMPOSITE-SCHEMA-385.PR
	               (K
	                (L X
	                 (AND (X LITTLE.A) (X MAY.N)
	                      (X ((ADV-A (IN.P ?X_G)) RIDE.V)))))
	               ?X_D ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_D GOOD.A))
			(!R2 (?X_D RIDE.N))
			(!R3 (?X_E (PLUR FIELD.N)))
			(!R4 (?X_G RED.A))
			(!R5 (?X_G WAGON.N))
			(!R6 (?X_G (PERTAIN-TO ?X_J)))
			(!R7 (?X_F LITTLE.A))
			(!R8 (?X_F BOY.N))
			(!R9 (?X_F (HAS.V ?X_G)))
			(!R10 (?X_J AGENT.N))
			(!R11 (NOT (?X_K AGENT.N)))
			(!R12 (NOT (?X_K ACTION.N)))
			(!R13 (NOT (?X_J = ?X_K)))
		)
		(:STEPS
			(E357.SK
	   (?X_F
	    (LET.V
	     (K (L X (AND (X LITTLE.A) (X MAY.N) (X ((ADV-A (IN.P ?X_G)) RIDE.V))))))))
			(?X_C (?X_K ((MAY.AUX HAVE.V) ?X_D)))
			(E358.SK (?X_J TAKE.27.V ?X_K))
		)
		(:EPISODE-RELATIONS
			(!W1 (E357.SK BEFORE ?X_C))
			(!W2 (?X_C BEFORE E358.SK))
		)
	)
	(
			"A little boy has a red wagon of a agent lets little may riding."
			"X_K has a good ride may."
			"A agent take.265s X_K."
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) SPEND.1.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A ((BEST.ADV ARE.V) (K (PLUR FRIEND.N)))))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) SPEND.1.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) SPEND.1.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) SPEND.1.V) ?X_B))
			(?X_C (?X_A SPEND.1.V))
			(?X_C (?X_A ((TOGETHER.ADV SPEND.1.V) ?X_B)))
			(?X_C (?X_A (LOCATION_ADV.? SPEND.1.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((TOGETHER.ADV (ALWAYS.ADV FIND.78.V)) ?O)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?O ENTITY.N))
			(!R4 (?X_A ((BEST.ADV ARE.V) (K (PLUR FRIEND.N)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?O (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?O)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?O (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?O))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?O (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_C))
			(!W2 (?X_C (AT-ABOUT ?X_B)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_C))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O (COMPOSITE-SCHEMA-386.PR ?X_A (KA (BE.V ?X_L)) ?X_N ?O)) ** ?E)
		(:ROLES
			(!R1 (?X_L (K BEST.A) MAN.N))
			(!R2 (?X_L (PERTAIN-TO ?X_M)))
			(!R3 (?X_N DESTINATION.N))
			(!R4 (?X_O AGENT.N))
			(!R5 (?X_O ((BEST.ADV ARE.V) (K (PLUR FRIEND.N)))))
			(!R6 (?O ENTITY.N))
		)
		(:STEPS
			(?X_K (?X_M (ASK.V ?X_A (KA (BE.V ?X_L)))))
			(?X_C (?X_M (ASK.V ?X_A (KA (BE.V ?X_L)))))
			(?X_I (?X_O ((ADV-A (IN.P (K (L X (AND (X GRADE.N) (X SCHOOL.N)))))) MEET.V)))
			(?X_G (?X_O ((ADV-A (FROM.P ?L1)) SPEND.1.V) ?X_N))
			(?X_E (?X_O ((TOGETHER.ADV (ALWAYS.ADV FIND.78.V)) ?O)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_C)))
			(!W2 (?X_K (BEFORE ?X_I)))
			(!W3 (?X_K (BEFORE ?X_G)))
			(!W4 (?X_K (BEFORE ?X_E)))
			(!W5 (?X_C (BEFORE ?X_I)))
			(!W6 (?X_C (BEFORE ?X_G)))
			(!W7 (?X_C (BEFORE ?X_E)))
			(!W8 (?X_I (BEFORE ?X_G)))
			(!W9 (?X_I (BEFORE ?X_E)))
			(!W10 (?X_G (BEFORE ?X_E)))
		)
	)
	(
			"X_M asks X_A being a of X_M."
			"X_M asks X_A being a of X_M."
			"A agent best are friends meets in grade school."
			"A agent best are friends spend.327s a destination from L1."
			"A agent best are friends find.332s a entity together always."
		adding constraint (SHE$27$418.SK AGENT.N)
		adding constraint (I$38$419.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_E
	              (COMPOSITE-SCHEMA-387.PR (KE (?X_A GO.V)) ?X_A (K (AS.P (?X_A GO.V)))
	               ?X_H))
	             ** ?E)
		(:ROLES
			(!R1 (?X_E AGENT.N))
			(!R2 (?X_H (K NEW.A) BOOK.N))
			(!R3 (?X_H (PERTAIN-TO ?X_I)))
		)
		(:STEPS
			(?X_D (?X_E ?X_A (AS.P (KE (?X_A GO.V)))))
			(?X_G (?X_E ((CAN.AUX SEE.V) ?X_A (K (AS.P (?X_A GO.V))))))
			(?X_B (?X_I (HAS.V ?X_H)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_G)))
			(!W2 (?X_D (BEFORE ?X_B)))
			(!W3 (?X_G (BEFORE ?X_B)))
		)
	)
	(
			"A agent is as."
			"A agent sees X_A as X_A goes can."
			"X_I has a of X_I."
	)
)



(
	(EPI-SCHEMA ((?X_A LIKE.43.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B DEVICE.N))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.43.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_D)))
			(!W2 (?X_E (SAME-TIME ?X_D)))
			(!W3 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A LIKE.44.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B ACTION.N)))
			(!R3 (NOT (?X_B AGENT.N)))
			(!R4 (?X_B DEVICE.N))
			(!R5 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:POSTCONDS
			(?P1 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A WANT.V ?X_B))
			(?X_C (?X_A (WANT.V ?X_B)))
			(?X_C (?X_A (LIKE.44.V ?X_B)))
			(?X_C (?X_A (LOVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (SAME-TIME ?X_F)))
			(!W2 (?X_C (RIGHT-AFTER ?X_D)))
			(!W3 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-388.PR ?X_G)) ** ?E)
		(:ROLES
			(!R1 (?X_G DEVICE.N))
			(!R2 (?X_G (PERTAIN-TO ?X_F)))
			(!R3 (?X_F AGENT.N))
			(!R4 (NOT (?X_G ACTION.N)))
			(!R5 (NOT (?X_G AGENT.N)))
		)
		(:STEPS
			(?X_E (?X_F LIKE.43.V ?X_G))
			(?X_A (?X_F LIKE.44.V ?X_G))
			(?X_C (?X_F (DONE.AUX (NEAR.ADV BE.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
		)
	)
	(
			"A agent like.355s a device of a agent."
			"A agent like.356s a device of a agent."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.37.V) ?L2) ** ?X_D)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_C (VERY.ADV NERVOUS.A)))
			(!R6 (?X_C NEXT.A))
			(!R7 (?X_B CLASSROOM.N))
			(!R8 (?X_A FRIEND.N))
			(!R9 (?X_A (PERTAIN-TO ?X_C)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.37.V)))
			(?X_D (?X_C ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) GO.37.V))))
			(?X_D (?X_C ((ADV-A (DESTINATION_PREP.? ?L2)) GO.37.V) ?L2))
			(?X_D (?X_C ((ADV-A (INTO.P ?X_B)) GO.37.V)))
			(?X_D (?X_C GO.37.V ?L2))
			(?X_D (?X_C (LOCATION_ADV.? GO.37.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-389.PR ?X_I
	               (K (L X (AND (X NEXT.A) (X (TO.P ?X_I))))) ?L2))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I FRIEND.N))
			(!R2 (?X_H CLASSROOM.N))
			(!R3 (?X_I (PERTAIN-TO ?X_J)))
			(!R4 (?X_J AGENT.N))
			(!R5 (?X_J (VERY.ADV NERVOUS.A)))
			(!R6 (?X_J NEXT.A))
			(!R7 (?L2 DESTINATION.N))
		)
		(:STEPS
			(?X_E (?X_J (SEE.V ?X_I)))
			(E19.SK (?X_J (TO.P ?X_I)))
			(?X_G (?X_J ((ADV-A (FROM.P ?L1)) GO.37.V) ?L2))
			(?X_B (?X_J (SEE.V ?X_I)))
			(?X_C (?X_J (SIT.V (K (L X (AND (X NEXT.A) (X (TO.P ?X_I))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_B)))
			(!W2 (?X_E (BEFORE ?X_C)))
			(!W3 (?X_G (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_C)))
			(!W5 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"A agent very nervous next sees a friend of a agent very nervous next."
			"A agent very nervous next is to."
			"A agent very nervous next go.1s a destination from L1."
			"A agent very nervous next sees a friend of a agent very nervous next."
			"A agent very nervous next sits next to."
	)
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P ?X_C)) PUT.10.V) ?X_B)) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_C CONTAINER.N))
			(!R4 (NOT (?X_C AGENT.N)))
			(!R5 (?X_B SMALLER-THAN ?X_C))
			(!R6 (?X_C GRAVE.N))
			(!R7 (?X_B (K DEAD.A) DOG.N))
			(!R8 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (IN.P ?X_C))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B (IN.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (IN.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D (?X_A ((ADV-A (INTO.P ?X_C)) PUT.10.V) ?X_B))
			(?X_D (?X_A ((ADV-A (INSIDE.P ?X_C)) PUT.10.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (SAME-TIME ?X_G)))
			(!W2 (?X_D (RIGHT-AFTER ?X_E)))
			(!W3 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A (((ADV-A (IN.P ?X_C)) PUT.11.V) ?X_B)) ** ?X_E)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_C CONTAINER.N))
			(!R4 (NOT (?X_C AGENT.N)))
			(!R5 (?X_B SMALLER-THAN ?X_C))
			(!R6 (?X_C GRAVE.N))
			(!R7 (?X_B (PERTAIN-TO ?X_A)))
			(!R8 (?X_B (K DEAD.A) DOG.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B (IN.P ?X_C))))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B (IN.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (?X_B (IN.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_E (?X_A ((ADV-A (INTO.P ?X_C)) PUT.11.V) ?X_B))
			(?X_E (?X_A ((ADV-A (INSIDE.P ?X_C)) PUT.11.V) ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (RIGHT-AFTER ?X_D)))
			(!W2 (?X_E (SAME-TIME ?X_G)))
			(!W3 (?X_F (BEFORE ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 0.9))
			(!N3 (!R4 NECESSARY-TO-DEGREE 0.9))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-390.PR ?X_N ?X_E ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_E TREE.N))
			(!R2 (?X_M SMALLER-THAN ?X_N))
			(!R3 (?X_M (PERTAIN-TO ?X_L)))
			(!R4 (?X_M (K DEAD.A) DOG.N))
			(!R5 (?X_N CONTAINER.N))
			(!R6 (?X_N GRAVE.N))
			(!R7 (?X_L MAN.N))
			(!R8 (NOT (?X_M AGENT.N)))
			(!R9 (NOT (?X_N AGENT.N)))
		)
		(:STEPS
			(?X_K (?X_L (DIG.V ?X_N)))
			(?X_I (?X_L (PUT.V ?X_M ?X_N)))
			(?X_B (?X_L (((ADV-A (IN.P ?X_N)) PUT.10.V) ?X_M)))
			(?X_B (?X_L (((ADV-A (IN.P ?X_N)) PUT.11.V) ?X_M)))
			(?X_G (?X_L ((IN.PRT ((ADV-A (WITH.P (K DIRT.N))) FILL.V)) ?X_N)))
			(?X_D
	   (?X_L
	    (((ADV-A (ON.P (K (L X (AND (X TOP.N) (X (OF.P ?X_N))))))) PLANT.V) ?X_E)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_K (BEFORE ?X_G)))
			(!W2 (?X_K (BEFORE ?X_D)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_G (BEFORE ?X_D)))
		)
	)
	(
			"A man digs a container grave."
			"A man puts a of a man a container grave."
			"A man put.37s a of a man in a container grave."
			"A man put.38s a of a man in a container grave."
			"A man fills a container grave in with dirt."
			"A man plants a tree on top of."
	)
)



(
	(EPI-SCHEMA ((?X_A MAKE.14.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (?X_B GOOD.A))
			(!R4 (?X_B SHADE.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_B EXIST.V)))))
			(?G2 (?X_A (WANT.V (KA (HAVE.V ?X_B)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_B EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_B EXIST.V))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I (COMPOSITE-SCHEMA-391.PR (KE (?X_A (CAN.AUX BE.V))) ?X_F ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_F (PLUR WOOD.N)))
			(!R2 (?X_G MAMMA.N))
			(!R3 (?X_H SING.V))
			(!R4 (?X_G (PERTAIN-TO ?X_H)))
			(!R5 (?X_I (AS.ADV BLUE.A)))
			(!R6 (?X_I SKY.N))
			(!R7 (?X_K GOOD.A))
			(!R8 (?X_K SHADE.N))
			(!R9 (?X_J AGENT.N))
			(!R10 (NOT (?X_K AGENT.N)))
		)
		(:STEPS
			(?X_B (?X_I (AS.P (KE (?X_A (CAN.AUX BE.V))))))
			(?X_C ((SET-OF ?X_H ?X_G) (IN.P ?X_F)))
			(?X_E (?X_J MAKE.14.V ?X_K))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_B (BEFORE ?X_C)))
		)
	)
	(
			"A as blue sky is as."
			"A sing and a mamma of a sing are in."
			"A agent make.43s a good shade."
		adding constraint (I$15$70.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_H
	              (COMPOSITE-SCHEMA-392.PR
	               (KE (AND ((K KIND.N) OF.P) ((K KIND.N) GROSS.A))) ?X_I))
	             ** ?E)
		(:ROLES
			(!R1 (?X_A (SET-OF AGENT.N)))
			(!R2 (?X_H AGENT.N))
			(!R3 (?X_I FOOD.N))
		)
		(:STEPS
			(?X_C (?X_A (ORDER.V ?X_I)))
			(?X_E (?X_I (BE.V (KE (AND ((K KIND.N) OF.P) ((K KIND.N) GROSS.A))))))
			(?X_G (MUST.AUX-S (?X_H ((AWAY.ADV THROW.V) ?X_I))))
			(?X_K (?X_H ((NEVER.ADV (AGAIN.ADV GOT.V)) ?X_I)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_G)))
			(!W3 (?X_C (BEFORE ?X_K)))
			(!W4 (?X_E (BEFORE ?X_G)))
			(!W5 (?X_E (BEFORE ?X_K)))
			(!W6 (?X_G (BEFORE ?X_K)))
		)
	)
	(
			"A agent orders a food."
			"A food is and kind of kind gross."
			"A agent throws a food must away."
			"A agent gets a food never again."
	)
)



(
	(EPI-SCHEMA ((?X_A FIND.79.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B STORE.N))
			(!R4 (?X_B TALL.A))
			(!R5 (?X_B BIG.A))
			(!R6 (?X_A MALE.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_D))
			(!W2 (?X_D (AT-ABOUT ?X_C)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_D))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A FIND.38.V ?X_B) ** ?X_E)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L LOCATION.N))
			(!R3 (?X_B ENTITY.N))
			(!R4 (?X_A MALE.A))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L)))
			(?I2 (?X_B (AT.P ?L)))
			(?I3 (?X_A ((ADV-A (FOR.P ?X_B)) SEARCH.V)))
			(?I4 (NOT (?X_A (KNOW.V (THAT (?X_B (AT.P ?L)))))))
			(?I5 (NOT (?X_A (HAVE.V ?X_B))))
		)
		(:POSTCONDS
			(?P1 (?X_A (KNOW.V (THAT (?X_B (AT.P ?L))))))
			(?P2 (?X_A (HAVE.V ?X_B)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I3 BEFORE ?X_E))
			(!W2 (?X_E (BEFORE ?X_D)))
			(!W3 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
		(:SUBORDINATE-CONSTRAINTS
			(!S1 ((?P1<- ?I3) = ?X_E))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_L (COMPOSITE-SCHEMA-393.PR ?X_D ?X_K ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_D (PLUR PANT.N)))
			(!R2 (?X_K TALL.A))
			(!R3 (?X_K BIG.A))
			(!R4 (?X_K STORE.N))
			(!R5 (?X_L AGENT.N))
			(!R6 (?X_L MALE.A))
			(!R7 (?X_M ENTITY.N))
		)
		(:STEPS
			(?X_J (?X_L FIND.79.V ?X_K))
			(?X_F (?X_L FIND.38.V ?X_M))
			(?X_H (?X_A FIT.V))
			(?X_C (?X_L ((THERE.ADV BUY.V) ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_C)))
			(!W3 (?X_F (BEFORE ?X_C)))
			(!W4 (?X_H (BEFORE ?X_C)))
		)
	)
	(
			"A agent male find.66s a tall big store."
			"A agent male find.67s a entity."
			"X_A fits."
			"A agent male buys a pants there."
		adding constraint (I$0$100.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) GO.74.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_A (SO.ADV UPSET.A)))
			(!R6 (?X_B MALL.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C
	   ((ADV-E (DURING (K YESTERDAY.N)))
	    (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) ((ADV-A (TO.P ?X_B)) GO.74.V)))))
			(?X_C
	   (?X_A ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.74.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) GO.74.V) ?X_B))
			(?X_C (?X_A GO.74.V))
			(?X_C (?X_A GO.74.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? GO.74.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A
	              (COMPOSITE-SCHEMA-394.PR ?X_H (KE (?X_A (BE.V ?X_H))) (NO.D SALE.N)
	               ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_H SALE.N))
			(!R2 (?X_K DESTINATION.N))
			(!R3 (?X_K MALL.N))
			(!R4 (?X_L AGENT.N))
			(!R5 (?X_L (SO.ADV UPSET.A)))
		)
		(:STEPS
			(?X_J (?X_L ((ADV-A (FROM.P ?L1)) GO.74.V) ?X_K))
			(?X_G (?X_A (BE.V ?X_H)))
			(?X_E (?X_L (THINK.V (KE (?X_A (BE.V ?X_H))))))
			(?X_C (?X_A (BE.V (NO.D SALE.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_G)))
			(!W2 (?X_J (BEFORE ?X_E)))
			(!W3 (?X_J (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_C)))
			(!W5 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A agent so upset go.79s a destination mall from L1."
			"X_A is a sale."
			"A agent so upset thinks X_A is a sale."
			"X_A is no sale."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.75.V) (KA (BUY.V ?X_C))) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (BUY.V ?X_C)) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (BUY.V ?X_C)))))
			(!R5 (?X_C SNACK.N))
			(!R6 (?X_A ARM.N))
			(!R7 (?X_A (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P (KA (BUY.V ?X_C)))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P (KA (BUY.V ?X_C))))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P (KA (BUY.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B
	    ((ADV-A (DESTINATION_PREP.? (KA (BUY.V ?X_C))))
	     ((ADV-A (FOR.P (KA (BUY.V ?X_C)))) GO.75.V))))
			(?X_D
	   (?X_B
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (BUY.V ?X_C)))) GO.75.V))))
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? (KA (BUY.V ?X_C)))) GO.75.V)
	    (KA (BUY.V ?X_C))))
			(?X_D (?X_B GO.75.V))
			(?X_D (?X_B GO.75.V (KA (BUY.V ?X_C))))
			(?X_D (?X_B (LOCATION_ADV.? GO.75.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-395.PR ?X_E (KA (BUY.V ?X_J)))) ** ?E)
		(:ROLES
			(!R1 (?X_E SNACK.N))
			(!R2 (?X_H BALL.N))
			(!R3 (?X_H GAME.N))
			(!R4 (?X_I ARM.N))
			(!R5 (?X_I (PERTAIN-TO ?X_K)))
			(!R6 ((KA (BUY.V ?X_J)) DESTINATION.N))
			(!R7 (?X_J SNACK.N))
			(!R8 (?X_K AGENT.N))
		)
		(:STEPS
			(?X_G (?X_K ((ADV-A (AT.P ?X_H)) BE.V)))
			(?X_D (?X_K (NEED.V ?X_E)))
			(?X_B (?X_K ((ADV-A (FROM.P ?L1)) GO.75.V) (KA (BUY.V ?X_J))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_D)))
			(!W2 (?X_G (BEFORE ?X_B)))
			(!W3 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent is at a ball game."
			"A agent needs a snack."
			"A agent go.96s buying a snack from L1."
	)
)



(
	(EPI-SCHEMA ((?X_B ENJOY_ACTION.24.V
	              (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))))
	             ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 ((KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))) ACTION.N))
			(!R3 (?X_A (PERTAIN-TO ?X_B)))
			(!R4 (?X_A (TO.P (K TYKE.N))))
			(!R5 (?X_A (TO.P ?X_B)))
			(!R6 (?X_A BALL.N))
		)
		(:PRECONDS
			(?I1
	   (?X_B
	    (THINK.V
	     (THAT ((KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_B (WANT.V (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))))))
			(?X_C (?X_B (LIKE.V (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))))))
			(?X_C (?X_B (LOVE.V (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))))))
			(?X_C (?X_B (ENJOY.V (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA (((K TYKE.N) TAKE.28.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 ((K TYKE.N) AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT ((K TYKE.N) = ?X_B)))
			(!R6 (?X_B BALL.N))
			(!R7 (?X_B (TO.P (K TYKE.N))))
			(!R8 (?X_B (TO.P ?X_A)))
			(!R9 (?X_B (PERTAIN-TO ?X_A)))
		)
		(:GOALS
			(?G1 ((K TYKE.N) (WANT.V (THAT ((K TYKE.N) (HAVE.V ?X_B))))))
			(?G2 ((K TYKE.N) (NEED.V ?X_B)))
			(?G3 ((K TYKE.N) (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT ((K TYKE.N) HAVE.V ?X_B)))
			(?I2 ((K TYKE.N) (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 ((K TYKE.N) HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_J
	              (COMPOSITE-SCHEMA-396.PR ?X_G
	               (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))) ?X_K))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G BALL.N))
			(!R2 (?X_K (PERTAIN-TO ?X_J)))
			(!R3 (?X_K (TO.P ?X_J)))
			(!R4 (?X_J AGENT.N))
			(!R5 ((KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N))) ACTION.N))
			(!R6 ((K TYKE.N) AGENT.N))
			(!R7 (?X_K BALL.N))
			(!R8 (?X_K (TO.P (K TYKE.N))))
			(!R9 (NOT (?X_K AGENT.N)))
			(!R10 (NOT (?X_K ACTION.N)))
			(!R11 (NOT ((K TYKE.N) = ?X_K)))
		)
		(:STEPS
			(?X_I
	   (?X_J ENJOY_ACTION.24.V
	    (KA (((ADV-A (WITH.P (K TYKE.N))) PLAY.V) (K BALL.N)))))
			(?X_F (?X_J ((CAN.AUX CATCH.V) ?X_G)))
			(?X_D (?X_J (ROLL.V ?X_K)))
			(?X_B ((K TYKE.N) TAKE.28.V ?X_K))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_F)))
			(!W2 (?X_I (BEFORE ?X_D)))
			(!W3 (?X_I (BEFORE ?X_B)))
			(!W4 (?X_F (BEFORE ?X_D)))
			(!W5 (?X_F (BEFORE ?X_B)))
			(!W6 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent enjoy action.117s with tyke playing ball."
			"A agent catches a ball can."
			"A agent rolls a ball to tyke of a agent to a agent."
			"Tyke take.107s a ball to tyke of a agent to a agent."
	)
)



(
	(EPI-SCHEMA ((?X_A ((OUT.PRT GET.51.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B SHOWER.V))
			(!R7 (?X_B WARM.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?X_H (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
			(!W7 (?X_F (AT-ABOUT ?X_E)))
			(!W8 (?X_F (AFTER ?X_G)))
			(!W9 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((OUT.PRT GET.52.V) ?X_B)) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B WARM.A))
			(!R7 (?X_B SHOWER.V))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?X_H (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_D (AFTER ?X_C)))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
			(!W7 (?X_F (AT-ABOUT ?X_E)))
			(!W8 (?X_F (AFTER ?X_G)))
			(!W9 (?X_H (AT-ABOUT ?X_I)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_O
	              (COMPOSITE-SCHEMA-397.PR (K COLD.A)
	               (K ((ADV-A (IN.P ?X_P)) BETTER.A)) (K (BACK.ADV (IN.P ?X_P)))
	               ?X_P))
	             ** ?E)
		(:ROLES
			(!R1 (?X_O MAN.N))
			(!R2 (?X_P WARM.A))
			(!R3 (?X_P SHOWER.V))
			(!R4 (NOT (?X_P AGENT.N)))
			(!R5 (NOT (?X_P ACTION.N)))
			(!R6 (NOT (?X_O = ?X_P)))
		)
		(:STEPS
			(?X_J (?X_O (FEEL.V (K COLD.A))))
			(?X_H (?X_O (TAKE.V ?X_P)))
			(?X_F (?X_O (FEEL.V (K ((ADV-A (IN.P ?X_P)) BETTER.A)))))
			(?X_A (?X_O ((OUT.PRT GET.51.V) ?X_P)))
			(?X_B (?X_O ((OUT.PRT GET.52.V) ?X_P)))
			(?X_D (?X_O (GET.V (K (BACK.ADV (IN.P ?X_P))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_D)))
			(!W4 (?X_H (BEFORE ?X_F)))
			(!W5 (?X_H (BEFORE ?X_D)))
			(!W6 (?X_F (BEFORE ?X_D)))
			(!W7 (?X_A (BEFORE ?X_D)))
			(!W8 (?X_B (BEFORE ?X_D)))
		)
	)
	(
			"A man feels cold."
			"A man takes a warm showering."
			"A man feels in a warm showering better."
			"A man get.121s a warm showering out."
			"A man get.122s a warm showering out."
			"A man gets back in a warm showering."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) WALK.11.V) ?L2) ** ?X_C)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?L2 DESTINATION.N))
			(!R4 (NOT (?L1 = ?L2)))
			(!R5 (?X_A ROOM.N))
			(!R6 (?X_A LIVING.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?L2)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?L2))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?L2)))
		)
		(:PARAPHRASES
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.11.V)))
			(?X_C
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.11.V))))
			(?X_C (?X_B ((ADV-A (DESTINATION_PREP.? ?L2)) WALK.11.V) ?L2))
			(?X_C (?X_B ((ADV-A (INTO.P ?X_A)) WALK.11.V)))
			(?X_C (?X_B WALK.11.V ?L2))
			(?X_C (?X_B (LOCATION_ADV.? WALK.11.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_B LIKE.45.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B CAT.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C BALL.N))
			(!R5 (?X_C (ON.P ?X_A)))
			(!R6 (?X_A FLOOR.N))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V ?X_C))
			(?X_D (?X_B (WANT.V ?X_C)))
			(?X_D (?X_B (LIKE.45.V ?X_C)))
			(?X_D (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C (((ADV-A (WITH.P ?X_A)) PLAY.29.V) ?X_D)) ** ?X_G)
		(:ROLES
			(!R1 (?X_C CAT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (?X_A BALL.N))
			(!R4 (?X_B FLOOR.N))
			(!R5 (?X_A (ON.P ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D EXIST.V)))))
			(?G2 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D EXIST.V)))
		)
		(:POSTCONDS
			(?X_E (?X_D EXIST.V))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
			(!W2 (?X_G (AT-ABOUT ?X_H)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_N (COMPOSITE-SCHEMA-398.PR ?L2 ?X_O ?X_M)) ** ?E)
		(:ROLES
			(!R1 (?X_K LIVING.N))
			(!R2 (?X_K ROOM.N))
			(!R3 (?X_L FLOOR.N))
			(!R4 (?X_O (ON.P ?X_L)))
			(!R5 (?L2 DESTINATION.N))
			(!R6 (NOT (?X_M AGENT.N)))
			(!R7 (?X_N CAT.N))
			(!R8 (?X_O BALL.N))
			(!R9 (NOT (?X_O ACTION.N)))
			(!R10 (NOT (?X_O AGENT.N)))
		)
		(:STEPS
			(?X_J (?X_N ((ADV-A (FROM.P ?L1)) WALK.11.V) ?L2))
			(?X_H (?X_M (BE.V ?X_O)))
			(?X_F (?X_N ((AROUND.ADV SWAT.V) ?X_O)))
			(?X_D (?X_N (((ADV-A (WITH.P ?X_O)) PLAY.29.V) ?X_M)))
			(?X_B (?X_N LIKE.45.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_J (BEFORE ?X_H)))
			(!W2 (?X_J (BEFORE ?X_F)))
			(!W3 (?X_J (BEFORE ?X_D)))
			(!W4 (?X_J (BEFORE ?X_B)))
			(!W5 (?X_H (BEFORE ?X_F)))
			(!W6 (?X_H (BEFORE ?X_D)))
			(!W7 (?X_H (BEFORE ?X_B)))
			(!W8 (?X_F (BEFORE ?X_D)))
			(!W9 (?X_F (BEFORE ?X_B)))
			(!W10 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A cat walk.131s a destination from L1."
			"X_M is a ball on a floor."
			"A cat swats a ball on a floor around."
			"A cat play.143s X_M with a ball on a floor."
			"A cat like.128s a ball on a floor."
		adding constraint (SHE$7$194.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.46.V ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT (?X_C ACTION.N)))
			(!R3 (NOT (?X_C AGENT.N)))
			(!R4 (?X_C ROSE.N))
			(!R5 (?X_C WATCH.N))
			(!R6 (?X_C GOLD.N))
			(!R7 (?X_A MOST.A))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V ?X_C)))))
		)
		(:PARAPHRASES
			(?X_D (?X_B WANT.V ?X_C))
			(?X_D (?X_B (WANT.V ?X_C)))
			(?X_D (?X_B (LIKE.46.V ?X_C)))
			(?X_D (?X_B (LOVE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ENJOY_ACTION.25.V (KA (BUY.V ?X_B))) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 ((KA (BUY.V ?X_B)) ACTION.N))
			(!R3 (?X_B NEW.A))
			(!R4 (?X_B WATCH.N))
		)
		(:PRECONDS
			(?I1 (?X_A (THINK.V (THAT ((KA (BUY.V ?X_B)) FUN.A)))))
		)
		(:PARAPHRASES
			(?X_C (?X_A (WANT.V (KA (BUY.V ?X_B)))))
			(?X_C (?X_A (LIKE.V (KA (BUY.V ?X_B)))))
			(?X_C (?X_A (LOVE.V (KA (BUY.V ?X_B)))))
			(?X_C (?X_A (ENJOY.V (KA (BUY.V ?X_B)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_P (COMPOSITE-SCHEMA-399.PR ?X_O (KA (BUY.V ?X_N)))) ** ?E)
		(:ROLES
			(!R1 (?X_H MOST.A))
			(!R2 (?X_M JEWELRY.N))
			(!R3 (?X_M STORE.N))
			(!R4 (?X_N NEW.A))
			(!R5 (?X_N WATCH.N))
			(!R6 ((KA (BUY.V ?X_N)) ACTION.N))
			(!R7 (?X_O WATCH.N))
			(!R8 (?X_O ROSE.N))
			(!R9 (?X_O GOLD.N))
			(!R10 (NOT (?X_O ACTION.N)))
			(!R11 (NOT (?X_O AGENT.N)))
			(!R12 (?X_P AGENT.N))
		)
		(:STEPS
			(?X_L (?X_A ((ADV-A (AT.P ?X_M)) BE.V)))
			(?X_E (?X_P (BUY.V ?X_O)))
			(?X_C (?X_P ((HOME.ADV WEAR.V) ?X_O)))
			(?X_J (?X_P ENJOY_ACTION.25.V (KA (BUY.V ?X_N))))
			(?X_G (?X_P LIKE.46.V ?X_O))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_L (BEFORE ?X_E)))
			(!W2 (?X_L (BEFORE ?X_C)))
			(!W3 (?X_E (BEFORE ?X_C)))
			(!W4 (?X_J (BEFORE ?X_G)))
		)
	)
	(
			"X_A is at a jewelry store."
			"A agent buys a watch rose gold."
			"A agent wears a watch rose gold home."
			"A agent enjoy action.153s buying a new watch."
			"A agent like.144s a watch rose gold."
	)
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-400.PR (K (TO.P (?X_A (PLUR FLOWER.N)))))) **
	             ?E)
		(:ROLES
			(!R1 (?X_F HEDGE.N))
			(!R2 (?X_I (PLUR FLOWER.N)))
		)
		(:STEPS
			(?X_C (?X_F ((ADV-A (FOR.P (KA GROW.V))) START.V)))
			(?X_E ((K SPRING.N) (AROUND.PRT COME.V)))
			(?X_H (?X_F (START.V (K (TO.P (?X_A (PLUR FLOWER.N)))))))
			(?X_K (?X_I GROW.V))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_H)))
			(!W3 (?X_C (BEFORE ?X_K)))
			(!W4 (?X_E (BEFORE ?X_H)))
			(!W5 (?X_E (BEFORE ?X_K)))
			(!W6 (?X_H (BEFORE ?X_K)))
		)
	)
	(
			"A hedge starts for growing."
			"Spring comes around."
			"A hedge starts to X_A flowers."
			"A flowers grow."
	)
)



(
	(EPI-SCHEMA ((?X_B ((ADV-A (FROM.P ?L1)) GO.23.V) ?X_C) ** ?X_D)
		(:ROLES
			(!R1 (?X_B MAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_C DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_C)))
			(!R5 (?X_C CAFETERIA.N))
			(!R6 (?X_A (PERTAIN-TO ?X_B)))
			(!R7 (?X_A LUNCH.N))
		)
		(:GOALS
			(?G1 (?X_B (WANT.V (KA ((ADV-A (AT.P ?X_C)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_B (AT.P ?L1)))
			(?I2 (NOT (?X_B (AT.P ?X_C))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_B (AT.P ?L1))))
			(?P2 (?X_B (AT.P ?X_C)))
		)
		(:PARAPHRASES
			(?X_D
	   (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) ((ADV-A (TO.P ?X_C)) GO.23.V))))
			(?X_D
	   (?X_B ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.23.V))))
			(?X_D (?X_B ((ADV-A (DESTINATION_PREP.? ?X_C)) GO.23.V) ?X_C))
			(?X_D (?X_B GO.23.V))
			(?X_D (?X_B GO.23.V ?X_C))
			(?X_D (?X_B (LOCATION_ADV.? GO.23.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_D))
			(!W2 (?I2 BEFORE ?X_D))
			(!W3 (?P1 AFTER ?X_D))
			(!W4 (?P2 AFTER ?X_D))
			(!W5 (?G1 CAUSE-OF ?X_D))
			(!W6 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A ((ADV-A (FROM.P ?L1)) BECOME.6.V) ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A WOMAN.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 (?X_B DESTINATION.N))
			(!R4 (NOT (?L1 = ?X_B)))
			(!R5 (?X_B FRIEND.N))
			(!R6 (?X_B NEW.A))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (KA ((ADV-A (AT.P ?X_B)) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_A (AT.P ?L1)))
			(?I2 (NOT (?X_A (AT.P ?X_B))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_A (AT.P ?L1))))
			(?P2 (?X_A (AT.P ?X_B)))
		)
		(:PARAPHRASES
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.6.V)))
			(?X_C
	   (?X_A
	    ((ADV-A (FROM.P ?L1)) ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.6.V))))
			(?X_C (?X_A ((ADV-A (DESTINATION_PREP.? ?X_B)) BECOME.6.V) ?X_B))
			(?X_C (?X_A BECOME.6.V))
			(?X_C (?X_A BECOME.6.V ?X_B))
			(?X_C (?X_A (LOCATION_ADV.? BECOME.6.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_C))
			(!W2 (?I2 BEFORE ?X_C))
			(!W3 (?P1 AFTER ?X_C))
			(!W4 (?P2 AFTER ?X_C))
			(!W5 (?G1 CAUSE-OF ?X_C))
			(!W6 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.53.V ?X_B) ** ?X_D)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_B LUNCH.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (RIGHT-AFTER ?X_C)))
			(!W6 (?X_D (SAME-TIME ?X_F)))
			(!W7 (?X_E (BEFORE ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.54.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A MAN.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_B (PERTAIN-TO ?X_A)))
			(!R7 (?X_B LUNCH.N))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (BEFORE ?X_D)))
			(!W6 (?X_E (SAME-TIME ?X_D)))
			(!W7 (?X_E (RIGHT-AFTER ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K (COMPOSITE-SCHEMA-401.PR ?X_J ?X_N ?X_L)) ** ?E)
		(:ROLES
			(!R1 (?X_J DESTINATION.N))
			(!R2 (?X_J CAFETERIA.N))
			(!R3 (?X_K MAN.N))
			(!R4 (?X_L (PERTAIN-TO ?X_K)))
			(!R5 (?X_L LUNCH.N))
			(!R6 (NOT (?X_L AGENT.N)))
			(!R7 (NOT (?X_L ACTION.N)))
			(!R8 (NOT (?X_K = ?X_L)))
			(!R9 (?X_M WOMAN.N))
			(!R10 (?X_N DESTINATION.N))
			(!R11 (?X_N FRIEND.N))
			(!R12 (?X_N NEW.A))
		)
		(:STEPS
			(?X_I (?X_K ((ADV-A (FROM.P ?L1)) GO.23.V) ?X_J))
			(?X_G (?X_K GET.54.V ?X_L))
			(?X_A (?X_K GET.53.V ?X_L))
			(?X_E (?X_K (DOWN.ADV ((ADV-A (BY.P ?X_K)) SIT.V))))
			(?X_C (?X_M ((ADV-A (FROM.P ?L1)) BECOME.6.V) ?X_N))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_I (BEFORE ?X_A)))
			(!W2 (?X_I (BEFORE ?X_E)))
			(!W3 (?X_I (BEFORE ?X_C)))
			(!W4 (?X_G (BEFORE ?X_A)))
			(!W5 (?X_G (BEFORE ?X_E)))
			(!W6 (?X_G (BEFORE ?X_C)))
			(!W7 (?X_A (BEFORE ?X_E)))
			(!W8 (?X_A (BEFORE ?X_C)))
			(!W9 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"A man go.167s a destination cafeteria from L1."
			"A man get.178s a lunch of a man."
			"A man get.177s a lunch of a man."
			"A man sits down by a man."
			"A woman become.168s a destination friend new from L1."
		adding constraint (SHE$8$240.SK AGENT.N)
		adding constraint (HE$5$241.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_C MAKE.15.V ?X_D) ** ?X_E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (NOT (?X_D AGENT.N)))
			(!R3 (?X_D NOISE.N))
			(!R4 (?X_D LOUD.A))
			(!R5 (?X_A (PERTAIN-TO ?X_C)))
			(!R6 (?X_A (PLUR EAR.N)))
			(!R7 (?X_B (PERTAIN-TO ?X_C)))
			(!R8 (?X_B (PLUR HAND.N)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (THAT (?X_D EXIST.V)))))
			(?G2 (?X_C (WANT.V (KA (HAVE.V ?X_D)))))
		)
		(:PRECONDS
			(?I1 (NOT (?X_D EXIST.V)))
		)
		(:POSTCONDS
			(?P1 (?X_D EXIST.V))
			(?P2 (?X_C (HAVE.V ?X_D)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C REQUEST_ACTION.19.V ?X_D (KA (MAKE.V ?X_E))) ** ?E)
		(:ROLES
			(!R1 (?X_C AGENT.N))
			(!R2 (?X_D AGENT.N))
			(!R3 ((KA (MAKE.V ?X_E)) ACTION.N))
			(!R4 (NOT (?X_C = ?X_D)))
			(!R5 (?X_E NOISE.N))
			(!R6 (?X_E LOUD.A))
			(!R7 (?X_A (PERTAIN-TO ?X_D)))
			(!R8 (?X_A (PLUR HAND.N)))
			(!R9 (?X_B (PLUR EAR.N)))
			(!R10 (?X_B (PERTAIN-TO ?X_D)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V ?X_D (KA (MAKE.V ?X_E)))))
			(?G2 (?X_C (WANT.V (THAT (?X_C (MAKE.V ?X_E))))))
		)
		(:STEPS
			(?E1 (?X_C (ASK.V ?X_D (KA (MAKE.V ?X_E)))))
			(?X_F (?X_D (MAKE.V ?X_E)))
		)
		(:PARAPHRASES
			(?E (?X_C (ASK.V ?X_D (KA (MAKE.V ?X_E)))))
			(?E (?X_C (TELL.V ?X_D (KA (MAKE.V ?X_E)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?G1 CAUSE-OF ?E1))
			(!W2 (?E1 CAUSE-OF ?X_F))
			(!W3 (?X_F (AT-ABOUT ?X_G)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_I
	              (COMPOSITE-SCHEMA-402.PR ?X_G ?X_F ?X_H ?X_I (KA (MAKE.V ?X_H))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_G (PLUR HAND.N)))
			(!R2 (?X_F (PLUR EAR.N)))
			(!R3 (?X_F (PERTAIN-TO ?X_I)))
			(!R4 (?X_G (PERTAIN-TO ?X_I)))
			(!R5 (NOT (?X_H AGENT.N)))
			(!R6 (?X_I AGENT.N))
			(!R7 (?X_H NOISE.N))
			(!R8 (?X_H LOUD.A))
			(!R9 ((KA (MAKE.V ?X_H)) ACTION.N))
			(!R10 (NOT (?X_J = ?X_I)))
			(!R11 (?X_J AGENT.N))
		)
		(:STEPS
			(?X_E (?X_I (COVER.V ?X_F ?X_G)))
			(?X_A (?X_I (((ADV-A (WITH.P ?X_G)) COVER.V) ?X_F)))
			(?X_C (?X_I MAKE.15.V ?X_H))
			(?E_1 (?X_J REQUEST_ACTION.19.V ?X_I (KA (MAKE.V ?X_H))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_E (BEFORE ?X_A)))
			(!W2 (?X_E (BEFORE ?E_1)))
			(!W3 (?X_A (BEFORE ?E_1)))
		)
	)
	(
			"A agent covers a ears of a agent a hands of a agent."
			"A agent covers a ears of a agent with a hands of a agent."
			"A agent make.191s a noise loud."
			"A agent request action.200s a agent making a noise loud."
		adding constraint (I$0$252.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_A GET.55.V
	              (KE
	               (?X_B
	                (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N)))))))))
	             ** ?X_D)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2
	   (NOT
	    ((KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))
	     AGENT.N)))
			(!R3
	   (NOT
	    ((KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))
	     ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5
	   (NOT
	    (?X_A =
	     (KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N)))))))))))
		)
		(:GOALS
			(?G1
	   (?X_A
	    (WANT.V
	     (THAT
	      (?X_A
	       (HAVE.V
	        (KE
	         (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))))))))
			(?G2
	   (?X_A
	    (NEED.V
	     (KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N)))))))))))
			(?G3
	   (?X_A
	    (WANT.V
	     (KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N)))))))))))
		)
		(:PRECONDS
			(?I1
	   (NOT
	    (?X_A HAVE.V
	     (KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N)))))))))))
			(?I2 (?X_A (AT.P ?L)))
			(?I3
	   ((KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))
	    (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1
	   (?X_A HAVE.V
	    (KE (?X_B (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_D))
			(!W2 (?I2 PRECOND-OF ?X_D))
			(!W3 (?I3 PRECOND-OF ?X_D))
			(!W4 (?P1 POSTCOND-OF ?X_D))
			(!W5 (?X_D (AT-ABOUT ?X_E)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_D
	              (COMPOSITE-SCHEMA-403.PR ?X_C
	               (KE
	                (?X_I
	                 (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))))
	             ** ?E)
		(:ROLES
			(!R1 (?X_C (REALLY.ADV COOL.A)))
			(!R2 (?X_C (PLUR VIDEO.N)))
			(!R3 (?X_D (IS.V ?X_E)))
			(!R4 (?X_H AGENT.N))
			(!R5
	   (NOT
	    ((KE (?X_I (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))
	     AGENT.N)))
			(!R6
	   (NOT
	    ((KE (?X_I (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))
	     ACTION.N)))
			(!R7
	   (NOT
	    (?X_H =
	     (KE (?X_I (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N)))))))))))
		)
		(:STEPS
			(?X_G
	   (?X_H GET.55.V
	    (KE (?X_I (OF.P (THOSE.D (L X (AND (X NEW.A) (X (PLUR DRONE.N))))))))))
			(?X_B (?X_D (TAKE.V ?X_C)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_B)))
		)
	)
	(
			"A agent get.216s X_I of those new drone."
			"A is X_E takes a really cool videos."
	)
)



(
	(EPI-SCHEMA ((?X_H (COMPOSITE-SCHEMA-404.PR ?X_H (KA HELP.V) ?X_I)) ** ?E)
		(:ROLES
			(!R1 (?X_J WOMAN.N))
			(!R2 (?X_H CRYING.N))
			(!R3 (?X_H BOY.N))
			(!R4 (?X_I HELP.N))
			(!R5 (?X_I (PERTAIN-TO ?X_J)))
		)
		(:STEPS
			(?X_C (?X_H CRY.V))
			(?X_E (?X_J (SEE.V ?X_H)))
			(?X_G (?X_J (WANT.V (KA HELP.V))))
			(?X_A (NOT (?X_H (WANT.V ?X_I))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (BEFORE ?X_E)))
			(!W2 (?X_C (BEFORE ?X_G)))
			(!W3 (?X_C (BEFORE ?X_A)))
			(!W4 (?X_E (BEFORE ?X_G)))
			(!W5 (?X_E (BEFORE ?X_A)))
			(!W6 (?X_G (BEFORE ?X_A)))
		)
	)
	(
			"A crying boy cries."
			"A woman sees a crying boy."
			"A woman wants helping."
			"A crying boy wants a help of a woman not."
	)
)



(
	(EPI-SCHEMA ((?X_M
	              (COMPOSITE-SCHEMA-405.PR ?X_J (KE (?X_M (PET.N ?X_A))) ?X_I ?X_L))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I WATER.N))
			(!R2 (?X_L FINGER.N))
			(!R3 (?X_J GOLDFISH.N))
			(!R4 (?X_M BROTHER.N))
			(!R5 (?X_M (PERTAIN-TO ?X_K)))
			(!R6 (?X_L (PERTAIN-TO ?X_M)))
		)
		(:STEPS
			(?X_D (?X_M (HAVE.V ?X_J)))
			(?X_F (?X_J (LET.V (KE (?X_M (PET.N ?X_A))))))
			(?X_H (?X_M (PUT.V ?X_L ?X_I)))
			(?X_B (?X_M (((ADV-A (IN.P ?X_I)) PUT.V) ?X_L)))
			(?X_O (?X_J (UP.PRT ((ADV-A (TO.P ?X_M)) SWAM.V))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_F)))
			(!W2 (?X_D (BEFORE ?X_H)))
			(!W3 (?X_D (BEFORE ?X_B)))
			(!W4 (?X_D (BEFORE ?X_O)))
			(!W5 (?X_F (BEFORE ?X_H)))
			(!W6 (?X_F (BEFORE ?X_B)))
			(!W7 (?X_F (BEFORE ?X_O)))
			(!W8 (?X_H (BEFORE ?X_B)))
			(!W9 (?X_H (BEFORE ?X_O)))
			(!W10 (?X_B (BEFORE ?X_O)))
		)
	)
	(
			"A brother of X_K has a goldfish."
			"A goldfish lets a brother of X_K pet X_A."
			"A brother of X_K puts a finger of a brother of X_K a water."
			"A brother of X_K puts a finger of a brother of X_K in a water."
			"A goldfish swims up to a brother of X_K."
		adding constraint (ME$2$294.SK AGENT.N)
		adding constraint (HE$19$295.SK AGENT.N)
	)
)



(
	(EPI-SCHEMA ((?X_B LIKE.47.V (K SMASH.N)) ** ?X_C)
		(:ROLES
			(!R1 (?X_B AGENT.N))
			(!R2 (NOT ((K SMASH.N) ACTION.N)))
			(!R3 (NOT ((K SMASH.N) AGENT.N)))
			(!R4 ((K SMASH.N) OBJECT.N))
			(!R5 (?X_B (GET.V (K (SO.ADV BIG.A)))))
			(!R6 (?X_A (FOR.P ?X_B)))
			(!R7 (?X_A (K SMASH.N) CAKE.N))
		)
		(:POSTCONDS
			(?P1 (?X_B (WANT.V (KA (HAVE.V (K SMASH.N))))))
		)
		(:PARAPHRASES
			(?X_C (?X_B WANT.V (K SMASH.N)))
			(?X_C (?X_B (WANT.V (K SMASH.N))))
			(?X_C (?X_B (LIKE.47.V (K SMASH.N))))
			(?X_C (?X_B (LOVE.V (K SMASH.N))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R3 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_A GET.56.V ?X_B) ** ?X_C)
		(:ROLES
			(!R1 (?X_A AGENT.N))
			(!R2 (NOT (?X_B AGENT.N)))
			(!R3 (NOT (?X_B ACTION.N)))
			(!R4 (?L LOCATION.N))
			(!R5 (NOT (?X_A = ?X_B)))
			(!R6 (?X_A (GET.56.V (K (SO.ADV BIG.A)))))
			(!R7 (?X_B (K SMASH.N) CAKE.N))
			(!R8 (?X_B (FOR.P ?X_A)))
		)
		(:GOALS
			(?G1 (?X_A (WANT.V (THAT (?X_A (HAVE.V ?X_B))))))
			(?G2 (?X_A (NEED.V ?X_B)))
			(?G3 (?X_A (WANT.V ?X_B)))
		)
		(:PRECONDS
			(?I1 (NOT (?X_A HAVE.V ?X_B)))
			(?I2 (?X_A (AT.P ?L)))
			(?I3 (?X_B (AT.P ?L)))
		)
		(:POSTCONDS
			(?P1 (?X_A HAVE.V ?X_B))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 PRECOND-OF ?X_C))
			(!W2 (?I2 PRECOND-OF ?X_C))
			(!W3 (?I3 PRECOND-OF ?X_C))
			(!W4 (?P1 POSTCOND-OF ?X_C))
			(!W5 (?X_C (AT-ABOUT ?X_D)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R2 NECESSARY-TO-DEGREE 1.0))
			(!N3 (!R3 NECESSARY-TO-DEGREE 1.0))
			(!N4 (!R5 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_F (COMPOSITE-SCHEMA-406.PR (K SMASH.N) ?X_E)) ** ?E)
		(:ROLES
			(!R1 (?X_E (K SMASH.N) CAKE.N))
			(!R2 (?X_E (FOR.P ?X_F)))
			(!R3 (NOT (?X_E AGENT.N)))
			(!R4 (NOT (?X_E ACTION.N)))
			(!R5 (NOT (?X_F = ?X_E)))
			(!R6 ((K SMASH.N) OBJECT.N))
			(!R7 (?X_F AGENT.N))
			(!R8 (NOT ((K SMASH.N) ACTION.N)))
			(!R9 (NOT ((K SMASH.N) AGENT.N)))
		)
		(:STEPS
			(?X_D (?X_F GET.56.V ?X_E))
			(?X_B (?X_F LIKE.47.V (K SMASH.N)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_D (BEFORE ?X_B)))
		)
	)
	(
			"A agent get.266s a for a agent."
			"A agent like.261s smash."
	)
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.65.V) (KA (UP.PRT PICK.V) ?X_D))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C SON.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (UP.PRT PICK.V) ?X_D) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (UP.PRT PICK.V) ?X_D))))
			(!R5 (?X_D PENNY.N))
			(!R6 (?X_D (ON.P ?X_A)))
			(!R7 (?X_A GROUND.N))
			(!R8 (?X_B AGENT.N))
			(!R9 (?X_C (PERTAIN-TO ?X_B)))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P (KA (UP.PRT PICK.V) ?X_D))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KA (UP.PRT PICK.V) ?X_D)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KA (UP.PRT PICK.V) ?X_D))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT PICK.V) ?X_D)))
	     ((ADV-A (FOR.P (KA (UP.PRT PICK.V) ?X_D))) GO.65.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT PICK.V) ?X_D))) GO.65.V))))
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT PICK.V) ?X_D))) GO.65.V)
	    (KA (UP.PRT PICK.V) ?X_D)))
			(?X_E (?X_C GO.65.V))
			(?X_E (?X_C GO.65.V (KA (UP.PRT PICK.V) ?X_D)))
			(?X_E (?X_C (LOCATION_ADV.? GO.65.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_C ((ADV-A (FROM.P ?L1)) GO.2.V) (KA (UP.PRT PICK.V) ?X_D))
	             ** ?X_E)
		(:ROLES
			(!R1 (?X_C SON.N))
			(!R2 (?L1 LOCATION.N))
			(!R3 ((KA (UP.PRT PICK.V) ?X_D) DESTINATION.N))
			(!R4 (NOT (?L1 = (KA (UP.PRT PICK.V) ?X_D))))
			(!R5 (?X_D PENNY.N))
			(!R6 (?X_C (PERTAIN-TO ?X_A)))
			(!R7 (?X_A AGENT.N))
			(!R8 (?X_D (ON.P ?X_B)))
			(!R9 (?X_B GROUND.N))
		)
		(:GOALS
			(?G1 (?X_C (WANT.V (KA ((ADV-A (AT.P (KA (UP.PRT PICK.V) ?X_D))) BE.V)))))
		)
		(:PRECONDS
			(?I1 (?X_C (AT.P ?L1)))
			(?I2 (NOT (?X_C (AT.P (KA (UP.PRT PICK.V) ?X_D)))))
		)
		(:POSTCONDS
			(?P1 (NOT (?X_C (AT.P ?L1))))
			(?P2 (?X_C (AT.P (KA (UP.PRT PICK.V) ?X_D))))
		)
		(:PARAPHRASES
			(?X_E
	   (?X_C
	    ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT PICK.V) ?X_D)))
	     ((ADV-A (FOR.P (KA (UP.PRT PICK.V) ?X_D))) GO.2.V))))
			(?X_E
	   (?X_C
	    ((ADV-A (FROM.P ?L1))
	     ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT PICK.V) ?X_D))) GO.2.V))))
			(?X_E
	   (?X_C ((ADV-A (DESTINATION_PREP.? (KA (UP.PRT PICK.V) ?X_D))) GO.2.V)
	    (KA (UP.PRT PICK.V) ?X_D)))
			(?X_E (?X_C GO.2.V))
			(?X_E (?X_C GO.2.V (KA (UP.PRT PICK.V) ?X_D)))
			(?X_E (?X_C (LOCATION_ADV.? GO.2.V)))
		)
		(:EPISODE-RELATIONS
			(!W1 (?I1 BEFORE ?X_E))
			(!W2 (?I2 BEFORE ?X_E))
			(!W3 (?P1 AFTER ?X_E))
			(!W4 (?P2 AFTER ?X_E))
			(!W5 (?G1 CAUSE-OF ?X_E))
			(!W6 (?X_E (AT-ABOUT ?X_F)))
		)
		(:NECESSITIES
			(!N1 (!R1 NECESSARY-TO-DEGREE 1.0))
			(!N2 (!R4 NECESSARY-TO-DEGREE 1.0))
		)
	)
	nil
)



(
	(EPI-SCHEMA ((?X_K
	              (COMPOSITE-SCHEMA-407.PR ?X_I (K (PLUR TAIL.N))
	               (KA (UP.PRT PICK.V) ?X_I)))
	             ** ?E)
		(:ROLES
			(!R1 (?X_I PENNY.N))
			(!R2 (?X_H AGENT.N))
			(!R3 (?X_K (PERTAIN-TO ?X_H)))
			(!R4 (?X_J GROUND.N))
			(!R5 (?X_I (ON.P ?X_J)))
			(!R6 (?X_K SON.N))
		)
		(:STEPS
			(?X_G (?X_A (BE.V ?X_I)))
			(?X_E (?X_K ((ADV-A (FROM.P ?L1)) GO.65.V) (KA (UP.PRT PICK.V) ?X_I)))
			(?X_E (?X_K ((ADV-A (FROM.P ?L1)) GO.2.V) (KA (UP.PRT PICK.V) ?X_I)))
			(?X_C (?X_I ((UP.PRT LIE.V) (K (PLUR TAIL.N)))))
		)
		(:EPISODE-RELATIONS
			(!W1 (?X_G (BEFORE ?X_E)))
			(!W2 (?X_G (BEFORE ?X_C)))
			(!W3 (?X_E (BEFORE ?X_C)))
		)
	)
	(
			"X_A is a penny on a ground."
			"A son of a agent go.283s up pick a penny on a ground from L1."
			"A son of a agent go.284s up pick a penny on a ground from L1."
	)
)



))
; got 1042 schemas (635 protoschema matches, 407 stories)
